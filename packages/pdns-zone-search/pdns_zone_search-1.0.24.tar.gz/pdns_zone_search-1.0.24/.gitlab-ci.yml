stages:
  - test
  - build
  - release
  - deploy

variables:
  PYTHON_VERSION: "3.11"

test:
  stage: test
  image: python:3.11
  script:
    - pip install -e .
    - pip install pytest pytest-cov
    - pytest --cov=. -v
    - coverage report
    - coverage xml -o coverage.xml
  coverage: '/TOTAL.* (\d+%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/  # If you add "coverage html" to generate HTML reports
    expire_in: 1 week

build-package:
  stage: build
  image: python:${PYTHON_VERSION}
  script:
    - pip install flit
    - flit build
    # Upload to GitLab Package Registry
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/*.whl "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/$(ls dist/*.whl)"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file dist/*.tar.gz "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/$(ls dist/*.tar.gz)"'
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 day  # Short-term, just needed for the release job
  rules:
    - if: $CI_COMMIT_TAG

release-job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - build-package
  script:
    - echo "Creating release from tag $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    name: "Release $CI_COMMIT_TAG"
    description: "Release created from tag $CI_COMMIT_TAG"
    assets:
      links:
        - name: "Python Wheel"
          url: "${CI_PROJECT_URL}/-/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/$(ls dist/*.whl | xargs basename)"
        - name: "Source Distribution"
          url: "${CI_PROJECT_URL}/-/packages/generic/${CI_PROJECT_NAME}/${CI_COMMIT_TAG}/$(ls dist/*.tar.gz | xargs basename)"
  rules:
    - if: $CI_COMMIT_TAG

deploy-to-pypi:
  stage: deploy
  image: python:${PYTHON_VERSION}
  script:
    - echo "Deploying to PyPi"
    - pip install flit
    - export FLIT_INDEX_URL="https://upload.pypi.org/legacy/"
    - export FLIT_USERNAME="__token__"
    - export FLIT_PASSWORD="$PYPI_PDNS_TOKEN"
    - flit publish
  rules:
    - if: $CI_COMMIT_TAG
