## ams_version=1.0

Model Main_template_project {
	Set locations;
	Index l {
		Range: locations;
	}
	Set warehouses {
		SubsetOf: locations;
	}
	Index w {
		Range: warehouses;
	}
	Set customers {
		SubsetOf: locations;
	}
	Index c {
		Range: customers;
	}
	Parameter demand_condition {
	}
	Parameter demand {
		IndexDomain: (c) | demand_condition;
	}
	Parameter supply {
		IndexDomain: (w);
	}
	Parameter unit_transport_cost {
		IndexDomain: (w,c);
	}
	Constraint satisfy_demand {
		IndexDomain: c;
		Definition: sum(w, transport(w, c)) >= demand(c);
	}
	Constraint satisfy_supply {
		IndexDomain: w;
		Definition: sum(c, transport(w, c)) <= supply(w);
	}
	Variable transport {
		IndexDomain: (w,c) | 1;
		Range: nonnegative;
	}
	Variable total_transport_cost {
		Definition: sum((w, c), unit_transport_cost(w, c) * transport(w, c));
	}
	MathematicalProgram mp {
		Objective: total_transport_cost;
		Direction: minimize;
		Type: Automatic;
	}
	Procedure MainInitialization {
		Comment: "Add initialization statements here that do NOT require any library being initialized already.";
	}
	Procedure PostMainInitialization {
		Comment: {
			"Add initialization statements here that require that the libraries are already initialized properly,
			or add statements that require the Data Management module to be initialized."
		}
	}
	Procedure MainExecution {
		Body: {
			display demand;
			solve mp;
		}
	}
	Procedure PreMainTermination {
		Body: {
			return DataManagementExit();
		}
		Comment: {
			"Add termination statements here that require all libraries to be still alive.
			Return 1 if you allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence."
		}
	}
	Procedure MainTermination {
		Body: {
			return 1;
		}
		Comment: {
			"Add termination statements here that do not require all libraries to be still alive.
			Return 1 to allow the termination sequence to continue.
			Return 0 if you want to cancel the termination sequence.
			It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
		}
	}
}
