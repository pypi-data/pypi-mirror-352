[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "2.0"
addopts = "-rfEX -p pytester --strict-markers"
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test", "Acceptance"]
python_functions = ["test"]
# NOTE: "doc" is not included here, but gets tested explicitly via "doctesting".
testpaths = ["tests"]
xfail_strict = true
filterwarnings = [
    "error",
    "default:Using or importing the ABCs:DeprecationWarning:unittest2.*",
    # produced by older pyparsing<=2.2.0.
    "default:Using or importing the ABCs:DeprecationWarning:pyparsing.*",
    "default:the imp module is deprecated in favour of importlib:DeprecationWarning:nose.*",
    # distutils is deprecated in 3.10, scheduled for removal in 3.12
    "ignore:The distutils package is deprecated:DeprecationWarning",
    # produced by python3.6/site.py itself (3.6.7 on Travis, could not trigger it with 3.6.8)."
    "ignore:.*U.*mode is deprecated:DeprecationWarning:(?!(pytest|_pytest))",
    # produced by pytest-xdist
    "ignore:.*type argument to addoption.*:DeprecationWarning",
    # produced on execnet (pytest-xdist)
    "ignore:.*inspect.getargspec.*deprecated, use inspect.signature.*:DeprecationWarning",
    # pytest's own futurewarnings
    "ignore::pytest.PytestExperimentalApiWarning",
    # Do not cause SyntaxError for invalid escape sequences in py37.
    # Those are caught/handled by pyupgrade, and not easy to filter with the
    # module being the filename (with .py removed).
    "default:invalid escape sequence:DeprecationWarning",
    # ignore use of unregistered marks, because we use many to test the implementation
    "ignore::_pytest.warning_types.PytestUnknownMarkWarning",
]

[tool.black]
line-length = 119
target-version = ['py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
lines_between_sections = 1
known_first_party = "sentry"
skip = "migrations"

[project]
name = "loan_approval_model"
version = "0.0.3"
authors = [
    {name = "Ekaterina Ashmanova", email = "m2005713@edu.misis.ru"},
    {name = "Stepan Startsev", email = 'm2401133@edu.misis.ru'}
]
description = "My package description"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
dependencies = [
    "annotated-types==0.7.0",
    "colorama==0.4.6",
    "config==0.5.1",
    "feature-engine==1.8.3",
    "joblib==1.5.1",
    "numpy==2.2.6",
    "pandas==2.2.3",
    "patsy==1.0.1",
    "pydantic==2.11.5",
    "pydantic-core==2.33.2",
    "python-dateutil==2.9.0",
    "pytz==2025.2",
    "scikit-learn==1.6.1",
    "scipy==1.15.3",
    "statsmodels==0.14.4",
    "strictyaml==1.7.3",
    "typing-extensions==4.13.2",
]


[project.optional-dependencies]
dev = [
    "pytest==8.3.5",
    "iniconfig==2.1.0",
    "pluggy==1.6.0",
    "packaging==25.0",
    "six==1.17.0",
    "threadpoolctl==3.6.0",
    "typing-inspection==0.4.1",
]

test = [
    "pytest==8.3.5",
    "pytest-cov>=3.0.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]


[tool.setuptools.package-data]
"loan_approval_package" = ["config.yml"]