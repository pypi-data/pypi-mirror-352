[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "smartpin"
version = "0.2.3"
description = "AI-powered Pinboard bookmark manager using AI for tagging and summarization"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "Apache-2.0" }
authors = [
    { name = "Kevin McMahon", email = "kevinmcmahon@users.noreply.github.com" },
]
keywords = ["pinboard", "bookmarks", "ai", "tagging", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Utilities",
]
dependencies = [
    "beautifulsoup4>=4.13.4",
    "click>=8.2.1",
    "httpx>=0.28.1",
    "jinja2>=3.1.6",
    "llm>=0.25",
    "llm-anthropic>=0.16",
    "pinboard>=2.1.9",
    "python-dotenv>=1.1.0",
    "rich>=14.0.0",
]

[project.urls]
Homepage = "https://github.com/kevinmcmahon/smartpin"
Repository = "https://github.com/kevinmcmahon/smartpin"
Issues = "https://github.com/kevinmcmahon/smartpin/issues"

[project.scripts]
pinit = "pinit.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["pinit"]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
 "ruff>=0.11.11",
 "types-click>=7.1.8",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused imports in __init__ files are OK

[tool.ruff.lint.isort]
known-first-party = ["pinit"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true

# Per-module options
[[tool.mypy.overrides]]
module = ["llm", "llm.*", "pinboard", "pinboard.*"]
ignore_missing_imports = true
