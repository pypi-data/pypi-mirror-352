"use strict";(self.webpackChunk_jupyterlite_echo_kernel=self.webpackChunk_jupyterlite_echo_kernel||[]).push([[599],{599:(e,t,n)=>{n.r(t),n.d(t,{default:()=>s});var r=n(235);class o extends r.BaseKernel{async kernelInfoRequest(){return{implementation:"Text",implementation_version:"0.1.0",language_info:{codemirror_mode:{name:"text/plain"},file_extension:".txt",mimetype:"text/plain",name:"echo",nbconvert_exporter:"text",pygments_lexer:"text",version:"es2017"},protocol_version:"5.3",status:"ok",banner:"An echo kernel running in the browser",help_links:[{text:"Echo Kernel",url:"https://github.com/jupyterlite/echo-kernel"}]}}async executeRequest(e){const{code:t}=e;return this.publishExecuteResult({execution_count:this.executionCount,data:{"text/plain":t},metadata:{}}),{status:"ok",execution_count:this.executionCount,user_expressions:{}}}async completeRequest(e){throw new Error("Not implemented")}async inspectRequest(e){throw new Error("Not implemented")}async isCompleteRequest(e){throw new Error("Not implemented")}async commInfoRequest(e){throw new Error("Not implemented")}inputReply(e){throw new Error("Not implemented")}async commOpen(e){throw new Error("Not implemented")}async commMsg(e){throw new Error("Not implemented")}async commClose(e){throw new Error("Not implemented")}}const s=[{id:"@jupyterlite/echo-kernel:kernel",autoStart:!0,requires:[r.IKernelSpecs],activate:(e,t)=>{t.register({spec:{name:"echo",display_name:"Echo",language:"text",argv:[],resources:{"logo-32x32":"","logo-64x64":""}},create:async e=>new o(e)})}}]}}]);