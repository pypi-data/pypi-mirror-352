[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "attachments"
version = "0.11.0"  
authors = [
  { name="Maxime Rivest", email="mrive052@gmail.com" },
]
description = "The Python funnel for LLM context - turn any file into model-ready text + images, in one line."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12", 
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing",
    "Topic :: Multimedia",
]
keywords = ["llm", "ai", "pdf", "document", "multimodal", "openai", "claude" , "context", "attachments"]

# Core dependencies for the modular architecture
dependencies = [
    # Core file processing
    "requests>=2.25.0", # HTTP library for URL processing and web content
    "beautifulsoup4>=4.9.0", # HTML parsing for web content and HTML files
    "playwright>=1.52.0",
    "jupytext>=1.17.1",
    "pillow>=11.2.1",
    "dspy-ai>=2.6.24",
    "pydantic>=2.11.5",
    "pdfplumber>=0.11.6",
    "python-pptx>=1.0.2",
    "ipykernel>=6.29.5",
    "pillow-heif>=0.22.0",
]

[project.urls]
"Homepage" = "https://maximerivest.github.io/attachments/"
"Documentation" = "https://maximerivest.github.io/attachments/"
"Repository" = "https://github.com/maximrivest/attachments"
"Bug Tracker" = "https://github.com/maximrivest/attachments/issues"
"Changelog" = "https://maximerivest.github.io/attachments/changelog.html"

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=8.0.0",
    "pytest-randomly>=3.15.0",
    "pytest-cov>=4.0.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]

# Documentation dependencies
docs = [
    "mystmd>=1.2.0",
    "jupyter>=1.0.0",
    "jupytext>=1.16.0",
    "sphinx>=7.0.0",
    "sphinx-autodoc2>=0.5.0",
]

# Common file formats (most users will want these)
common = [
    "pandas>=2.0.0",           # Data analysis and CSV processing
    "Pillow>=10.0.0",          # Image processing and conversion
    "pdfplumber>=0.10.0",      # PDF text and table extraction
    "python-pptx>=0.6.0",     # PowerPoint processing
    "python-docx>=1.1.0",     # Word document processing
    "openpyxl>=3.1.0",        # Excel file processing
    "pypdfium2>=4.0.0",       # PDF rendering for images (DOCX, PDF visual conversion)
]

# Microsoft Office formats
office = [
    "python-pptx>=0.6.0",     # PowerPoint (.pptx) processing
    "python-docx>=1.1.0",     # Word (.docx) processing  
    "openpyxl>=3.1.0",        # Excel (.xlsx) processing
]

# PDF processing (MIT-compatible)
pdf = [
    "pdfplumber>=0.7.0",      # Primary PDF library
    "pypdf>=5.0.0",           # Pure Python PDF library (BSD license)
    "pypdfium2>=4.26.0",     # Google's PDFium Python binding (BSD/Apache)
]

# Extended file format support
extended = [
    "python-magic>=0.4.27",   # File type detection
    "mammoth>=1.6.0",         # Advanced DOCX conversion
    "odfpy>=1.4.1",          # OpenDocument formats
    "pillow-heif>=0.22.0",   # HEIF image support
    "pydub>=0.25.1",         # Audio processing
    "SpeechRecognition>=3.10.0", # Audio transcription
    "markitdown[all]>=0.1.1", # Microsoft's universal converter
    "pytesseract>=0.3.10",   # OCR support
]

# Browser automation for web content
browser = [
    "playwright>=1.43.0",
    "selenium>=4.15.0",
]

# All dependencies (comprehensive installation)
all = [
    # Include all common dependencies
    "pandas>=1.3.0",
    "Pillow>=8.0.0", 
    "pdfplumber>=0.7.0",
    "python-pptx>=0.6.21",
    "python-docx>=0.8.11",
    "openpyxl>=3.0.9",
    # Extended format support
    "python-magic>=0.4.27",
    "mammoth>=1.6.0",
    "odfpy>=1.4.1",
    "pillow-heif>=0.22.0",
    "pydub>=0.25.1",
    "SpeechRecognition>=3.10.0",
    "markitdown[all]>=0.1.1",
    "pytesseract>=0.3.10",
    # Additional PDF support
    "pypdf>=5.0.0",
    "pypdfium2>=4.26.0",
    # Browser automation
    "playwright>=1.43.0",
    "selenium>=4.15.0",
]

# Test dependencies for CI
test = [
    "pytest>=8.0.0",
    "pytest-randomly>=3.15.0",
    "pytest-cov>=4.0.0",
    "tox>=4.0.0",
    "coverage[toml]>=7.4.0",
]

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
attachments = ["py.typed"]

# Black formatting configuration
[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# MyPy type checking configuration
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "PIL.*", 
    "pandas.*",
    "numpy.*",
    "docx.*",
    "pptx.*",
    "odf.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = ["src"]
testpaths = ["tests"]
norecursedirs = ["mrplay", ".venv", "dist", "build", "*.egg-info", "_build"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src/attachments",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=70",  # Lowered from 90 for now, will increase as we add tests
    "--ignore=mrplay",  # Explicitly ignore mrplay directory
    "-v",  # Verbose output by default
    "--disable-warnings",  # Disable all warnings
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "contract: marks tests as contract tests (slower, more comprehensive)",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__main__.py",
    "*/setup.py",
    "*/conftest.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "mystmd>=1.3.6",
    "pytest>=8.3.5",
]
