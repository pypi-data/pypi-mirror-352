[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tumee-codeguard"
dynamic = ["version"]
description = "A code validation tool for enforcing access control on code modifications"
readme = "README.md"
license = "MIT"
authors = [
    {name = "TuMee Dev", email = "it@tumee.com"}
]
maintainers = [
    {name = "TuMee Dev", email = "it@tumee.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "tree-sitter>=0.23.0,<0.24.0",  # 0.24.0 is incompatible with language parsers compiled for v14
    "tree-sitter-python>=0.21.0,<0.24.0",
    "tree-sitter-javascript>=0.21.0,<0.24.0",
    "tree-sitter-typescript>=0.21.0,<0.24.0",
    "tree-sitter-java>=0.21.0,<0.24.0",
    "tree-sitter-c-sharp>=0.21.0,<0.24.0",
    "tree-sitter-cpp>=0.21.0,<0.24.0",
    "tree-sitter-go>=0.21.0,<0.24.0",
    "tree-sitter-rust>=0.21.0,<0.23.0",
    "tree-sitter-ruby>=0.21.0,<0.24.0",
    "tree-sitter-php>=0.21.0,<0.24.0",
    "tree-sitter-html>=0.20.0,<0.24.0",
    "tree-sitter-css>=0.21.0,<0.24.0",
    "tree-sitter-bash>=0.21.0,<0.24.0",
    "tree-sitter-sql>=0.3.0,<0.4.0",
    "tree-sitter-json>=0.24.0,<0.25.0",
    "tree-sitter-yaml>=0.7.0,<0.8.0",
    "tree-sitter-toml>=0.7.0,<0.8.0",
    "tree-sitter-lua>=0.2.0,<0.3.0",
    "tree-sitter-scala>=0.21.0,<0.24.0",
    "tree-sitter-haskell>=0.21.0,<0.24.0",
    "tree-sitter-ocaml>=0.21.0,<0.25.0",
    "pathspec>=0.11.0",
    "pyyaml>=6.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "isort>=5.13.0",
    "twine>=4.0.2",
    "build>=1.0.0",
]
mcp = [
    "mcp-server-sdk>=0.1.0",
    "uvicorn>=0.25.0",
    "pyinstaller>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/TuMee-Dev/TuMee-Code-Validator"
Repository = "https://github.com/TuMee-Dev/TuMee-Code-Validator"
Issues = "https://github.com/TuMee-Dev/TuMee-Code-Validator/issues"

[project.scripts]
codeguard = "codeguard.cli:main"

[tool.setuptools]
packages = [
    "codeguard",
    "codeguard.core", 
    "codeguard.themes",
    "codeguard.utils",
    "codeguard.vcs",
    "codeguard.mcp"
]
package-dir = {"codeguard" = "src"}
include-package-data = true

[tool.setuptools.package-data]
codeguard = ["resources/**/*"]

[tool.setuptools.dynamic]
version = {attr = "codeguard.version.__version__"}

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["codeguard"]
skip_gitignore = true

# mypy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
ignore_missing_imports = true
no_implicit_optional = false
strict_optional = false
allow_untyped_calls = true
allow_untyped_decorators = true
warn_unused_ignores = false
check_untyped_defs = false
no_warn_no_return = true
no_warn_unused_ignores = true
disable_error_code = ["attr-defined", "arg-type", "var-annotated", "assignment", "index", "call-overload", "return-value"]
files = ["src"]
exclude = [
    "tests/",
    "build/",
    "dist/",
    "examples/",
]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests", "src/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-ra -q --strict-markers"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "asyncio: marks tests as async tests that use asyncio",
]
