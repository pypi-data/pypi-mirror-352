[project]
name = "inflate64"
requires-python = ">=3.9"
description = "deflate64 compression/decompression library"
readme = "README.rst"
license = {text = "LGPL-2.1-or-later"}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ['deflate64', 'compression']
dynamic = ["version"]
[project.optional-dependencies]
test = [
      "pytest",
]
docs = [
      "sphinx>=5.0",
      "sphinx_rtd_theme",
      "docutils",
]
check = [
      "mypy>=1.10.0",
      "mypy_extensions>=0.4.1",
      "check-manifest",
      "flake8",
      "flake8-black",
      "flake8-deprecated",
      "flake8-isort",
      "pygments",
      "readme-renderer",
      "twine",
]

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.0.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "no-local-version"

[project.urls]
Source = "https://github.com/miurahr/inflate64"
Homepage = "https://inflate64.readthedocs.io/"
Documentation = "https://inflate64.readthedocs.io/en/stable/"
"Bug Tracker" = "https://github.com/miurahr/inflate64/issues"
Changelog = "https://inflate64.readthedocs.io/en/latest/changelog.html"

[tool.black]
line-length = 125
target-version = ['py39']

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
parallel = true
omit = ["tests/*"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]
ignore_errors = true

[tool.mypy]
ignore_missing_imports = true
warn_redundant_casts = true
warn_unused_ignores = false
strict_optional = true
show_column_numbers = true
files = "*.py"

[tool.isort]
known_first_party = ["inflate64", "_inflate64"]
known_third_party = ["docutils","flake8","pyannotate_runtime","pytest","pytz","setuptools","sphinx","yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["tests"]
python_files = "test*.py"
norecursedirs = [".git", "_build", "tmp", ".eggs"]

[tool.cibuildwheel]
skip = ["*-win32", "*-manylinux_i686", "*-musllinux_i686"]
manylinux-x86_64-image = "manylinux2014"
manylinux-aarch64-image = "manylinux2014"
manylinux-ppc64le-image = "manylinux2014"
manylinux-s390x-image = "manylinux2014"
manylinux-pypy_x86_64-image = "manylinux2014"
manylinux-pypy_aarch64-image = "manylinux2014"

musllinux-x86_64-image = "musllinux_1_1"
musllinux-aarch64-image = "musllinux_1_1"
musllinux-ppc64le-image = "musllinux_1_1"
musllinux-s390x-image = "musllinux_1_1"

[tool.cibuildwheel.linux]
archs = ["auto64", "aarch64"]

[tool.cibuildwheel.macos]
archs = ["auto64", "universal2"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = check, py{39,310,311,312,313}, docs

[testenv]
passenv = PYTEST_ADDOPTS
extras = test
commands =
    python -m pytest -vv -s

[testenv:check]
basepython = python3.12
extras = check
ignore_errors=true
commands =
    check-manifest {toxinidir}
    flake8 src tests

[testenv:docs]
basepython = python3.12
extras = docs
commands =
    sphinx-build {posargs:-E} -b html docs build/html
"""
