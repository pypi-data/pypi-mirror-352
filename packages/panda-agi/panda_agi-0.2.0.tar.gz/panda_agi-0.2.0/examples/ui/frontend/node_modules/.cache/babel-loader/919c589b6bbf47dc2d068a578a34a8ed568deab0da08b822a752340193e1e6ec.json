{"ast":null,"code":"import FileWriteEvent from \"./events/file-write\";\nimport FileReplaceEvent from \"./events/file-replace\";\nimport FileReadEvent from \"./events/file-read\";\nimport UserMessageEvent from \"./events/user-message\";\nimport FileUploadEvent from \"./events/file-upload\";\nimport ImageGenerationEvent from \"./events/image-generation\";\nimport WebSearchEvent from \"./events/WebSearchEvent\";\nimport WebSearchResultEvent from \"./events/web-search-result\";\nimport WebNavigationEvent from \"./events/WebNavigationEvent\";\nimport FileDiscoveryEvent from \"./events/FileDiscoveryEvent\";\nimport ShellOperationEvent from \"./events/ShellOperationEvent\";\nconst EventCard = ({\n  message,\n  onPreviewClick,\n  onFileClick\n}) => {\n  if (!message.event || !message.event.data) return null;\n  const eventData = message.event.data;\n  const eventType = eventData.type || \"unknown\";\n  const payload = eventData.payload;\n  if (eventType === \"web_navigation\" || eventType === \"web_navigation_result\") {\n    return WebNavigationEvent({\n      payload,\n      eventType,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"file_write\") {\n    return FileWriteEvent({\n      payload,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"file_replace\") {\n    return FileWriteEvent({\n      payload,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"shell_exec\" || eventType === \"shell_view\" || eventType === \"shell_write\") {\n    return ShellOperationEvent({\n      payload,\n      eventType\n    });\n  }\n  if (eventType === \"file_read\") {\n    return FileReadEvent({\n      payload,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"web_search\") {\n    return WebSearchEvent({\n      payload,\n      onPreviewClick\n    });\n  }\n  if (eventType === \"image_generation\") {\n    return ImageGenerationEvent({\n      payload,\n      onPreviewClick\n    });\n  }\n  if (eventType === \"file_replace\") {\n    return FileReplaceEvent({\n      payload,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"file_find\" || eventType === \"file_explore\") {\n    return FileDiscoveryEvent({\n      payload,\n      eventType,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"file_upload\") {\n    return FileUploadEvent({\n      payload,\n      onPreviewClick,\n      onFileClick\n    });\n  }\n  if (eventType === \"web_search_result\") {\n    return WebSearchResultEvent({\n      payload\n    });\n  }\n  if (eventType === \"user_notification\" || eventType === \"user_question\") {\n    return UserMessageEvent({\n      payload,\n      onPreviewClick,\n      onFileClick,\n      timestamp: eventData.timestamp || message.timestamp\n    });\n  }\n  return null;\n};\n_c = EventCard;\nexport default EventCard;\nvar _c;\n$RefreshReg$(_c, \"EventCard\");","map":{"version":3,"names":["FileWriteEvent","FileReplaceEvent","FileReadEvent","UserMessageEvent","FileUploadEvent","ImageGenerationEvent","WebSearchEvent","WebSearchResultEvent","WebNavigationEvent","FileDiscoveryEvent","ShellOperationEvent","EventCard","message","onPreviewClick","onFileClick","event","data","eventData","eventType","type","payload","timestamp","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/EventCard.js"],"sourcesContent":["import FileWriteEvent from \"./events/file-write\";\nimport FileReplaceEvent from \"./events/file-replace\";\nimport FileReadEvent from \"./events/file-read\";\nimport UserMessageEvent from \"./events/user-message\";\nimport FileUploadEvent from \"./events/file-upload\";\nimport ImageGenerationEvent from \"./events/image-generation\";\nimport WebSearchEvent from \"./events/WebSearchEvent\";\nimport WebSearchResultEvent from \"./events/web-search-result\";\nimport WebNavigationEvent from \"./events/WebNavigationEvent\";\nimport FileDiscoveryEvent from \"./events/FileDiscoveryEvent\";\nimport ShellOperationEvent from \"./events/ShellOperationEvent\";\n\nconst EventCard = ({ message, onPreviewClick, onFileClick }) => {\n  if (!message.event || !message.event.data) return null;\n\n  const eventData = message.event.data;\n  const eventType = eventData.type || \"unknown\";\n  const payload = eventData.payload;\n\n  if (eventType === \"web_navigation\" || eventType === \"web_navigation_result\") {\n    return WebNavigationEvent({\n      payload,\n      eventType,\n      onPreviewClick,\n      onFileClick,\n    });\n  }\n\n  if (eventType === \"file_write\") {\n    return FileWriteEvent({\n      payload,\n      onPreviewClick,\n      onFileClick,\n    });\n  }\n\n  if (eventType === \"file_replace\") {\n    return FileWriteEvent({\n      payload,\n      onPreviewClick,\n      onFileClick,\n    });\n  }\n\n  if (\n    eventType === \"shell_exec\" ||\n    eventType === \"shell_view\" ||\n    eventType === \"shell_write\"\n  ) {\n    return ShellOperationEvent({ payload, eventType });\n  }\n\n  if (eventType === \"file_read\") {\n    return FileReadEvent({ payload, onPreviewClick, onFileClick });\n  }\n\n  if (eventType === \"web_search\") {\n    return WebSearchEvent({ payload, onPreviewClick });\n  }\n\n  if (eventType === \"image_generation\") {\n    return ImageGenerationEvent({ payload, onPreviewClick });\n  }\n\n  if (eventType === \"file_replace\") {\n    return FileReplaceEvent({\n      payload,\n      onPreviewClick,\n      onFileClick,\n    });\n  }\n\n  if (eventType === \"file_find\" || eventType === \"file_explore\") {\n    return FileDiscoveryEvent({\n      payload,\n      eventType,\n      onPreviewClick,\n      onFileClick,\n    });\n  }\n\n  if (eventType === \"file_upload\") {\n    return FileUploadEvent({ payload, onPreviewClick, onFileClick });\n  }\n\n  if (eventType === \"web_search_result\") {\n    return WebSearchResultEvent({ payload });\n  }\n\n  if (eventType === \"user_notification\" || eventType === \"user_question\") {\n    return UserMessageEvent({\n      payload,\n      onPreviewClick,\n      onFileClick,\n      timestamp: eventData.timestamp || message.timestamp,\n    });\n  }\n\n  return null;\n};\n\nexport default EventCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}