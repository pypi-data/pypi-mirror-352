{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to preprocess text to ensure URLs are detectable by remark-gfm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst preprocessForAutolinks = text => {\n  if (typeof text !== \"string\") return text;\n\n  // Replace bare URLs that might not be detected by remark-gfm\n  // This ensures URLs surrounded by text are properly spaced for autolink detection\n  return text.replace(/([^\\s])(https?:\\/\\/)/g, \"$1 $2\") // Add space before URLs\n  .replace(/(https?:\\/\\/[^\\s]+)([^\\s])/g, \"$1 $2\"); // Add space after URLs\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({\n  children,\n  className = \"\"\n}) => {\n  // Preprocess the content to ensure URLs are properly spaced\n  const processedContent = preprocessForAutolinks(children);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `text-sm rounded prose prose-sm prose-gray max-w-none ${className}`,\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      remarkPlugins: [remarkGfm],\n      components: {\n        p: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 last:mb-0\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 32\n        }, this),\n        h1: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-lg font-bold mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this),\n        h2: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-base font-bold mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this),\n        h3: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-bold mb-1\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this),\n        code: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"code\", {\n          className: \"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this),\n        pre: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-200 p-2 rounded text-xs overflow-x-auto\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this),\n        ul: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this),\n        ol: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"list-decimal list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this),\n        li: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this),\n        blockquote: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"border-l-4 border-gray-300 pl-3 italic\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this),\n        // Style all links consistently\n        a: ({\n          href,\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: href,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-blue-600 hover:underline\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      },\n      children: processedContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","preprocessForAutolinks","text","replace","MarkdownRenderer","children","className","processedContent","remarkPlugins","components","p","fileName","_jsxFileName","lineNumber","columnNumber","h1","h2","h3","code","pre","ul","ol","li","blockquote","a","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to preprocess text to ensure URLs are detectable by remark-gfm\nconst preprocessForAutolinks = (text) => {\n  if (typeof text !== \"string\") return text;\n\n  // Replace bare URLs that might not be detected by remark-gfm\n  // This ensures URLs surrounded by text are properly spaced for autolink detection\n  return text\n    .replace(/([^\\s])(https?:\\/\\/)/g, \"$1 $2\") // Add space before URLs\n    .replace(/(https?:\\/\\/[^\\s]+)([^\\s])/g, \"$1 $2\"); // Add space after URLs\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({ children, className = \"\" }) => {\n  // Preprocess the content to ensure URLs are properly spaced\n  const processedContent = preprocessForAutolinks(children);\n\n  return (\n    <div\n      className={`text-sm rounded prose prose-sm prose-gray max-w-none ${className}`}\n    >\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm]}\n        components={{\n          p: ({ children }) => <p className=\"mb-2 last:mb-0\">{children}</p>,\n          h1: ({ children }) => (\n            <h1 className=\"text-lg font-bold mb-2\">{children}</h1>\n          ),\n          h2: ({ children }) => (\n            <h2 className=\"text-base font-bold mb-2\">{children}</h2>\n          ),\n          h3: ({ children }) => (\n            <h3 className=\"text-sm font-bold mb-1\">{children}</h3>\n          ),\n          code: ({ children }) => (\n            <code className=\"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\">\n              {children}\n            </code>\n          ),\n          pre: ({ children }) => (\n            <pre className=\"bg-gray-200 p-2 rounded text-xs overflow-x-auto\">\n              {children}\n            </pre>\n          ),\n          ul: ({ children }) => (\n            <ul className=\"list-disc list-inside mb-2\">{children}</ul>\n          ),\n          ol: ({ children }) => (\n            <ol className=\"list-decimal list-inside mb-2\">{children}</ol>\n          ),\n          li: ({ children }) => <li className=\"mb-1\">{children}</li>,\n          blockquote: ({ children }) => (\n            <blockquote className=\"border-l-4 border-gray-300 pl-3 italic\">\n              {children}\n            </blockquote>\n          ),\n          // Style all links consistently\n          a: ({ href, children }) => (\n            <a\n              href={href}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-600 hover:underline\"\n            >\n              {children}\n            </a>\n          ),\n        }}\n      >\n        {processedContent}\n      </ReactMarkdown>\n    </div>\n  );\n};\n\nexport default MarkdownRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}