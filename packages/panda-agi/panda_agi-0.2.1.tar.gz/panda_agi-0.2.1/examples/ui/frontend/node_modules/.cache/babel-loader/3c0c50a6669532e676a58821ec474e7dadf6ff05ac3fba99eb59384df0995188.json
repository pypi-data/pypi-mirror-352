{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to manually detect and convert plain URLs to links as a fallback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkifyText = text => {\n  if (typeof text !== \"string\") return text;\n\n  // Comprehensive URL regex that properly captures full URLs\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"'\\]]+)/gi;\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"text-blue-600 hover:underline\",\n      children: url\n    }, match.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = children => {\n  if (typeof children === \"string\") {\n    return linkifyText(children);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: linkifyText(child)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this);\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({\n  children,\n  className = \"\"\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `text-sm rounded prose prose-sm prose-gray max-w-none ${className}`,\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      remarkPlugins: [remarkGfm],\n      components: {\n        // Add manual URL detection for text nodes\n        text: ({\n          children\n        }) => {\n          return linkifyText(children);\n        },\n        p: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 last:mb-0\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this),\n        h1: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-lg font-bold mb-2\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this),\n        h2: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-base font-bold mb-2\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this),\n        h3: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-bold mb-1\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this),\n        code: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"code\", {\n          className: \"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this),\n        pre: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-200 p-2 rounded text-xs overflow-x-auto\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this),\n        ul: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this),\n        ol: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"list-decimal list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this),\n        li: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this),\n        blockquote: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"border-l-4 border-gray-300 pl-3 italic\",\n          children: processChildren(children)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this),\n        // Style all links consistently\n        a: ({\n          href,\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: href,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-blue-600 hover:underline\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","linkifyText","text","urlRegex","parts","lastIndex","match","exec","index","push","slice","url","href","target","rel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","processChildren","Array","isArray","map","child","Fragment","MarkdownRenderer","remarkPlugins","components","p","h1","h2","h3","code","pre","ul","ol","li","blockquote","a","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to manually detect and convert plain URLs to links as a fallback\nconst linkifyText = (text) => {\n  if (typeof text !== \"string\") return text;\n\n  // Comprehensive URL regex that properly captures full URLs\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"'\\]]+)/gi;\n\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    parts.push(\n      <a\n        key={match.index}\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-blue-600 hover:underline\"\n      >\n        {url}\n      </a>\n    );\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = (children) => {\n  if (typeof children === \"string\") {\n    return linkifyText(children);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return (\n          <React.Fragment key={index}>{linkifyText(child)}</React.Fragment>\n        );\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({ children, className = \"\" }) => {\n  return (\n    <div\n      className={`text-sm rounded prose prose-sm prose-gray max-w-none ${className}`}\n    >\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm]}\n        components={{\n          // Add manual URL detection for text nodes\n          text: ({ children }) => {\n            return linkifyText(children);\n          },\n          p: ({ children }) => (\n            <p className=\"mb-2 last:mb-0\">{processChildren(children)}</p>\n          ),\n          h1: ({ children }) => (\n            <h1 className=\"text-lg font-bold mb-2\">\n              {processChildren(children)}\n            </h1>\n          ),\n          h2: ({ children }) => (\n            <h2 className=\"text-base font-bold mb-2\">\n              {processChildren(children)}\n            </h2>\n          ),\n          h3: ({ children }) => (\n            <h3 className=\"text-sm font-bold mb-1\">\n              {processChildren(children)}\n            </h3>\n          ),\n          code: ({ children }) => (\n            <code className=\"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\">\n              {children}\n            </code>\n          ),\n          pre: ({ children }) => (\n            <pre className=\"bg-gray-200 p-2 rounded text-xs overflow-x-auto\">\n              {children}\n            </pre>\n          ),\n          ul: ({ children }) => (\n            <ul className=\"list-disc list-inside mb-2\">{children}</ul>\n          ),\n          ol: ({ children }) => (\n            <ol className=\"list-decimal list-inside mb-2\">{children}</ol>\n          ),\n          li: ({ children }) => (\n            <li className=\"mb-1\">{processChildren(children)}</li>\n          ),\n          blockquote: ({ children }) => (\n            <blockquote className=\"border-l-4 border-gray-300 pl-3 italic\">\n              {processChildren(children)}\n            </blockquote>\n          ),\n          // Style all links consistently\n          a: ({ href, children }) => (\n            <a\n              href={href}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-600 hover:underline\"\n            >\n              {children}\n            </a>\n          ),\n        }}\n      >\n        {children}\n      </ReactMarkdown>\n    </div>\n  );\n};\n\nexport default MarkdownRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}