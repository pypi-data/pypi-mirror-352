{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n// Function to detect and convert plain URLs to links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkifyText = text => {\n  // URL regex pattern that matches http(s), www, and common domain patterns\n  const urlRegex = /(https?:\\/\\/[^\\s]+|www\\.[^\\s]+|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\\.([a-zA-Z]{2,})(\\/[^\\s]*)?)/gi;\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    const href = url.startsWith(\"http\") ? url : `https://${url}`;\n    parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"text-blue-600 hover:underline\",\n      children: url\n    }, match.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n  return parts.length > 1 ? parts : text;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `text-sm rounded prose prose-sm prose-gray max-w-none ${className}`,\n  children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    components: {\n      // Custom text component to handle URL auto-linking\n      text: ({\n        children\n      }) => {\n        if (typeof children === \"string\") {\n          return linkifyText(children);\n        }\n        return children;\n      },\n      p: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 last:mb-0\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }, this),\n      h1: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-lg font-bold mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this),\n      h2: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-base font-bold mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this),\n      h3: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-bold mb-1\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this),\n      code: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this),\n      pre: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-200 p-2 rounded text-xs overflow-x-auto\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this),\n      ul: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this),\n      ol: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"list-decimal list-inside mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this),\n      li: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-1\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 31\n      }, this),\n      blockquote: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"border-l-4 border-gray-300 pl-3 italic\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this),\n      // Handle existing markdown links normally (don't double-process them)\n      a: ({\n        href,\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: href,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-600 hover:underline\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this);\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","jsxDEV","_jsxDEV","linkifyText","text","urlRegex","parts","lastIndex","match","exec","index","push","slice","url","href","startsWith","target","rel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","MarkdownRenderer","components","p","h1","h2","h3","code","pre","ul","ol","li","blockquote","a","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n// Function to detect and convert plain URLs to links\nconst linkifyText = (text) => {\n  // URL regex pattern that matches http(s), www, and common domain patterns\n  const urlRegex =\n    /(https?:\\/\\/[^\\s]+|www\\.[^\\s]+|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]*\\.([a-zA-Z]{2,})(\\/[^\\s]*)?)/gi;\n\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    const href = url.startsWith(\"http\") ? url : `https://${url}`;\n    parts.push(\n      <a\n        key={match.index}\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-blue-600 hover:underline\"\n      >\n        {url}\n      </a>\n    );\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n\n  return parts.length > 1 ? parts : text;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({ children, className = \"\" }) => (\n  <div\n    className={`text-sm rounded prose prose-sm prose-gray max-w-none ${className}`}\n  >\n    <ReactMarkdown\n      components={{\n        // Custom text component to handle URL auto-linking\n        text: ({ children }) => {\n          if (typeof children === \"string\") {\n            return linkifyText(children);\n          }\n          return children;\n        },\n        p: ({ children }) => <p className=\"mb-2 last:mb-0\">{children}</p>,\n        h1: ({ children }) => (\n          <h1 className=\"text-lg font-bold mb-2\">{children}</h1>\n        ),\n        h2: ({ children }) => (\n          <h2 className=\"text-base font-bold mb-2\">{children}</h2>\n        ),\n        h3: ({ children }) => (\n          <h3 className=\"text-sm font-bold mb-1\">{children}</h3>\n        ),\n        code: ({ children }) => (\n          <code className=\"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\">\n            {children}\n          </code>\n        ),\n        pre: ({ children }) => (\n          <pre className=\"bg-gray-200 p-2 rounded text-xs overflow-x-auto\">\n            {children}\n          </pre>\n        ),\n        ul: ({ children }) => (\n          <ul className=\"list-disc list-inside mb-2\">{children}</ul>\n        ),\n        ol: ({ children }) => (\n          <ol className=\"list-decimal list-inside mb-2\">{children}</ol>\n        ),\n        li: ({ children }) => <li className=\"mb-1\">{children}</li>,\n        blockquote: ({ children }) => (\n          <blockquote className=\"border-l-4 border-gray-300 pl-3 italic\">\n            {children}\n          </blockquote>\n        ),\n        // Handle existing markdown links normally (don't double-process them)\n        a: ({ href, children }) => (\n          <a\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-blue-600 hover:underline\"\n          >\n            {children}\n          </a>\n        ),\n      }}\n    >\n      {children}\n    </ReactMarkdown>\n  </div>\n);\n\nexport default MarkdownRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}