{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n// Function to detect and convert plain URLs to links\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkifyText = text => {\n  if (typeof text !== \"string\") return text;\n\n  // More comprehensive URL regex pattern\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"']+|www\\.[^\\s<>\"']+)/gi;\n\n  // Debug logging\n  console.log(\"Processing text for URLs:\", text);\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n  while ((match = urlRegex.exec(text)) !== null) {\n    console.log(\"Found URL:\", match[0]);\n\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    const href = url.startsWith(\"http\") ? url : `https://${url}`;\n    parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"text-blue-600 hover:underline\",\n      children: url\n    }, match.index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this));\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = children => {\n  if (typeof children === \"string\") {\n    return linkifyText(children);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: linkifyText(child)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({\n  children,\n  className = \"\"\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: `text-sm rounded prose prose-sm prose-gray max-w-none ${className}`,\n  children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    components: {\n      // Custom text component to handle URL auto-linking\n      text: ({\n        children\n      }) => {\n        return linkifyText(children);\n      },\n      p: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-2 last:mb-0\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this),\n      h1: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-lg font-bold mb-2\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this),\n      h2: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-base font-bold mb-2\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this),\n      h3: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-sm font-bold mb-1\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this),\n      code: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"code\", {\n        className: \"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this),\n      pre: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-200 p-2 rounded text-xs overflow-x-auto\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this),\n      ul: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this),\n      ol: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"list-decimal list-inside mb-2\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this),\n      li: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-1\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this),\n      blockquote: ({\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n        className: \"border-l-4 border-gray-300 pl-3 italic\",\n        children: processChildren(children)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this),\n      // Handle existing markdown links normally (don't double-process them)\n      a: ({\n        href,\n        children\n      }) => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: href,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-600 hover:underline\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this);\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","jsxDEV","_jsxDEV","linkifyText","text","urlRegex","console","log","parts","lastIndex","match","exec","index","push","slice","url","href","startsWith","target","rel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","processChildren","Array","isArray","map","child","Fragment","MarkdownRenderer","components","p","h1","h2","h3","code","pre","ul","ol","li","blockquote","a","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\n\n// Function to detect and convert plain URLs to links\nconst linkifyText = (text) => {\n  if (typeof text !== \"string\") return text;\n\n  // More comprehensive URL regex pattern\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"']+|www\\.[^\\s<>\"']+)/gi;\n\n  // Debug logging\n  console.log(\"Processing text for URLs:\", text);\n\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = urlRegex.exec(text)) !== null) {\n    console.log(\"Found URL:\", match[0]);\n\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n    const href = url.startsWith(\"http\") ? url : `https://${url}`;\n    parts.push(\n      <a\n        key={match.index}\n        href={href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"text-blue-600 hover:underline\"\n      >\n        {url}\n      </a>\n    );\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = (children) => {\n  if (typeof children === \"string\") {\n    return linkifyText(children);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return (\n          <React.Fragment key={index}>{linkifyText(child)}</React.Fragment>\n        );\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({ children, className = \"\" }) => (\n  <div\n    className={`text-sm rounded prose prose-sm prose-gray max-w-none ${className}`}\n  >\n    <ReactMarkdown\n      components={{\n        // Custom text component to handle URL auto-linking\n        text: ({ children }) => {\n          return linkifyText(children);\n        },\n        p: ({ children }) => (\n          <p className=\"mb-2 last:mb-0\">{processChildren(children)}</p>\n        ),\n        h1: ({ children }) => (\n          <h1 className=\"text-lg font-bold mb-2\">\n            {processChildren(children)}\n          </h1>\n        ),\n        h2: ({ children }) => (\n          <h2 className=\"text-base font-bold mb-2\">\n            {processChildren(children)}\n          </h2>\n        ),\n        h3: ({ children }) => (\n          <h3 className=\"text-sm font-bold mb-1\">\n            {processChildren(children)}\n          </h3>\n        ),\n        code: ({ children }) => (\n          <code className=\"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\">\n            {children}\n          </code>\n        ),\n        pre: ({ children }) => (\n          <pre className=\"bg-gray-200 p-2 rounded text-xs overflow-x-auto\">\n            {children}\n          </pre>\n        ),\n        ul: ({ children }) => (\n          <ul className=\"list-disc list-inside mb-2\">{children}</ul>\n        ),\n        ol: ({ children }) => (\n          <ol className=\"list-decimal list-inside mb-2\">{children}</ol>\n        ),\n        li: ({ children }) => (\n          <li className=\"mb-1\">{processChildren(children)}</li>\n        ),\n        blockquote: ({ children }) => (\n          <blockquote className=\"border-l-4 border-gray-300 pl-3 italic\">\n            {processChildren(children)}\n          </blockquote>\n        ),\n        // Handle existing markdown links normally (don't double-process them)\n        a: ({ href, children }) => (\n          <a\n            href={href}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"text-blue-600 hover:underline\"\n          >\n            {children}\n          </a>\n        ),\n      }}\n    >\n      {children}\n    </ReactMarkdown>\n  </div>\n);\n\nexport default MarkdownRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}