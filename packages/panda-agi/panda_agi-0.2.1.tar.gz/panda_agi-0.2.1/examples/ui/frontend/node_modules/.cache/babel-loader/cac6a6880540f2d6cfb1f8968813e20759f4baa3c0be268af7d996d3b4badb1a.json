{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js\";\nimport React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to manually detect and convert plain URLs to links as a fallback\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkifyText = (text, onPreviewClick) => {\n  if (typeof text !== \"string\") return text;\n\n  // Comprehensive URL regex that properly captures full URLs\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"'\\]]+)/gi;\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n\n    // Check if URL ends with :2664 for special handling\n    if (url.endsWith(\":2664\") && onPreviewClick) {\n      parts.push(/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onPreviewClick({\n          url: url,\n          content: \"\",\n          // Will be loaded via iframe\n          title: `Preview: ${new URL(url).hostname}:2664`,\n          type: \"iframe\"\n        }),\n        className: \"text-blue-600 hover:underline cursor-pointer bg-transparent border-none p-0 font-inherit inline\",\n        children: url\n      }, match.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this));\n    } else {\n      parts.push(/*#__PURE__*/_jsxDEV(\"a\", {\n        href: url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-blue-600 hover:underline\",\n        children: url\n      }, match.index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this));\n    }\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = (children, onPreviewClick) => {\n  if (typeof children === \"string\") {\n    return linkifyText(children, onPreviewClick);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: linkifyText(child, onPreviewClick)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this);\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({\n  children,\n  className = \"\",\n  onPreviewClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `text-sm rounded prose prose-sm prose-gray max-w-none ${className}`,\n    children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      remarkPlugins: [remarkGfm],\n      components: {\n        // Add manual URL detection for text nodes\n        text: ({\n          children\n        }) => {\n          return linkifyText(children, onPreviewClick);\n        },\n        p: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-2 last:mb-0\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this),\n        h1: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-lg font-bold mb-2\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this),\n        h2: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-base font-bold mb-2\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this),\n        h3: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-sm font-bold mb-1\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this),\n        code: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"code\", {\n          className: \"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this),\n        pre: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-200 p-2 rounded text-xs overflow-x-auto\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this),\n        ul: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this),\n        ol: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"list-decimal list-inside mb-2\",\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this),\n        li: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mb-1\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this),\n        blockquote: ({\n          children\n        }) => /*#__PURE__*/_jsxDEV(\"blockquote\", {\n          className: \"border-l-4 border-gray-300 pl-3 italic\",\n          children: processChildren(children, onPreviewClick)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this),\n        // Style all links consistently, with special handling for :2664 URLs\n        a: ({\n          href,\n          children\n        }) => {\n          if (href && href.endsWith(\":2664\") && onPreviewClick) {\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onPreviewClick({\n                url: href,\n                content: \"\",\n                // Will be loaded via iframe\n                title: `Preview: ${new URL(href).hostname}:2664`,\n                type: \"iframe\"\n              }),\n              className: \"text-blue-600 hover:underline cursor-pointer bg-transparent border-none p-0 font-inherit inline\",\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this);\n          }\n          return /*#__PURE__*/_jsxDEV(\"a\", {\n            href: href,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"text-blue-600 hover:underline\",\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this);\n        }\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_c = MarkdownRenderer;\nexport default MarkdownRenderer;\nvar _c;\n$RefreshReg$(_c, \"MarkdownRenderer\");","map":{"version":3,"names":["React","ReactMarkdown","remarkGfm","jsxDEV","_jsxDEV","linkifyText","text","onPreviewClick","urlRegex","parts","lastIndex","match","exec","index","push","slice","url","endsWith","onClick","content","title","URL","hostname","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","length","processChildren","Array","isArray","map","child","Fragment","MarkdownRenderer","remarkPlugins","components","p","h1","h2","h3","code","pre","ul","ol","li","blockquote","a","_c","$RefreshReg$"],"sources":["/Users/gabrieleventuri/Projects/ai/annie/sdk/examples/ui/frontend/src/components/MarkdownRenderer.js"],"sourcesContent":["import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\n\n// Function to manually detect and convert plain URLs to links as a fallback\nconst linkifyText = (text, onPreviewClick) => {\n  if (typeof text !== \"string\") return text;\n\n  // Comprehensive URL regex that properly captures full URLs\n  const urlRegex = /(https?:\\/\\/[^\\s<>\"'\\]]+)/gi;\n\n  const parts = [];\n  let lastIndex = 0;\n  let match;\n\n  while ((match = urlRegex.exec(text)) !== null) {\n    // Add text before the URL\n    if (match.index > lastIndex) {\n      parts.push(text.slice(lastIndex, match.index));\n    }\n\n    // Add the URL as a clickable link\n    const url = match[0];\n\n    // Check if URL ends with :2664 for special handling\n    if (url.endsWith(\":2664\") && onPreviewClick) {\n      parts.push(\n        <button\n          key={match.index}\n          onClick={() =>\n            onPreviewClick({\n              url: url,\n              content: \"\", // Will be loaded via iframe\n              title: `Preview: ${new URL(url).hostname}:2664`,\n              type: \"iframe\",\n            })\n          }\n          className=\"text-blue-600 hover:underline cursor-pointer bg-transparent border-none p-0 font-inherit inline\"\n        >\n          {url}\n        </button>\n      );\n    } else {\n      parts.push(\n        <a\n          key={match.index}\n          href={url}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-blue-600 hover:underline\"\n        >\n          {url}\n        </a>\n      );\n    }\n\n    lastIndex = match.index + match[0].length;\n  }\n\n  // Add remaining text after the last URL\n  if (lastIndex < text.length) {\n    parts.push(text.slice(lastIndex));\n  }\n\n  return parts.length > 1 ? parts : text;\n};\n\n// Helper function to process children and linkify text\nconst processChildren = (children, onPreviewClick) => {\n  if (typeof children === \"string\") {\n    return linkifyText(children, onPreviewClick);\n  }\n  if (Array.isArray(children)) {\n    return children.map((child, index) => {\n      if (typeof child === \"string\") {\n        return (\n          <React.Fragment key={index}>\n            {linkifyText(child, onPreviewClick)}\n          </React.Fragment>\n        );\n      }\n      return child;\n    });\n  }\n  return children;\n};\n\n// Reusable markdown renderer component\nconst MarkdownRenderer = ({ children, className = \"\", onPreviewClick }) => {\n  return (\n    <div\n      className={`text-sm rounded prose prose-sm prose-gray max-w-none ${className}`}\n    >\n      <ReactMarkdown\n        remarkPlugins={[remarkGfm]}\n        components={{\n          // Add manual URL detection for text nodes\n          text: ({ children }) => {\n            return linkifyText(children, onPreviewClick);\n          },\n          p: ({ children }) => (\n            <p className=\"mb-2 last:mb-0\">\n              {processChildren(children, onPreviewClick)}\n            </p>\n          ),\n          h1: ({ children }) => (\n            <h1 className=\"text-lg font-bold mb-2\">\n              {processChildren(children, onPreviewClick)}\n            </h1>\n          ),\n          h2: ({ children }) => (\n            <h2 className=\"text-base font-bold mb-2\">\n              {processChildren(children, onPreviewClick)}\n            </h2>\n          ),\n          h3: ({ children }) => (\n            <h3 className=\"text-sm font-bold mb-1\">\n              {processChildren(children, onPreviewClick)}\n            </h3>\n          ),\n          code: ({ children }) => (\n            <code className=\"bg-gray-200 px-1 py-0.5 rounded text-xs font-mono\">\n              {children}\n            </code>\n          ),\n          pre: ({ children }) => (\n            <pre className=\"bg-gray-200 p-2 rounded text-xs overflow-x-auto\">\n              {children}\n            </pre>\n          ),\n          ul: ({ children }) => (\n            <ul className=\"list-disc list-inside mb-2\">{children}</ul>\n          ),\n          ol: ({ children }) => (\n            <ol className=\"list-decimal list-inside mb-2\">{children}</ol>\n          ),\n          li: ({ children }) => (\n            <li className=\"mb-1\">\n              {processChildren(children, onPreviewClick)}\n            </li>\n          ),\n          blockquote: ({ children }) => (\n            <blockquote className=\"border-l-4 border-gray-300 pl-3 italic\">\n              {processChildren(children, onPreviewClick)}\n            </blockquote>\n          ),\n          // Style all links consistently, with special handling for :2664 URLs\n          a: ({ href, children }) => {\n            if (href && href.endsWith(\":2664\") && onPreviewClick) {\n              return (\n                <button\n                  onClick={() =>\n                    onPreviewClick({\n                      url: href,\n                      content: \"\", // Will be loaded via iframe\n                      title: `Preview: ${new URL(href).hostname}:2664`,\n                      type: \"iframe\",\n                    })\n                  }\n                  className=\"text-blue-600 hover:underline cursor-pointer bg-transparent border-none p-0 font-inherit inline\"\n                >\n                  {children}\n                </button>\n              );\n            }\n            return (\n              <a\n                href={href}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-blue-600 hover:underline\"\n              >\n                {children}\n              </a>\n            );\n          },\n        }}\n      >\n        {children}\n      </ReactMarkdown>\n    </div>\n  );\n};\n\nexport default MarkdownRenderer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}