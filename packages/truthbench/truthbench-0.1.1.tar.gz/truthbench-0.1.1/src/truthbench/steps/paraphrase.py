from typing import Dict, Any, Optional

from truthbench.pipeline import Step, LLM


class ParaphraseStep(Step):
    """
    Generates a faithful paraphrase of a given ground-truth sentence using a language model.

    This step rewrites the input sentence while preserving its factual accuracy, completeness,
    and core meaning. The paraphrase is intended as the base version (A0) from which factual
    perturbations can later be introduced in subsequent pipeline steps.

    The output is a slightly reworded version of the original input that remains semantically
    equivalent and includes all important content without elaboration or omission.

    Attributes:
        - llm (LLM): A language model interface capable of responding to structured prompts.
        - prompt (str): The prompt to use for paraphrasing (it must contain a ground_truth placement).

    Expected Sample Fields:
        - ground_truth (str): The original sentence to be paraphrased.

    Modifies:
        - answers (dict): A dictionary with a single key `"A0"` holding the paraphrased version
          of the input.

    Counter:
        - None

    Notes:
        - If `ground_truth` is empty or missing, the `answers` field is set to `None`.
        - The paraphrased version is generated by filling in a prompt template and sending it to the LLM.
        - The prompt is designed to avoid adding, omitting, or distorting factual content.

    Example:
        Input sample:
        {
            "ground_truth": "The ozone layer protects the Earth by absorbing harmful ultraviolet radiation."
        }

        Resulting sample:
        {
            "ground_truth": "The ozone layer protects the Earth by absorbing harmful ultraviolet radiation.",
            "answers": {
                "A0": "By absorbing harmful ultraviolet rays, the ozone layer serves to shield the Earth."
            }
        }
    """

    PROMPT = (
        "Rewrite the provided sentence to express the same idea in slightly different words while preserving "
        "full accuracy, completeness, and meaning. Ensure the content remains faithful to the original and includes "
        "all key details. Do not add any note.\n\n"
        "Original:\n{ground_truth}\n\n"
        "Paraphrased version:"
    )

    def __init__(self, llm: LLM, prompt: Optional[str] = None):
        self._prompt = prompt if prompt else ParaphraseStep.PROMPT
        self._llm = llm
        super().__init__(required_fields=frozenset({"ground_truth"}))

    def step(self, sample: Dict[str, Any], tracker: Dict[str, int]) -> None:
        if not sample["ground_truth"]:
            sample["answers"] = None
            return

        prompt = self._prompt.format(ground_truth=sample["ground_truth"])
        paraphrased = self._llm.query([{"role": "user", "content": prompt}])
        sample["answers"] = {}
        sample["answers"]["A0"] = paraphrased
