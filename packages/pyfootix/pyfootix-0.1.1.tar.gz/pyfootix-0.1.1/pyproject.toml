[tool.poetry]
name = "pyfootix"
version = "0.1.1"
description = "Footix is a Python package for sports betting analysis and modeling, with a focus on football (soccer)."
authors = ["sneachchea"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "footix" }
]

[tool.poetry.dependencies]
python = ">=3.11, <3.13"
numpy = "^1.24.3"
scipy = "^1.10.1"
scikit-learn = "^1.2.2"
tqdm = "^4.65.0"
pymc = "^5.3.1"
pytensor = "^2.11.2"
torch = "^2.6.0"
requests = "^2.32.3"
networkx = "^3.4.2"
jax = "^0.6.0"
numpyro = "^0.18.0"
lxml = "^5.4.0"
cssselect = "^1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
taskipy = "^1.10.4"
isort = "^5.12.0"
black = "^23.3.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"
sphinx = "^8.1.3"
sphinx-autodoc-typehints = "^3.0.0"
sphinx-rtd-theme = "^3.0.2"
docformatter = "^1.7.5"
types-requests = "^2.32.0.20241016"

[tool.isort]
profile = "black"
line_length = 99

[tool.black]
line-length = 99
target-version = ["py310"]

[tool.docformatter]
wrap-descriptions = 98
wrap-summaries = 98

[tool.mypy]
ignore_missing_imports = true

[tool.taskipy.tasks]
lint = "flake8 --max-line-length 99 --extend-ignore=E203 ."
test = "pytest -v"
type = "mypy ."
format-isort = "isort ."
format-black = "black ."
docformat = "docformatter -r -i --blank footix"
precommit = "task format-isort && task docformat && task format-black && task lint"

[build-system]
requires = ["poetry-core>=1.2.3"]
build-backend = "poetry.core.masonry.api"