[build-system]
requires = ["setuptools>=64", "setuptools-scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "wpodnet-pytorch"
dynamic = ["version"]
description = "The implementation of ECCV 2018 paper \"License Plate Detection and Recognition in Unconstrained Scenarios\" in PyTorch"
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "python",
    "ai",
    "computer-vision",
    "deep-learning",
    "torch",
    "object-detection",
    "license-plate-recognition",
    "wpod",
    "wpod-net",
]
authors = [{ name = "Pandede" }]
maintainers = [{ name = "Pandede" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
]
dependencies = ["numpy", "Pillow", "torch", "torchvision"]

[tool.setuptools]
packages.find.include = ["wpodnet"]

[tool.setuptools_scm]
fallback_version = "0.1.0"

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "pooch"]

[project.urls]
Source = "https://github.com/Pandede/WPODNet-Pytorch"

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle (error)
    "F",   # pyflakes
    "B",   # bugbear
    "B9",
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "I",   # isort
    "UP",  # pyupgrade
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PYI", # flake8-pyi
    "RUF",
]
ignore = [
    # only relevant if you run a script with `python -0`,
    # which seems unlikely for any of the scripts in this repo
    "B011",
    # Leave it to the formatter to split long lines and
    # the judgement of all of us.
    "E501",
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source = ["wpodnet"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "return NotImplemented",
    "pragma: no cover",
    "pragma: deprecated",
    "pragma: develop",
    "pass",
]
