"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


WrapEthParamsAmountTypedDict = TypeAliasType(
    "WrapEthParamsAmountTypedDict", Union[float, str]
)
r"""The amount of ETH to wrap."""


WrapEthParamsAmount = TypeAliasType("WrapEthParamsAmount", Union[float, str])
r"""The amount of ETH to wrap."""


class WrapEthParamsTypedDict(TypedDict):
    r"""Parameters model for wrapping ETH into WETH."""

    amount: WrapEthParamsAmountTypedDict
    r"""The amount of ETH to wrap."""


class WrapEthParams(BaseModel):
    r"""Parameters model for wrapping ETH into WETH."""

    amount: WrapEthParamsAmount
    r"""The amount of ETH to wrap."""
