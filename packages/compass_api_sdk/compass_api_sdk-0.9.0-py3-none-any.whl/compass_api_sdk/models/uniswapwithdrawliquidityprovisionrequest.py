"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict = (
    TypeAliasType(
        "UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict",
        Union[float, str],
    )
)
r"""How much liquidity to take out in percentage."""


UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawal = TypeAliasType(
    "UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawal", Union[float, str]
)
r"""How much liquidity to take out in percentage."""


class UniswapWithdrawLiquidityProvisionRequestTypedDict(TypedDict):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""
    percentage_for_withdrawal: (
        UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict
    )
    r"""How much liquidity to take out in percentage."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class UniswapWithdrawLiquidityProvisionRequest(BaseModel):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""

    percentage_for_withdrawal: (
        UniswapWithdrawLiquidityProvisionRequestPercentageForWithdrawal
    )
    r"""How much liquidity to take out in percentage."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
