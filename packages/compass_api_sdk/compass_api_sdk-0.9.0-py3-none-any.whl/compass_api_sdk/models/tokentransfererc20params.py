"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


TokenTransferErc20ParamsAmountTypedDict = TypeAliasType(
    "TokenTransferErc20ParamsAmountTypedDict", Union[float, str]
)
r"""Amount of token to transfer"""


TokenTransferErc20ParamsAmount = TypeAliasType(
    "TokenTransferErc20ParamsAmount", Union[float, str]
)
r"""Amount of token to transfer"""


class TokenTransferErc20ParamsTypedDict(TypedDict):
    r"""Parameters model for transferring ERC20 tokens."""

    amount: TokenTransferErc20ParamsAmountTypedDict
    r"""Amount of token to transfer"""
    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    to: str
    r"""The recipient of the tokens."""


class TokenTransferErc20Params(BaseModel):
    r"""Parameters model for transferring ERC20 tokens."""

    amount: TokenTransferErc20ParamsAmount
    r"""Amount of token to transfer"""

    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    to: str
    r"""The recipient of the tokens."""
