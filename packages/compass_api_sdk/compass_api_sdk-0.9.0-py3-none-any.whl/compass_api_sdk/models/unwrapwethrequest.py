"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


UnwrapWethRequestAmountTypedDict = TypeAliasType(
    "UnwrapWethRequestAmountTypedDict", Union[float, str]
)
r"""The amount of WETH to unwrap."""


UnwrapWethRequestAmount = TypeAliasType("UnwrapWethRequestAmount", Union[float, str])
r"""The amount of WETH to unwrap."""


class UnwrapWethRequestTypedDict(TypedDict):
    r"""Request model for unwrapping WETH back to native ETH."""

    amount: UnwrapWethRequestAmountTypedDict
    r"""The amount of WETH to unwrap."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class UnwrapWethRequest(BaseModel):
    r"""Request model for unwrapping WETH back to native ETH."""

    amount: UnwrapWethRequestAmount
    r"""The amount of WETH to unwrap."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
