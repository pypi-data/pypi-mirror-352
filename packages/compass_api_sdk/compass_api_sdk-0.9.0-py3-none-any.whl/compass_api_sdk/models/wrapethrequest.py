"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


WrapEthRequestAmountTypedDict = TypeAliasType(
    "WrapEthRequestAmountTypedDict", Union[float, str]
)
r"""The amount of ETH to wrap."""


WrapEthRequestAmount = TypeAliasType("WrapEthRequestAmount", Union[float, str])
r"""The amount of ETH to wrap."""


class WrapEthRequestTypedDict(TypedDict):
    r"""Request model for wrapping ETH into WETH."""

    amount: WrapEthRequestAmountTypedDict
    r"""The amount of ETH to wrap."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class WrapEthRequest(BaseModel):
    r"""Request model for wrapping ETH into WETH."""

    amount: WrapEthRequestAmount
    r"""The amount of ETH to wrap."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
