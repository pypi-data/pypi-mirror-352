"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from enum import Enum
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


class SkyBuyParamsTokenIn(str, Enum):
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""

    DAI = "DAI"
    USDC = "USDC"


SkyBuyParamsAmountTypedDict = TypeAliasType(
    "SkyBuyParamsAmountTypedDict", Union[float, str]
)
r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""


SkyBuyParamsAmount = TypeAliasType("SkyBuyParamsAmount", Union[float, str])
r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""


class SkyBuyParamsTypedDict(TypedDict):
    token_in: SkyBuyParamsTokenIn
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""
    amount: SkyBuyParamsAmountTypedDict
    r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""


class SkyBuyParams(BaseModel):
    token_in: SkyBuyParamsTokenIn
    r"""The token you would like to swap 1:1 for USDS. Choose from DAI or USDC."""

    amount: SkyBuyParamsAmount
    r"""The amount of USDS you would like to buy 1:1 with 'token_in'."""
