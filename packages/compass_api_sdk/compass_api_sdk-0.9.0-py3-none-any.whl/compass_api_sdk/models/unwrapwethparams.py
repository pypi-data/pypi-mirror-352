"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


UnwrapWethParamsAmountTypedDict = TypeAliasType(
    "UnwrapWethParamsAmountTypedDict", Union[float, str]
)
r"""The amount of WETH to unwrap."""


UnwrapWethParamsAmount = TypeAliasType("UnwrapWethParamsAmount", Union[float, str])
r"""The amount of WETH to unwrap."""


class UnwrapWethParamsTypedDict(TypedDict):
    r"""Parameters model for unwrapping WETH back to native ETH."""

    amount: UnwrapWethParamsAmountTypedDict
    r"""The amount of WETH to unwrap."""


class UnwrapWethParams(BaseModel):
    r"""Parameters model for unwrapping WETH back to native ETH."""

    amount: UnwrapWethParamsAmount
    r"""The amount of WETH to unwrap."""
