"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict = TypeAliasType(
    "AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict",
    Union[float, str],
)
r"""How much liquidity to take out in percentage."""


AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawal = (
    TypeAliasType(
        "AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawal",
        Union[float, str],
    )
)
r"""How much liquidity to take out in percentage."""


class AerodromeSlipstreamWithdrawLiquidityProvisionRequestTypedDict(TypedDict):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""
    percentage_for_withdrawal: AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawalTypedDict
    r"""How much liquidity to take out in percentage."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class AerodromeSlipstreamWithdrawLiquidityProvisionRequest(BaseModel):
    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""

    percentage_for_withdrawal: (
        AerodromeSlipstreamWithdrawLiquidityProvisionRequestPercentageForWithdrawal
    )
    r"""How much liquidity to take out in percentage."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
