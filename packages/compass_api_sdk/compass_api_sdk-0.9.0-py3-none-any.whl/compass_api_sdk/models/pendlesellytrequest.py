"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


PendleSellYtRequestAmountTypedDict = TypeAliasType(
    "PendleSellYtRequestAmountTypedDict", Union[float, str]
)
r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""


PendleSellYtRequestAmount = TypeAliasType(
    "PendleSellYtRequestAmount", Union[float, str]
)
r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""


class PendleSellYtRequestTypedDict(TypedDict):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to sell."""
    amount: PendleSellYtRequestAmountTypedDict
    r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class PendleSellYtRequest(BaseModel):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to sell."""

    amount: PendleSellYtRequestAmount
    r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
