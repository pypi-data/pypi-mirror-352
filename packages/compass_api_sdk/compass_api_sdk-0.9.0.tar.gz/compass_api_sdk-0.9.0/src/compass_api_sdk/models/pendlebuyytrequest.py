"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


PendleBuyYtRequestAmountTypedDict = TypeAliasType(
    "PendleBuyYtRequestAmountTypedDict", Union[float, str]
)
r"""The amount of market's Underlying Token you would like to sell for market's Yield Token (YT)."""


PendleBuyYtRequestAmount = TypeAliasType("PendleBuyYtRequestAmount", Union[float, str])
r"""The amount of market's Underlying Token you would like to sell for market's Yield Token (YT)."""


class PendleBuyYtRequestTypedDict(TypedDict):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to buy."""
    amount: PendleBuyYtRequestAmountTypedDict
    r"""The amount of market's Underlying Token you would like to sell for market's Yield Token (YT)."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class PendleBuyYtRequest(BaseModel):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to buy."""

    amount: PendleBuyYtRequestAmount
    r"""The amount of market's Underlying Token you would like to sell for market's Yield Token (YT)."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
