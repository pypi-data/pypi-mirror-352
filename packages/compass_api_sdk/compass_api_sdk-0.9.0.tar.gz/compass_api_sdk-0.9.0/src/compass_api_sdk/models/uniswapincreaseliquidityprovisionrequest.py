"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


UniswapIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict", Union[float, str]
)
r"""The desired amount of the first token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount0Desired = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount0Desired", Union[float, str]
)
r"""The desired amount of the first token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict", Union[float, str]
)
r"""The desired amount of the second token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount1Desired = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount1Desired", Union[float, str]
)
r"""The desired amount of the second token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount0MinTypedDict = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount0MinTypedDict", Union[float, str]
)
r"""The minimum amount of the first token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount0Min = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount0Min", Union[float, str]
)
r"""The minimum amount of the first token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount1MinTypedDict = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount1MinTypedDict", Union[float, str]
)
r"""The minimum amount of the second token to deposit"""


UniswapIncreaseLiquidityProvisionRequestAmount1Min = TypeAliasType(
    "UniswapIncreaseLiquidityProvisionRequestAmount1Min", Union[float, str]
)
r"""The minimum amount of the second token to deposit"""


class UniswapIncreaseLiquidityProvisionRequestTypedDict(TypedDict):
    r"""Request model for increasing liquidity provision in Uniswap V3."""

    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""
    amount0_desired: UniswapIncreaseLiquidityProvisionRequestAmount0DesiredTypedDict
    r"""The desired amount of the first token to deposit"""
    amount1_desired: UniswapIncreaseLiquidityProvisionRequestAmount1DesiredTypedDict
    r"""The desired amount of the second token to deposit"""
    amount0_min: UniswapIncreaseLiquidityProvisionRequestAmount0MinTypedDict
    r"""The minimum amount of the first token to deposit"""
    amount1_min: UniswapIncreaseLiquidityProvisionRequestAmount1MinTypedDict
    r"""The minimum amount of the second token to deposit"""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class UniswapIncreaseLiquidityProvisionRequest(BaseModel):
    r"""Request model for increasing liquidity provision in Uniswap V3."""

    token_id: int
    r"""Token ID of the NFT representing the liquidity provisioned position."""

    amount0_desired: UniswapIncreaseLiquidityProvisionRequestAmount0Desired
    r"""The desired amount of the first token to deposit"""

    amount1_desired: UniswapIncreaseLiquidityProvisionRequestAmount1Desired
    r"""The desired amount of the second token to deposit"""

    amount0_min: UniswapIncreaseLiquidityProvisionRequestAmount0Min
    r"""The minimum amount of the first token to deposit"""

    amount1_min: UniswapIncreaseLiquidityProvisionRequestAmount1Min
    r"""The minimum amount of the second token to deposit"""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
