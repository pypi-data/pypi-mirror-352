"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


PendleSellYtParamsAmountTypedDict = TypeAliasType(
    "PendleSellYtParamsAmountTypedDict", Union[float, str]
)
r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""


PendleSellYtParamsAmount = TypeAliasType("PendleSellYtParamsAmount", Union[float, str])
r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""


class PendleSellYtParamsTypedDict(TypedDict):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to sell."""
    amount: PendleSellYtParamsAmountTypedDict
    r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""


class PendleSellYtParams(BaseModel):
    market_address: str
    r"""The address of the market identifying which Yield Token (YT) you would like to sell."""

    amount: PendleSellYtParamsAmount
    r"""The amount of market's Yield Token (YT) you would like to sell for market's Underlying Token."""
