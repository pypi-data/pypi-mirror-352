"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from compass_api_sdk.types import BaseModel
from enum import Enum
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


class SkySellParamsTokenOut(str, Enum):
    r"""The token you would like to swap 1:1 with USDS. Choose from DAI or USDC."""

    DAI = "DAI"
    USDC = "USDC"


SkySellParamsAmountTypedDict = TypeAliasType(
    "SkySellParamsAmountTypedDict", Union[float, str]
)
r"""The amount of USDS you would like to sell 1:1 for 'token_out'."""


SkySellParamsAmount = TypeAliasType("SkySellParamsAmount", Union[float, str])
r"""The amount of USDS you would like to sell 1:1 for 'token_out'."""


class SkySellParamsTypedDict(TypedDict):
    token_out: SkySellParamsTokenOut
    r"""The token you would like to swap 1:1 with USDS. Choose from DAI or USDC."""
    amount: SkySellParamsAmountTypedDict
    r"""The amount of USDS you would like to sell 1:1 for 'token_out'."""


class SkySellParams(BaseModel):
    token_out: SkySellParamsTokenOut
    r"""The token you would like to swap 1:1 with USDS. Choose from DAI or USDC."""

    amount: SkySellParamsAmount
    r"""The amount of USDS you would like to sell 1:1 for 'token_out'."""
