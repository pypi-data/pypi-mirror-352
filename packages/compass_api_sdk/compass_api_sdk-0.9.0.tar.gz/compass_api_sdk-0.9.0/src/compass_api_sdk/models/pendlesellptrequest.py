"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


PendleSellPtRequestAmountTypedDict = TypeAliasType(
    "PendleSellPtRequestAmountTypedDict", Union[float, str]
)
r"""The amount of market's Principal Token (PT) you would like to sell for market's Underlying Token."""


PendleSellPtRequestAmount = TypeAliasType(
    "PendleSellPtRequestAmount", Union[float, str]
)
r"""The amount of market's Principal Token (PT) you would like to sell for market's Underlying Token."""


class PendleSellPtRequestTypedDict(TypedDict):
    market_address: str
    r"""The address of the market identifying which Principal Token (PT) you would like to sell."""
    amount: PendleSellPtRequestAmountTypedDict
    r"""The amount of market's Principal Token (PT) you would like to sell for market's Underlying Token."""
    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The address of the transaction sender."""


class PendleSellPtRequest(BaseModel):
    market_address: str
    r"""The address of the market identifying which Principal Token (PT) you would like to sell."""

    amount: PendleSellPtRequestAmount
    r"""The amount of market's Principal Token (PT) you would like to sell for market's Underlying Token."""

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The address of the transaction sender."""
