import os
import shutil
import pandas as pd
import re
from .utils import _load_library

respak75 = _load_library("respak75")


def osp(prot_file):
    """
    Occluded Surface Packing (OSP)

    Implements the 'occluded surface' packing density metric (OSP) averaged per residue,
    as described in Fleming and Richards (2000).

    Parameters
    ----------
    file : str
        Path to a .srf file generated by `occluded_surface`. This file should be located
        in the `fibos_files` folder or another valid directory.

    Returns
    -------
    pandas.DataFrame
        A table with the following columns:

        - 'Resnum': Residue identifier.
        - 'Resname': Residue name.
        - 'OS': Total occluded surface area (sum of dot areas) in the residue.
        - 'os*[1-raylen]': Weighted OS area, accounting for packing quality. 
          The raylen is the average length of normals, normalized by 2.8 Ã… (diameter of water).
          A raylen close to 1 indicates poor packing, reducing the contribution of this term.
        - 'OSP': Average occluded surface packing value for the residue.

    See Also
    --------
    occluded_surface : Calculates the occluded surface per atom and generates the required .srf file.

    References
    ----------
    Fleming PJ, Richards FM (2000). Protein packing: Dependence on protein size, secondary structure
    and amino acid composition. https://doi.org/10.1006/jmbi.2000.3750

    Pattabiraman N, Ward KB, Fleming PJ (1995). Occluded molecular surface: Analysis of protein packing.
    https://doi.org/10.1002/jmr.300080603

    Soares HHM, Romanelli JPR, Fleming PJ, da Silveira CH (2024). bioRxiv. https://doi.org/10.1101/2024.11.01.621530

    Examples
    --------
    >>> from fibos import osp
    >>> df = osp("fibos_files/prot_1ptx.srf")
    >>> print(df.head())
    """

    if not(os.path.exists(prot_file)):
        raise FileNotFoundError("File not Found: "+prot_file)
    if not(os.path.exists("fibos_files")):
        os.create_folder("fibos_files")
    else:
        if(prot_file!="prot.srf"):
            shutil.copy(prot_file,"prot.srf")
        respak75.respak_()
        if(prot_file!="prot.srf"):
            os.remove("prot.srf")
        prot_name = prot_file.removesuffix(".srf")
        prot_name = "prot_"+prot_name[-4:]
        prot_name = prot_name+".pak"
        os.rename("prot.pak",prot_name)
        #os.rename("prot.pak",prot_name)
        shutil.copy2(prot_name,"fibos_files")
        os.remove(prot_name)
        prot_name = "fibos_files/"+prot_name
    return (pd.read_table(prot_name, header=0, sep=r'\s+'))

def read_osp(prot_file):
    if not(os.path.exists(prot_file)):
        raise FileNotFoundError("File not Found: "+prot_file)
    return (pd.read_table(prot_file, header=0, sep=r'\s+'))