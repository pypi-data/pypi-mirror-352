name: Pytest on Windows (common)

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    runs-on: windows-latest

    env:
      UV_PROJECT_ENVIRONMENT: "C:\\Users\\runneradmin\\miniconda3\\envs\\owa"
      # below line is legacy line, but I'm keeping it here for reference to know where the packages are installed
      # GST_PLUGIN_PATH: "D:\\a\\open-world-agents\\open-world-agents\\projects\\owa-env-gst\\gst-plugins"
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install the latest version of uv
        id: setup-uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
          enable-cache: true
      
      - name: Do something if the cache was restored
        if: steps.setup-uv.outputs.cache-hit == 'true'
        run: echo "Cache was restored"
      
      - name: Cache conda
        uses: actions/cache@v4
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          # Use faster GNU tar
          enableCrossOsArchive: true
          path: D:\conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('projects/owa-env-gst/environment.yml') }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          mamba-version: "*"
          channels: conda-forge
          conda-remove-defaults: "true"
          environment-file: projects/owa-env-gst/environment.yml
          pkgs-dirs: D:\conda_pkgs_dir
          activate-environment: owa

      - name: Install dependencies (will pick up UV_PROJECT_ENVIRONMENT automatically)
        run: uv sync --inexact --dev # turn on --inexact to prevent removing gst packages

      - name: Run pytest (will also pick it up)
        run: |
          pytest