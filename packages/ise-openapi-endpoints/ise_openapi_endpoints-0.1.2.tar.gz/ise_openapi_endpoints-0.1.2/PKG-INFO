Metadata-Version: 2.4
Name: ise-openapi-endpoints
Version: 0.1.2
Summary: Python Library for ISE Endpoints OpenApi API - Swagger Codegen Edition
Author-email: Thomas Christory <thomas@christory.net>
Requires-Python: >=3.10
Requires-Dist: certifi>=14.5.14
Requires-Dist: python-dateutil>=2.5.3
Requires-Dist: setuptools>=21.0.0
Requires-Dist: six>=1.10
Requires-Dist: urllib3>=1.15.1
Description-Content-Type: text/markdown

# Ise OpenApi Endpoints
No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

This Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

- API version: 1.0.0
- Package version: 0.1.0
- Build package: io.swagger.codegen.v3.generators.python.PythonClientCodegen

## Requirements.

Python 2.7 and 3.4+

## Installation & Usage
### pip install

If the python package is hosted on Github, you can install directly from Github

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import ise_openapi_endpoints 
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import ise_openapi_endpoints
```

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python
from __future__ import print_function
import time
import ise_openapi_endpoints
from ise_openapi_endpoints.rest import ApiException
from pprint import pprint
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
body = [ise_openapi_endpoints.OpenAPIEndpoint()] # list[OpenAPIEndpoint] |  (optional)

try:
    # Create Endpoint in bulk
    api_response = api_instance.create_bulk_end_points(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->create_bulk_end_points: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
body = ise_openapi_endpoints.OpenAPIEndpoint() # OpenAPIEndpoint |  (optional)

try:
    # Create Endpoint
    api_response = api_instance.create_end_point(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->create_end_point: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
body = ise_openapi_endpoints.OpenAPIEndpoint() # OpenAPIEndpoint |  (optional)

try:
    # Create Endpoint task
    api_response = api_instance.create_end_point_task(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->create_end_point_task: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
body = ise_openapi_endpoints.BulkEndpoints() # BulkEndpoints |  (optional)

try:
    # Delete Endpoint in bulk
    api_response = api_instance.delete_bulk_end_points(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->delete_bulk_end_points: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
value = 'value_example' # str | The id or MAC of the endpoint

try:
    # Delete endpoint by id or mac
    api_response = api_instance.delete_endpoint(value)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->delete_endpoint: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
value = 'value_example' # str | The id or MAC of the endpoint

try:
    # Get endpoint by id or MAC
    api_response = api_instance.get1(value)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->get1: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))

try:
    # Get aggregate of device types
    api_response = api_instance.get_device_type_summary()
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->get_device_type_summary: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
page = 56 # int | Page number (optional)
size = 56 # int | Number of objects returned per page (optional)
sort = 'sort_example' # str | sort type - asc or desc (optional)
sort_by = 'sort_by_example' # str | sort column by which objects needs to be sorted (optional)
filter = 'filter_example' # str | <div> <style type=\"text/css\" scoped> .apiServiceTable td, .apiServiceTable th { padding: 5px 10px !important; text-align: left; } </style> <span> <b>Simple filtering</b> should be available through the filter query string parameter. The structure of a filter is a triplet of field operator and value separated with dots. More than one filter can be sent. The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the <i>\"filterType=or\"</i> query string parameter. Each resource Data model description should specify if an attribute is a filtered field. </span> <br /> <table class=\"apiServiceTable\"> <thead> <tr> <th>OPERATOR</th> <th>DESCRIPTION</th> </tr> </thead> <tbody> <tr> <td>EQ</td> <td>Equals</td> </tr> <tr> <td>NEQ</td> <td>Not Equals</td> </tr> <tr> <td>GT</td> <td>Greater Than</td> </tr> <tr> <td>LT</td> <td>Less Then</td> </tr> <tr> <td>STARTSW</td> <td>Starts With</td> </tr> <tr> <td>NSTARTSW</td> <td>Not Starts With</td> </tr> <tr> <td>ENDSW</td> <td>Ends With</td> </tr> <tr> <td>NENDSW</td> <td>Not Ends With</td> </tr> <tr> <td>CONTAINS</td> <td>Contains</td> </tr> <tr> <td>NCONTAINS</td> <td>Not Contains</td> </tr> </tbody> </table> </div> (optional)
filter_type = 'filter_type_example' # str | The logical operator common to ALL filter criteria will be by default AND, and can be changed by using the parameter (optional)

try:
    # Get all endpoints
    api_response = api_instance.list1(page=page, size=size, sort=sort, sort_by=sort_by, filter=filter, filter_type=filter_type)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->list1: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
body = [ise_openapi_endpoints.OpenAPIEndpoint()] # list[OpenAPIEndpoint] |  (optional)

try:
    # Update Endpoint in bulk
    api_response = api_instance.update_bulk_end_points(body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->update_bulk_end_points: %s\n" % e)
# Configure HTTP basic authorization: httpBasic
configuration = ise_openapi_endpoints.Configuration()
configuration.username = 'YOUR_USERNAME'
configuration.password = 'YOUR_PASSWORD'

# create an instance of the API class
api_instance = ise_openapi_endpoints.EndpointsApi(ise_openapi_endpoints.ApiClient(configuration))
value = 'value_example' # str | The id or MAC of the endpoint
body = ise_openapi_endpoints.OpenAPIEndpoint() # OpenAPIEndpoint |  (optional)

try:
    # Update Endpoint by id or mac
    api_response = api_instance.update_endpoint(value, body=body)
    pprint(api_response)
except ApiException as e:
    print("Exception when calling EndpointsApi->update_endpoint: %s\n" % e)
```

## Documentation for API Endpoints

All URIs are relative to *https://172.23.160.114:44330*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*EndpointsApi* | [**create_bulk_end_points**](docs/EndpointsApi.md#create_bulk_end_points) | **POST** /api/v1/endpoint/bulk | Create Endpoint in bulk
*EndpointsApi* | [**create_end_point**](docs/EndpointsApi.md#create_end_point) | **POST** /api/v1/endpoint | Create Endpoint
*EndpointsApi* | [**create_end_point_task**](docs/EndpointsApi.md#create_end_point_task) | **POST** /api/v1/endpointTask | Create Endpoint task
*EndpointsApi* | [**delete_bulk_end_points**](docs/EndpointsApi.md#delete_bulk_end_points) | **DELETE** /api/v1/endpoint/bulk | Delete Endpoint in bulk
*EndpointsApi* | [**delete_endpoint**](docs/EndpointsApi.md#delete_endpoint) | **DELETE** /api/v1/endpoint/{value} | Delete endpoint by id or mac
*EndpointsApi* | [**get1**](docs/EndpointsApi.md#get1) | **GET** /api/v1/endpoint/{value} | Get endpoint by id or MAC
*EndpointsApi* | [**get_device_type_summary**](docs/EndpointsApi.md#get_device_type_summary) | **GET** /api/v1/endpoint/deviceType/summary | Get aggregate of device types
*EndpointsApi* | [**list1**](docs/EndpointsApi.md#list1) | **GET** /api/v1/endpoint | Get all endpoints
*EndpointsApi* | [**update_bulk_end_points**](docs/EndpointsApi.md#update_bulk_end_points) | **PUT** /api/v1/endpoint/bulk | Update Endpoint in bulk
*EndpointsApi* | [**update_endpoint**](docs/EndpointsApi.md#update_endpoint) | **PUT** /api/v1/endpoint/{value} | Update Endpoint by id or mac

## Documentation For Models

 - [BulkEndpoints](docs/BulkEndpoints.md)
 - [DeviceTypeEntry](docs/DeviceTypeEntry.md)
 - [Error](docs/Error.md)
 - [OpenAPIEndpoint](docs/OpenAPIEndpoint.md)
 - [TaskResponse](docs/TaskResponse.md)

## Documentation For Authorization


## httpBasic

- **Type**: HTTP basic authentication


## Author


