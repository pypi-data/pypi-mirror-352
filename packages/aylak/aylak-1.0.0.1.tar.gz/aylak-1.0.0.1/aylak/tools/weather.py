import aiohttp
from typing import List, Union, Dict, Any, Literal

""" c    Hava Durumu,
    C    Hava Durumu Metin AdÄ±,
    x    Hava durumu, dÃ¼z metin sembolÃ¼,
    h    Nem,
    t    SÄ±caklÄ±k (gerÃ§ek),
    f    SÄ±caklÄ±k (Hissediyor),
    w    RÃ¼zgÃ¢r,
    l    Konum,
    m    Ay evreleri ðŸŒ‘ðŸŒ’ðŸŒ“ðŸŒ”ðŸŒ•ðŸŒ–ðŸŒ—ðŸŒ˜,
    M    Ay GÃ¼nÃ¼,
    p    YaÄŸÄ±ÅŸ (mm/3 saat),
    P    BasÄ±nÃ§ (HPA),
    u    UV endeksi (1-12),

    D    Åžafak*,
    S    gÃ¼ndoÄŸumu*,
    z    Zirvi*,
    s    GÃ¼n batÄ±mÄ±*,
    d    AlacakaranlÄ±kta*,
    T    Åžimdiki zaman*,
    Z    Yerel saat dilimi.

(*times are shown in the local timezone)"""


class Weather:
    def __init__(self):
        self.MAIN_URL = "https://wttr.in/{city}?"
        self.turkish_chars = {
            "Ã§": "c",
            "ÄŸ": "g",
            "Ä±": "i",
            "iÌ‡": "i",
            "Ã¶": "o",
            "ÅŸ": "s",
            "Ã¼": "u",
        }
        self.formats = {
            "%c": "HavaDurumu",
            "%C": "HavaDurumuMetin",
            "%x": "HavaDurumuSembol",
            "%h": "Nem",
            "%t": "SÄ±caklÄ±k",
            "%f": "HissedilenSÄ±caklÄ±k",
            "%w": "RÃ¼zgar",
            "%l": "Konum",
            "%m": "AyEvreleri",
            "%M": "AyGÃ¼nÃ¼",
            "%p": "YaÄŸÄ±ÅŸ",
            "%P": "BasÄ±nÃ§",
            "%u": "UV",
            "%D": "Åžafak",
            "%S": "GÃ¼ndoÄŸumu",
            "%z": "Zirvi",
            "%s": "GÃ¼nbatÄ±mÄ±",
            "%d": "AlacakaranlÄ±k",
            "%T": "ÅžimdikiZaman",
            "%Z": "SaatDilimi",
        }
        ["%c", "%t", "%w", "%h", "%C"],

    async def weather(
        self,
        city: str,
        formats: List[str] = [
            "HavaDurumu",
            "SÄ±caklÄ±k",
            "RÃ¼zgar",
            "Nem",
            "HavaDurumuMetin",
        ],
        response_type: Union[
            str,
            Literal[
                "json",
                "text",
            ],
        ] = "text",
    ) -> Union[Dict[str, Any], str]:
        """Belirtilen ÅŸehir iÃ§in hava durumu bilgilerini alÄ±r.

        Args:
            city (str): Hava durumu bilgisi alÄ±nacak ÅŸehir.
            formats (List[str], optional): Hava durumu bilgilerinin formatÄ±. Defaults to ["HavaDurumu", "SÄ±caklÄ±k", "RÃ¼zgar", "Nem", "HavaDurumuMetin"].
            response_type (Union[str, Literal["json", "text"]], optional): Hava durumu bilgilerinin tipi. Defaults to "text".

        Returns:
            Union[Dict[str, Any], str]: Hava durumu bilgileri.
        """
        city = city.lower().replace(" ", "+")
        for char in self.turkish_chars:
            city = city.replace(char, self.turkish_chars[char])
        url = self.MAIN_URL.format(city=city)

        for format in formats:
            if format not in self.formats.values():
                raise ValueError(f"{format} formatÄ± desteklenmiyor!")

        url += "&format=%s" % "".join(
            [
                f"%{list(self.formats.keys())[list(self.formats.values()).index(format)]}"
                for format in formats
            ]
        )

        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response_type == "json":
                    return await response.json()
                return await response.text()
