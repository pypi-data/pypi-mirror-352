////////////////////////////////////////////////////////////////////
// A simple power generation problem loosely modeled on the 
// problem of unit commitment.
//
// A number of power producers cooperate to meet daily demand that 
// fluctuates according to the maximum temperature on a given day.
// A cost is incurred for every unit of power produced and income
// is received for every unit consumed by the demand.  There 
// is a large penalty for failing to meet demand on a given
// day and there are per-power plant penalties for deviating from 
// the previous day's production at each plant -- some plants
// must pay higher operating costs for changes in production.
// Power generation is in integer units, consumption is real,
// and time steps are assumed to span 24 hours.       
//
// Some issues that could be addressed in more complex models
// (power line load limits and losses, uncertainty and constraints
// in production by source -- thermal, nuclear, renewables)
// are discussed here:
//
//   http://en.wikipedia.org/wiki/Power_system_simulation  
//
// This version is in RDDL 2.0 format.
//
// Author: Scott Sanner (ssanner@gmail.com)
//
////////////////////////////////////////////////////////////////////

non-fluents power_gen3 {
    domain = power_gen;

    objects {
		plant : {p1, p2, p3};
	};
}

// Specify three power plants with default settings
instance inst_power_gen {

	domain = power_gen;
	
	non-fluents = power_gen3;
  
	init-state { 
		temperature = 10;
	};
  
  	// State-action constraints above are sufficient
	max-nondef-actions = pos-inf;
  
	horizon  = 40;
	discount = 1.0;
}