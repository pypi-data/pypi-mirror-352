// This file is autogenerated. DO NOT EDIT

#pragma once
#include <semiwrap.h>

// wrapped header

#include <frc/Relay.h>

// from extra_includes
#include <wpi/sendable/SendableBuilder.h>
#include <wpi/SmallString.h>

#include <trampolines/frc__MotorSafety.hpp>
#include <trampolines/wpi__Sendable.hpp>

namespace frc {

template <typename CfgBase = swgen::EmptyTrampolineCfg>
struct PyTrampolineCfg_Relay :
  frc::PyTrampolineCfg_MotorSafety<
  wpi::PyTrampolineCfg_Sendable<
  CfgBase
  >
  >
{
  using Base = frc::Relay;
  using override_base_StopMotor_v = frc::Relay;
  using override_base_KGetDescription_v = frc::Relay;
  using override_base_InitSendable_RTSendableBuilder = frc::Relay;
};

template <typename PyTrampolineBase, typename PyTrampolineCfg>
using PyTrampolineBase_Relay =
  frc::PyTrampoline_MotorSafety<
    wpi::PyTrampoline_Sendable<
      PyTrampolineBase
      , PyTrampolineCfg>
    , PyTrampolineCfg>
;

template <typename PyTrampolineBase, typename PyTrampolineCfg>
struct PyTrampoline_Relay : PyTrampolineBase_Relay<PyTrampolineBase, PyTrampolineCfg> {
  using PyTrampolineBase_Relay<PyTrampolineBase, PyTrampolineCfg>::PyTrampolineBase_Relay;
  using Value [[maybe_unused]] = typename frc::Relay::Value;
  using Direction [[maybe_unused]] = typename frc::Relay::Direction;

  #ifndef SWGEN_DISABLE_StopMotor_v
    void StopMotor() override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_StopMotor_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "stopMotor", );
      return CxxCallBase::StopMotor();
    }
  #endif

  #ifndef SWGEN_DISABLE_KGetDescription_v
    std::string GetDescription() const override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_KGetDescription_v;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(std::string), LookupBase,
        "getDescription", );
      return CxxCallBase::GetDescription();
    }
  #endif

  #ifndef SWGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(wpi::SendableBuilder& builder) override {
      using LookupBase = typename PyTrampolineCfg::Base;
      using CxxCallBase = typename PyTrampolineCfg::override_base_InitSendable_RTSendableBuilder;
      PYBIND11_OVERRIDE_IMPL(PYBIND11_TYPE(void), LookupBase,
        "initSendable", builder);
      return CxxCallBase::InitSendable(std::forward<decltype(builder)>(builder));
    }
  #endif
};

}; // namespace frc
