[project]
name = "symrank"
version = "0.1.5"
description = "High-performance cosine similarity ranking for Retrieval-Augmented Generation (RAG) pipelines, vector search, and information retrieval, with a Python interface powered by a Rust backend."
readme = "README.md"
authors = [
    { name = "Ross Armstrong", email = "ross.armstrong@analyticsinmotion.com" }
]
requires-python = ">=3.10"
license = {file = 'LICENSE'}
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering",
]
keywords = [
  "symrank",
  "vector similarity",
  "cosine similarity",
  "ranking",
  "reranking",
  "retrieval",
  "rag",
  "retrieval-augmented-generation",
  "semantic search",
  "embedding search",
  "vector search",
  "machine learning",
  "information retrieval"
]
dependencies = []

[build-system]
requires = ["maturin>=1.8,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "src"
manifest-path = "symrank-core/Cargo.toml"
module-name = "symrank" # <-- matches Rust crate name
bindings = "pyo3" # <-- explicitly state to maturin that it's a PyO3 project
include = ["LICENSE", "NOTICE", "README.md", "src/**"]

[project.optional-dependencies]
dev = [
    "maturin >=1.8.3",
    "pytest >=8.3.5",
    "ruff >=0.11.10",
    "mypy >=1.15.0",
]

benchmarks = [
    "scikit-learn >=1.6.1",
    "numpy >=2.2.5",
    "datasets >=3.6.0",
]


[project.urls]
"Repository" = "https://github.com/analyticsinmotion/symrank"
"Bug Tracker" = "https://github.com/analyticsinmotion/symrank/issues"

[tool.ruff]
line-length = 88                     # <-- Max line length, consistent with Black
target-version = "py313"             # <-- Target Python 3.13
extend-include = ["benchmarks"]      # <-- Also lint the benchmarks directory
extend-exclude = ["symrank-core"]       # <-- Exclude the Rust source code directory

[tool.mypy]
python_version = "3.13"              # <-- Target Python 3.13
ignore_missing_imports = true        # <-- Suppress errors for 3rd-party packages without stubs
strict = true                        # <-- Enable strict mode for safer code
exclude = "^(tests|benchmarks)/"     # <-- Exclude tests and benchmarks from type checking
