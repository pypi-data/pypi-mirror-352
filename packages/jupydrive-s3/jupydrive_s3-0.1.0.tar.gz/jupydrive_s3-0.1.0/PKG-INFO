Metadata-Version: 2.4
Name: jupydrive_s3
Version: 0.1.0
Dynamic: Keywords
Summary: A JupyterLab extension which enables client-side drives access.
Project-URL: Homepage, https://github.com/QuantStack/jupydrive-s3
Project-URL: Bug Tracker, https://github.com/QuantStack/jupydrive-s3/issues
Project-URL: Repository, https://github.com/QuantStack/jupydrive-s3.git
Author-email: QuantStack <denisa.checiu@quantstack.net>
License: BSD 3-Clause License
        
        Copyright (c) 2024, QuantStack
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
License-File: LICENSE
Classifier: Framework :: Jupyter
Classifier: Framework :: Jupyter :: JupyterLab
Classifier: Framework :: Jupyter :: JupyterLab :: 4
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions
Classifier: Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Requires-Dist: jupyter-secrets-manager<0.5,>=0.4
Description-Content-Type: text/markdown

# jupydrive-s3

[![Github Actions Status](https://github.com/QuantStack/jupydrive-s3/workflows/Build/badge.svg)](https://github.com/QuantStack/jupydrive-s3/actions/workflows/build.yml)
A JupyterLab extension which enables client-side drives access.

![Screenshot from 2024-05-06 15-22-59](https://github.com/DenisaCG/jupydrive-s3/assets/91504950/c6912105-cc0b-4a95-9234-57faebe75b90)

The drives are used as a filesystem, having support for all basic functionalities (file tree-view, editing contents, copying, renaming, deleting, downloading etc).

The extension was built using the official JavaScript [`AWS SDK`](https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/).

## Drives Compatibility

Currently, the extension offers support only for [`S3`](https://aws.amazon.com/s3/) drives.

## Configuration

### Set `CORS` Rules

As the extension works in the browser, the `S3` buckets need to have certain `CORS` (Cross-Origin-Resource-Sharing) rules set:

- `http://localhost:*` needs to be added to the `AllowedOrigins` section,
- `GET`, `PUT`, `DELETE`, `HEAD` need to be added to the `AllowedMethods` section.

More information about `CORS` [here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/cors.html) and the various ways to configure it [here](https://docs.aws.amazon.com/AmazonS3/latest/userguide/enabling-cors-examples.html).

### Set up credentials

User credentials can be set by accessing `Settings` -> `Settings Editor` -> `Credentials Provider`. Users need to offer a bucket name, region, endpoint, access key ID and secret access key, as well as optionally a path to the folder within the bucket that should act as root.

The extension uses [`jupyter-secrets-manager`](https://github.com/jupyterlab-contrib/jupyter-secrets-manager) to deal with the secret input fields.

> [!NOTE]
> The extension uses the Settings Registry to allow users to set their credentials when not in development mode. As a result, secret values may still be accessible to other extensions. Be aware of the associated security risks.

## Requirements

- JupyterLab >= 4.2.5

## Install

To install the extension, execute:

```bash
pip install jupydrive_s3
```

## Uninstall

To remove the extension, execute:

```bash
pip uninstall jupydrive_s3
```

## Contributing

### Development install

Note: You will need NodeJS to build the extension package.

The `jlpm` command is JupyterLab's pinned version of
[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use
`yarn` or `npm` in lieu of `jlpm` below.

```bash
# Clone the repo to your local environment
# Change directory to the jupydrive_s3 directory
# Install package in development mode
pip install -e "."
# Link your development version of the extension with JupyterLab
jupyter labextension develop . --overwrite
# Rebuild extension Typescript source after making changes
jlpm build
```

You can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.

```bash
# Watch the source directory in one terminal, automatically rebuilding when needed
jlpm watch
# Run JupyterLab in another terminal
jupyter lab
```

With the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).

By default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:

```bash
jupyter lab build --minimize=False
```

### Local enviroment variables

For the local development of the extension, enviroment variables are used to define the required bucket name, region and endpoint, as well as the access key id and secret key, with the additional possibility of defining a different root folder.

Rename the `.env.example` file to `.env` and update it with the values needed for your local configuration.

Note: Unless configured differently, the `S3` bucket endpoint should follow the format: `https://s3.<bucket-region>.amazonaws.com`.

### Development uninstall

```bash
pip uninstall jupydrive_s3
```

In development mode, you will also need to remove the symlink created by `jupyter labextension develop`
command. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`
folder is located. Then you can remove the symlink named `jupydrive-s3` within that folder.

### Testing the extension

#### Frontend tests

This extension is using [Jest](https://jestjs.io/) for JavaScript code testing.

To execute them, execute:

```sh
jlpm
jlpm test
```

#### Integration tests

This extension uses [Playwright](https://playwright.dev/docs/intro) for the integration tests (aka user level tests).
More precisely, the JupyterLab helper [Galata](https://github.com/jupyterlab/jupyterlab/tree/master/galata) is used to handle testing the extension in JupyterLab.

More information are provided within the [ui-tests](./ui-tests/README.md) README.

### Packaging the extension

See [RELEASE](RELEASE.md)
