# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing_extensions
import typing
from ....core.serialization import FieldMetadata
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class RecordStatus(UniversalBaseModel):
    exists: bool = pydantic.Field()
    """
    Whether or not the record exists
    """

    created_at: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="createdAt")
    ] = pydantic.Field(default=None)
    """
    The date the record was created
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
