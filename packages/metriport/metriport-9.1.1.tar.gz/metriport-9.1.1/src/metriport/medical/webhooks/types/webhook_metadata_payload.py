# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ....core.serialization import FieldMetadata
import pydantic
import typing
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class WebhookMetadataPayload(UniversalBaseModel):
    message_id: typing_extensions.Annotated[str, FieldMetadata(alias="messageId")] = (
        pydantic.Field()
    )
    """
    The ID of the message.
    """

    when: str = pydantic.Field()
    """
    The timestamp of when the webhook was triggered.
    """

    type: str = pydantic.Field()
    """
    The type of the webhook.
    """

    data: typing.Optional[typing.Optional[typing.Any]] = pydantic.Field(default=None)
    """
    Any additional data associated with the webhook.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
