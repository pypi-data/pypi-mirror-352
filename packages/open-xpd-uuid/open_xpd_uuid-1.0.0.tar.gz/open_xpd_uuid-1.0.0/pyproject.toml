[project]
name = "open-xpd-uuid"
version = "1.0.0"
license = "Apache-2.0"
description = "A library for creating and managing globally-unique open-xpd-uuid namespaces for product declarations."
authors = [{ name = "C-Change Labs", email = "support@c-change-labs.com" }]
maintainers = [{ name = "C-Change Labs", email = "open-source@c-change-labs.com" }]
repository = "https://github.com/cchangelabs/open-xpd-uuid-lib"
keywords = []
classifiers = [
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
readme = "README.md"
requires-python = ">=3.9,<3.14"
dependencies = [
]

[tool.poetry]
packages = [
    { include = "cqd" },
]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
ruff = "^0.11.11"
mypy = "^1.15.0"
pre-commit = "^4.2.0"
commitizen = ">=4.8.2,<5.0.0"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    "UP", # pyupgrade
    "ANN", # annotations
    "D", # pydocstyle
    "PT", # pytest
    "RET", # return statements
    "PIE",
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "S101", # Use of `assert` detected
    "ARG001", # Unused function argument
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.mypy]
python_version = "3.9"
strict = true

[tool.commitizen]
version_provider = "pep621"
bump_message = "chore: bump project version $current_version â†’ $new_version"
update_changelog_on_bump = true
pre_bump_hooks = []
version_files = [
    "cqd/open_xpd_uuid/__version__.py",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
