name: update-app-version

on:
    workflow_call:
        outputs:
            version_updated:
                value: ${{ jobs.update-app-version.outputs.version_updated }}

jobs:
    call-calculate-version:
        uses: ./.github/workflows/calculate-app-version.yml

    update-app-version:
        needs: [call-calculate-version]

        runs-on: ubuntu-latest

        outputs:
            version_updated: ${{ steps.check.outputs.version_updated }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set ENV CURRENT_APP_VERSION
              run: echo "CURRENT_APP_VERSION=${{ needs.call-calculate-version.outputs.current_version}}" >> $GITHUB_ENV

            - name: Set ENV NEW_APP_VERSION
              run: echo "NEW_APP_VERSION=${{ needs.call-calculate-version.outputs.calculated_version}}" >> $GITHUB_ENV

            - name: Compare versions
              id: check
              run: |
                  echo "Current version: ${{ env.CURRENT_APP_VERSION }}"
                  echo "Calculated version: ${{ env.NEW_APP_VERSION }}"
                  if [ "${{ env.CURRENT_APP_VERSION }}" = "${{ env.NEW_APP_VERSION }}" ]; then
                    echo "No version update needed."
                    echo "version_updated=false" >> $GITHUB_OUTPUT
                    exit 0
                  else
                    echo "version_updated=true" >> $GITHUB_OUTPUT
                  fi

            - name: Update app version in pyproject.toml
              run: sed -i "s#version = .*#version = '${{ env.NEW_APP_VERSION }}'#" pyproject.toml

            - name: Set up Git
              run: |
                  git config --global user.name "github-actions"
                  git config --global user.email "github-actions@github.com"

            - name: Commit changes
              id: is-version-updated
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  git add pyproject.toml
                  git commit -m "Update app version from ${{ env.CURRENT_APP_VERSION }} to ${{ env.NEW_APP_VERSION }}"
                  git push
