[tox]
requires =
  tox>=4
envlist =
  clean
  py3{9,10,11,12,13}
  report
  style
  typecheck
  spellcheck
skip_missing_interpreters = true

# Configuration that allows us to split tests across GitHub runners effectively
[gh-actions]
python =
  3.9: py39
  3.10: py310
  3.11: py311
  3.12: py312
  3.13: py313

[testenv]
runner = uv-venv-lock-runner
description = Pytest with coverage
labels = test
pass_env =
  # getpass.getuser() sources for Windows:
  LOGNAME
  USER
  LNAME
  USERNAME
  # Pass user color preferences through
  PY_COLORS
  FORCE_COLOR
  NO_COLOR
  CLICOLOR
  CLICOLOR_FORCE
  PYTHON_GIL
dependency_groups =
  test

depends =
  py3{9,10,11,12,13}: clean
  report: py3{9,10,11,12,13}

commands =
  python -m coverage run -m pytest -svx --doctest-modules \
    --durations=20 --durations-min=1.0 \
    {posargs}

[testenv:report]
skip_install = true
commands =
  coverage combine
  coverage report
  coverage xml

[testenv:clean]
deps = coverage[toml]
skip_install = true
commands = coverage erase

[testenv:doc]
skip_install = true
dependency_groups =
  doc
commands =
  sphinx-build -M html docs docs/_build -W

[testenv:style]
runner = uv-venv-runner
description = Check our style guide
labels = check
deps =
  ruff
skip_install = true
commands =
  ruff check --diff
  ruff format --diff

[testenv:style-fix]
runner = uv-venv-runner
description = Auto-apply style guide to the extent possible
labels = pre-release
deps =
  ruff
skip_install = true
commands =
  ruff check --fix
  ruff format
  ruff check --select ISC001

[testenv:spellcheck]
runner = uv-venv-runner
description = Check spelling
labels = check
deps =
  codespell[toml]
skip_install = true
commands =
  codespell . {posargs}

[testenv:typecheck]
description = Check type consistency
labels = check
dependency_groups =
  types
skip_install = true
commands =
  mypy --strict src tests
  pyright src tests

[testenv:build{,-strict}]
labels =
  check
  pre-release
deps =
  build
  twine
skip_install = true
set_env =
  # Ignore specific known warnings:
  # https://github.com/pypa/pip/issues/11684
  # https://github.com/pypa/pip/issues/12243
  strict: PYTHONWARNINGS=error,once:pkg_resources is deprecated as an API.:DeprecationWarning:pip._internal.metadata.importlib._envs,once:Unimplemented abstract methods {'locate_file'}:DeprecationWarning:pip._internal.metadata.importlib._dists
commands =
  python -m build
  python -m twine check dist/*

[testenv:publish]
depends = build
labels = release
deps =
  twine
skip_install = true
commands =
  python -m twine upload dist/*
