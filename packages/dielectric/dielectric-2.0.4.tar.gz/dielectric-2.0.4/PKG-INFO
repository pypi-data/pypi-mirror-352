Metadata-Version: 2.4
Name: dielectric
Version: 2.0.4
Summary: Dielectric Spectroscopy analysis software in Python
Author-email: "Paul J.M. van Kan" <pjm@vankanscientific.nl>
Project-URL: Homepage, https://bitbucket.org/deltares/dielectric/
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/x-rst
License-File: LICENSE
Dynamic: license-file

dielectric
==========

|PyPI| |Documentation Status| |PyPI - License|

A Python package to assist in the study of sedimentation phenomena in
colloidal suspensions. The code is being developed by `Paul J.M. van
Kan <http://vankanscientific.nl>`__ for the MUDNET group at Delft
Technical University and DELTARES, The Netherlands. The **dielectric** package
can be used under the conditions of the GPLv3 license.

Features
--------

* Basic classes for binary electrolytes.
* Basic classes for colloidal systems with particles.
* Basic functions for DLVO theory.
* Basic functions for calculation of ion vibration potential (IVP).
* Basic functions for analysis of Dielectric Spectroscopy measurements (HP4194A)


Installation
------------

To use the package `dielectric`, install it in a Python environment:

.. code-block:: console

    (env) pip install dielectric

or

.. code-block:: console

    (env) conda install dielectric

This should
automatically install the dependency packages ``matplotlib`` , ``scipy``
and ``pandas``, if they haven't been installed already. If you are
installing by hand, ensure that these packages are installed as well.

Example use
-----------

.. code:: python

   import numpy as np

   from dielectric.constants import *
   from dielectric.electrolytes import Electrolyte
   from dielectric.particles import Particle
   from dielectric.file_utils import load_config

   import matplotlib
   import matplotlib.pyplot as plt
   from pathlib import Path

   matplotlib.use("QtAgg")
   DATADIR = Path(__file__).parent

   el = Electrolyte.from_yaml(str(DATADIR / "cegm.yaml"))
   el.calc_kappa()

   param = load_config(str(DATADIR / "cegm.yaml"))
   part = Particle.from_dict(param["particles"][0])

   zeta_zero = BOLTZ_T / (el.z_plus * E_CHARGE)
   print(f"zeta_zero: {1000 * zeta_zero} mV")
   psi_zero = 0.5 * zeta_zero

dielectric pages
----------------

-  `PyPi <https://pypi.org/project/dielectric/>`__: dielectric Python package
-  `BitBucket <https://bitbucket.org/deltares/dielectric/>`__: dielectric source code
-  `ReadTheDocs <https://dielectric.readthedocs.io/>`__: dielectric documentation

Author and license
------------------

-  Author: Paul J.M. van Kan
-  Contact: pjm@vankanscientific.nl
-  License: `GPLv3 <https://www.gnu.org/licenses/gpl.html>`__

References
----------

-  ...

.. |PyPi| image:: https://img.shields.io/pypi/v/dielectric
   :alt: PyPI

.. |PyPI - Downloads| image:: https://img.shields.io/pypi/dm/dielectric
   :alt: PyPI - Downloads

.. |PyPi Status| image:: https://img.shields.io/pypi/status/dielectric
   :alt: PyPI - Status

.. |Documentation Status| image:: https://readthedocs.org/projects/dielectric/badge/?version=latest
   :target: https://edumud.readthedocs.io/en/latest/?badge=latest

.. |PyPI - License| image:: https://img.shields.io/pypi/l/dielectric
   :alt: PyPI - License
