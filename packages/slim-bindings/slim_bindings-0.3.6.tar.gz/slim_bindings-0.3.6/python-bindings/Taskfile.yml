# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

---
version: '3'

silent: true
set: [pipefail]
shopt: [globstar]

verbose: false

includes:
  rust:
    taskfile: ../../tasks/rust.yaml
    internal: true

tasks:
  default:
    cmds:
      - task -l

  python-bindings:build:
    desc: "Build the Python bindings"
    cmds:
      - task: rust:toolchain:run-command
        vars:
          COMMAND: |
            uv run maturin develop --uv

  python-bindings:build:release:
    desc: "Release the Python bindings"
    cmds:
      - task: rust:toolchain:run-command
        vars:
          COMMAND: |
            uv run maturin develop --uv --release

  python-bindings:lint:
    desc: "Lint the Python bindings"
    cmds:
      - uv run ruff check
      - uv run ruff format --check
      - uv run mypy slim_bindings

  python-bindings:test:
    desc: "Test the Python bindings"
    deps:
      - python-bindings:build
    cmds:
      - uv run pytest -s {{.TESTS}}
    vars:
      TARGET: '{{.TESTS | default ""}}'

  python-bindings:packaging:
    desc: "Generate the Python bindings for python versions 3.9, 3.10, 3.11, 3.12 and 3.13"
    vars:
      PROFILE: '{{.PROFILE | default "debug"}}'
      RELEASE:
        sh: '[[ {{.PROFILE}} == "release" ]] && echo "--release" || echo ""'
      TARGET: '{{.TARGET | default ""}}'
    cmds:
      - for:
          matrix:
            PYTHON: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        cmd: |
          uv python install {{.ITEM.PYTHON}}
          uv python pin {{.ITEM.PYTHON}}
      - task: rust:toolchain:run-command
        vars:
          COMMAND: |
            rustup target add {{.TARGET}}

            UV_ARGS=(
              --no-default-groups
              --group building
            )

            uv sync ${UV_ARGS[@]}

            uv run ${UV_ARGS[@]} maturin develop --uv {{.RELEASE}}

            # This file if a leftover from the previous build, delete it otherwise
            # maturin will try to add it to the wheel, and it will fail
            rm -f slim_bindings/*.pyd

            PYTHONS=(3.9 3.10 3.11 3.12 3.13)
            uv run                            \
              ${UV_ARGS[@]}                   \
              maturin build {{.RELEASE}}      \
              --out dist                      \
              --target {{.TARGET}}            \
              --frozen                        \
              -i                              \
              ${PYTHONS[@]}

  python-bindings:example:server:
    desc: "Run the server example"
    env:
      SLIM_INSTANCE_ID: server
    cmds:
      - uv run python ./examples/slim.py {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:ff:alice1:
    desc: "Run the Alice example"
    env:
      SLIM_INSTANCE_ID: alice1
    cmds:
      - |
        uv run python ./examples/fire-and-forget.py \
          -l cisco/default/alice          \
          -g http://localhost:12345       \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:ff:alice2:
    desc: "Run the Alice example"
    env:
      SLIM_INSTANCE_ID: alice2
    cmds:
      - |
        uv run python ./examples/fire-and-forget.py \
          -l cisco/default/alice          \
          -g http://localhost:12345       \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:ff:bob:
    desc: "Run the Bob example"
    env:
      SLIM_INSTANCE_ID: bob
    cmds:
      - |
        uv run python ./examples/fire-and-forget.py   \
          -l cisco/default/bob              \
          -r cisco/default/alice            \
          -g http://localhost:12345         \
          -m "hello"         \
          -i 1000                           \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:rr:requester:
    desc: "Run the requester example"
    env:
      SLIM_INSTANCE_ID: requester
    cmds:
      - |
        uv run python ./examples/request-reply.py   \
          -l cisco/default/requester                \
          -r cisco/default/responder                \
          -g http://localhost:12345                 \
          -m "hello"                                \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:rr:responder:
    desc: "Run the responder example"
    env:
      SLIM_INSTANCE_ID: responder
    cmds:
      - |
        uv run python ./examples/request-reply.py   \
          -l cisco/default/responder                \
          -g http://localhost:12345                 \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:stream:producer:
    desc: "Run the producer stream example"
    env:
      SLIM_INSTANCE_ID: producer
    cmds:
      - |
        uv run python ./examples/streaming.py     \
          -l cisco/default/producer               \
          -r cisco/default/stream                 \
          -g http://localhost:12345               \
          -p                                      \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'

  python-bindings:example:stream:consumer:
    desc: "Run the consumer stream example"
    env:
      SLIM_INSTANCE_ID: consumer-{{.CONSUMER_ID}}
    cmds:
      - |
        uv run python ./examples/streaming.py         \
          -l cisco/default/consumer-{{.CONSUMER_ID}}  \
          -r cisco/default/stream                     \
          -g http://localhost:12345                   \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'
      CONSUMER_ID:
        sh: "head -c1 < /dev/urandom | base64 | tr -d '+=/'"

  python-bindings:example:pubsub:
    desc: "Run the pubsub example"
    env:
      SLIM_INSTANCE_ID: participant-{{.CONSUMER_ID}}
    cmds:
      - |
        uv run python ./examples/pubsub.py         \
          -l cisco/default/participant-{{.CONSUMER_ID}}  \
          -r cisco/default/stream                     \
          -g http://localhost:12345                   \
          {{.EXTRA_ARGS}}
    vars:
      EXTRA_ARGS: '{{.EXTRA_ARGS | default ""}}'
      CONSUMER_ID:
        sh: "head -c1 < /dev/urandom | base64 | tr -d '+=/'"

  python-bindings:generate-stub:
    desc: "Generate stub file for the Python bindings"
    cmds:
      - cargo run --bin stub_gen
