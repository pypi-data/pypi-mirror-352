name: Auto-publish to PyPI on Push

on:
  push:
    branches: [ main ]
    paths:
      - 'bedrock_security_checker.py'
      - 'setup.py'
      - 'pyproject.toml'
      - 'requirements.txt'

jobs:
  check-and-publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for version checking
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine packaging
    
    - name: Check if version changed
      id: version_check
      run: |
        # Get current version from setup.py
        CURRENT_VERSION=$(python -c "import re; content=open('setup.py').read(); print(re.search(r'version=\"([^\"]+)\"', content).group(1))")
        echo "Current version: $CURRENT_VERSION"
        
        # Check if this version already exists on PyPI
        pip index versions bedrock-security-checker 2>/dev/null | grep -q "$CURRENT_VERSION" && VERSION_EXISTS=true || VERSION_EXISTS=false
        
        echo "version_exists=$VERSION_EXISTS" >> $GITHUB_OUTPUT
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
    
    - name: Build package
      if: steps.version_check.outputs.version_exists == 'false'
      run: python -m build
    
    - name: Publish to PyPI
      if: steps.version_check.outputs.version_exists == 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        
    - name: Create Git tag
      if: steps.version_check.outputs.version_exists == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag "v${{ steps.version_check.outputs.current_version }}"
        git push origin "v${{ steps.version_check.outputs.current_version }}"