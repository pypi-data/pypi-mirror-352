"""
Publish Markdown files to Confluence wiki.

Copyright 2022-2025, Levente Hunyadi

:see: https://github.com/hunyadi/md2conf
"""

import pathlib

import pymdownx.emoji1_db as emoji_db

EMOJI_PAGE_ID = "86918529216"


def generate_source(path: pathlib.Path) -> None:
    "Generates a source Markdown document for testing emojis."

    emojis = emoji_db.emoji

    with open(path, "w") as f:
        print(f"<!-- confluence-page-id: {EMOJI_PAGE_ID} -->", file=f)
        print("<!-- This file has been generated by a script. -->", file=f)
        print(file=f)
        print("## Emoji", file=f)
        print(file=f)
        print("| Icon | Emoji code |", file=f)
        print("| ---- | ---------- |", file=f)
        for key in emojis.keys():
            key = key.strip(":")
            print(f"| :{key}: | `:{key}:` |", file=f)


def generate_target(path: pathlib.Path) -> None:
    "Generates a target Confluence Storage Format (XML) document for testing emojis."

    emojis = emoji_db.emoji

    with open(path, "w") as f:
        print('<ac:structured-macro ac:name="info" ac:schema-version="1">', file=f)
        print("<ac:rich-text-body>", file=f)
        print("<p>This page has been generated with a tool.</p>", file=f)
        print("</ac:rich-text-body>", file=f)
        print("</ac:structured-macro>", file=f)
        print("<h2>Emoji</h2>", file=f)
        print("<table>", file=f)
        print("<thead><tr><th>Icon</th><th>Emoji code</th></tr></thead>", file=f)
        print("<tbody>", file=f)
        for key, data in emojis.items():
            key = key.strip(":")
            unicode = "".join(f"&#x{item};" for item in data["unicode"].split("-"))

            print(
                f'<tr><td><ac:emoticon ac:name="blue-star" ac:emoji-shortname=":{key}:" ac:emoji-fallback="{unicode}"/></td><td><code>:{key}:</code></td></tr>',
                file=f,
            )
        print("</tbody>", file=f)
        print("</table>", file=f)
