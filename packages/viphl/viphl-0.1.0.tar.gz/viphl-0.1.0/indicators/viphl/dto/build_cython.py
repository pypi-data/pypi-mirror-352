#!/usr/bin/env python
"""
Build script for compiling VipHL Cython extensions.
This script will compile the .pyx files to .so files and optionally remove the source .pyx files.
"""

import os
import sys
import subprocess
import shutil
import glob

def main():
    print("Building Cython extensions...")
    
    # Run the setup.py script to build the extensions
    try:
        subprocess.check_call([sys.executable, 'setup.py', 'build_ext', '--inplace'])
        print("Cython extensions built successfully!")
        
        # Optionally remove source .pyx files if specified
        if len(sys.argv) > 1 and sys.argv[1] == '--remove-source':
            print("Removing source .pyx files...")
            
            # List of .pyx files to remove
            pyx_files = [
                'settings.pyx', 
                'bypoint.pyx', 
                'recovery_window.pyx', 
                'hl.pyx'
            ]
            
            for pyx_file in pyx_files:
                if os.path.exists(pyx_file):
                    os.remove(pyx_file)
                    print(f"Removed {pyx_file}")
            
            # Don't remove setup.py and build_cython.py as they are needed for rebuilding
            print("Source files removed!")
        
        return 0
    
    except subprocess.CalledProcessError:
        print("Build failed!")
        return 1

def clean_source_files(remove_pyx=False):
    """Clean up build artifacts and optionally remove source .pyx files."""
    print("Cleaning up build artifacts...")
    
    # Remove build directory
    if os.path.exists("build"):
        shutil.rmtree("build")
        print("Removed build directory")
    
    # Remove .c files generated by Cython
    for c_file in glob.glob("*.c"):
        os.remove(c_file)
        print(f"Removed {c_file}")
    
    # Remove .cpp files generated by Cython
    for cpp_file in glob.glob("*.cpp"):
        os.remove(cpp_file)
        print(f"Removed {cpp_file}")
    
    if remove_pyx:
        # Remove .pyx source files to protect source code
        for pyx_file in glob.glob("*.pyx"):
            os.remove(pyx_file)
            print(f"Removed {pyx_file}")
        
        # Also remove setup.py as it's no longer needed
        if os.path.exists("setup.py"):
            os.remove("setup.py")
            print("Removed setup.py")

if __name__ == "__main__":
    sys.exit(main()) 