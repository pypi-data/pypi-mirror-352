from typing import Any, List

class Mat3Error(Exception): ...
class Mat3NotSquare(Exception): ...

class Mat3:
    m: Any
    def __init__(self) -> None: ...
    def get_matrix(self) -> List[float]: ...
    @classmethod
    def identity(cls) -> Mat3: ...
    @classmethod
    def zero(cls) -> Mat3: ...
    @classmethod
    def from_list(cls, l) -> Mat3: ...
    def transpose(self) -> None: ...
    def get_transpose(self) -> Mat3: ...
    @classmethod
    def scale(cls, x: float, y: float, z: float) -> Mat3: ...
    @classmethod
    def rotate_x(cls, angle: float) -> Mat3: ...
    @classmethod
    def rotate_y(cls, angle: float) -> Mat3: ...
    @classmethod
    def rotate_z(cls, angle: float) -> Mat3: ...
    def __getitem__(self, idx) -> float: ...
    def __setitem__(self, idx, item) -> None: ...
    def __mul__(self, rhs: float) -> Mat3: ...
    def __matmul__(self, rhs: Mat3) -> Mat3: ...
    def __imul__(self, rhs: float) -> Mat3: ...
    def __imatmul__(self, rhs: Mat3) -> Mat3: ...
    def __add__(self, rhs: Mat3) -> Mat3: ...
    def __iadd__(self, rhs: Mat3) -> Mat3: ...
    def determinant(self) -> float: ...
    def inverse(self) -> Mat3: ...
