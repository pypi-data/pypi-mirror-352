# This is the configuration file for the LLM service.

# The LLM service provides multiple integrations with a variety of large language models.
# It will subscribe to LLM service request events and based on the exact
# topic, will call the appropriate LLM service to generate a response.

# The general topic format is:
# - <namespace>/solace-agent-mesh/v1/llm-service/<verb>/<model-id-or-group>/<stimulus-uuid>/<session-uuid>/<originator-id>
#
# The specific subscriptions are:
# - <namespace>/solace-agent-mesh/v1/llm-service/request/planning/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/reasoning-expensive/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/reasoning-normal/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/general-good/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/general-fast/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/writing/>
# - <namespace>/solace-agent-mesh/v1/llm-service/request/coding/>

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: solace_agent_mesh.log

shared_config:
  - broker_config: &broker_connection
      broker_connection_share: ${SOLACE_BROKER_URL}
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}
      payload_encoding: utf-8
      payload_format: json
      temporary_queue: ${USE_TEMPORARY_QUEUES, false}

  - llm_config: &llm_config
      llm_mode: none
      set_response_uuid_in_user_properties: true
      stream_to_next_component: true

  - llm_auth: &llm_auth
      api_key: ${LLM_SERVICE_API_KEY}
      base_url: ${LLM_SERVICE_ENDPOINT}

  - llm_input_transform_and_select: &llm_input_transforms_and_select
      input_selection:
        source_expression: previous

flows:
  # Handling planning requests
  - name: llm-service-planning
    components:
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/planning
          broker_subscriptions:
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/planning/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/reasoning-expensive/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/reasoning-normal/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-good/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-fast/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/writing/>
              qos: 1
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/coding/>
              qos: 1

      - component_name: file_resolver
        component_base_path: .
        component_module: src.tools.components.file_resolver_component
        component_config:
          force_resolve: true
        input_selection:
          source_expression: input.payload

      - component_name: llm_service_planning
        num_instances: ${LLM_SERVICE_PLANNING_MODEL_NUM_INSTANCES, 1}
        component_module: litellm_chat_model
        component_config:
          <<: *llm_config
          load_balancer:
            - model_name: ${LLM_SERVICE_PLANNING_MODEL_NAME}
              litellm_params:
                <<: *llm_auth
                model: ${LLM_SERVICE_PLANNING_MODEL_NAME}
                temperature: 0.02
        <<: *llm_input_transforms_and_select

      - component_name: broker_output
        component_module: broker_output
        component_config:
          <<: *broker_connection
          copy_user_properties: true
        input_transforms:
          - type: copy
            source_expression: previous
            dest_expression: user_data.output:payload
          - type: copy
            source_expression: input.user_properties:__solace_ai_connector_broker_request_response_topic__
            dest_expression: user_data.output:topic
        input_selection:
          source_expression: user_data.output

  # Handling reasoning requests
  # - name: llm-service-reasoning-expensive
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/reasoning-expensive
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/reasoning-expensive/>
  #             qos: 1

  #     - component_name: llm_service_reasoning_expensive
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_REASONING_EXPENSIVE_MODEL_NAME}
  #         temperature: 0.01

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection

  # - name: llm-service-reasoning-normal
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/reasoning-normal
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/reasoning-normal/>
  #             qos: 1

  #     - component_name: llm_service_reasoning_normal
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_REASONING_NORMAL_MODEL_NAME}
  #         temperature: 0.01

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection

  # # Handling general-good requests
  # - name: llm-service-general-good
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/general-good
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-good/>
  #             qos: 1

  #     - component_name: llm_service_general_good
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_GENERAL_GOOD_MODEL_NAME}
  #         temperature: 0.01

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection

  # # Handling general-fast requests
  # - name: llm-service-general-fast
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       llm_input_transform_and_select: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/general-fast
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-fast/>
  #             qos: 1

  #     - component_name: llm_service_general_fast
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_GENERAL_FAST_MODEL_NAME}
  #         temperature: 0.01

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection

  # # Handling writing requests
  # - name: llm-service-writing
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/writing
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/writing/>
  #             qos: 1

  #     - component_name: llm_service_writing
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_WRITING_MODEL_NAME}
  #         temperature: 0.7

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection

  # # Handling coding requests
  # - name: llm-service-coding
  #   components:
  #     - component_name: broker_input
  #       component_module: broker_input
  #       component_config:
  #         <<: *broker_connection
  #         broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/coding
  #         broker_subscriptions:
  #           - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/coding/>
  #             qos: 1

  #     - component_name: llm_service_coding
  #       num_instances: 5
  #       component_module: openai_chat_model
  #       <<: *llm_input_transforms_and_select
  #       component_config:
  #         <<: *llm_config
  #         model: ${LLM_SERVICE_CODING_MODEL_NAME}
  #         temperature: 0.01

  #     - component_name: broker_output
  #       component_module: broker_output
  #       component_config:
  #         <<: *broker_connection
