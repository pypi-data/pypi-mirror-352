# Configuration for the Slack Monitor Agent
#
# This sets up:
# 1. Agent registration flow
# 2. Action request processing flow
# 3. Event monitoring flow for tracking all solace agent mesh events
#
# Required environment variables:
# - SOLACE_BROKER_URL
# - SOLACE_BROKER_USERNAME
# - SOLACE_BROKER_PASSWORD
# - SOLACE_BROKER_VPN
# - SOLACE_AGENT_MESH_NAMESPACE
# - MONITOR_SLACK_STATUS_CHANNEL

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: solace_ai_connector.log

shared_config:
  - broker_config: &broker_connection
      broker_connection_share: ${SOLACE_BROKER_URL}
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}
      temporary_queue: ${USE_TEMPORARY_QUEUES, false}

flows:

  # Feedback monitoring flow
  - name: feedback_monitor
    put_errors_in_error_queue: false
    components:
      # Input from broker - subscribe to all solace agent mesh events
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}user_feedback_monitor
          broker_subscriptions:
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/feedback
              qos: 1

      # Process events
      - component_name: user_feedback_processor
        component_base_path: .
        component_module: src.monitors.feedback.user_feedback_monitor
        component_config: {}
        component_input:
          source_expression: input.payload


