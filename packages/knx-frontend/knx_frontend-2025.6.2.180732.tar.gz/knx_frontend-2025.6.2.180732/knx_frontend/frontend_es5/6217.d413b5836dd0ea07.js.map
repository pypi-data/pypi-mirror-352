{"version":3,"file":"6217.d413b5836dd0ea07.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_datetime-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-radio\";\nimport type { HaRadio } from \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputDateTime } from \"../../../../data/input_datetime\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_datetime-form\")\nclass HaInputDateTimeForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputDateTime;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _mode!: \"date\" | \"time\" | \"datetime\";\n\n  set item(item: InputDateTime) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._mode =\n        item.has_time && item.has_date\n          ? \"datetime\"\n          : item.has_time\n            ? \"time\"\n            : \"date\";\n      this._item.has_date =\n        !item.has_date && !item.has_time ? true : item.has_date;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._mode = \"date\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <br />\n        ${this.hass.localize(\"ui.dialogs.helper_settings.input_datetime.mode\")}:\n        <br />\n\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.date\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"date\"\n            .checked=${this._mode === \"date\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.time\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"time\"\n            .checked=${this._mode === \"time\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.datetime\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"datetime\"\n            .checked=${this._mode === \"datetime\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    const mode = (ev.target as HaRadio).value;\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._item,\n        has_time: [\"time\", \"datetime\"].includes(mode),\n        has_date: [\"date\", \"datetime\"].includes(mode),\n      },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_datetime-form\": HaInputDateTimeForm;\n  }\n}\n"],"names":["HaInputDateTimeForm","LitElement","item","this","_item","_name","name","_icon","icon","_mode","has_time","has_date","focus","updateComplete","then","_this$shadowRoot","shadowRoot","querySelector","render","hass","html","_t","_","_valueChanged","localize","_modeChanged","nothing","ev","mode","target","value","fireEvent","Object","assign","includes","_ev$detail","new","stopPropagation","configValue","detail","newValue","styles","haStyle","css","_t2","args","attribute","type","Boolean"],"mappings":"sQAaA,MAAAA,UAAAC,EAAAA,GAcE,QAAAC,CAAAA,GACEC,KAAAC,MAAAF,EACAA,GACEC,KAAAE,MAAAH,EAAAI,MAAA,GACAH,KAAAI,MAAAL,EAAAM,MAAA,GACAL,KAAAM,MAAAP,EAAAQ,UAAAR,EAAAS,SAAA,WAAAT,EAAAQ,SAAA,cAMAP,KAAAC,MAAAO,UAAAT,EAAAS,WAAAT,EAAAQ,UAAAR,EAAAS,WAGAR,KAAAE,MAAA,GACAF,KAAAI,MAAA,GACAJ,KAAAM,MAAA,OAEJ,CAEOG,KAAAA,GACLT,KAAAU,eAAAC,MAAA,SAAAC,EAAA,eAAAA,EAAAZ,KAAAa,kBAAA,IAAAD,GAAA,QAAAA,EAAAA,EAAAE,cAAA,mCAAAF,OAAA,EAAAA,EAAAH,OAAA,GAKF,CAEUM,MAAAA,GACR,OAAKf,KAALgB,MAIAC,EAAAA,EAAAA,IAAAC,IAAAA,EAAAC,CAAA;;;mBAAA;yBAAA;mBAAA;mBAAA;;;+BAAA;;;;kBAAA;mBAAA;yBAAA;2BAAA;mBAAA;;;UAAA;;;;mBAAA;;;;;uBAAA;sBAAA;;;;mBAAA;;;;;uBAAA;sBAAA;;;;mBAAA;;;;;uBAAA;sBAAA;;;;OAGa,KAAAjB,MACM,OACN,KAAAkB,cACA,KAAAJ,KAAAK,SAAA,2CAKY,KAAAL,KAAAK,SAAA,iDAMb,KAAAL,KACC,KAAAZ,MACM,OACE,KAAAgB,cACR,KAAAJ,KAAAK,SAAA,2CAKT,KAAAL,KAAAK,SAAA,kDAIS,KAAAL,KAAAK,SAAA,kDAOI,cAAAf,MACD,KAAAgB,aAIH,KAAAN,KAAAK,SAAA,kDAOI,cAAAf,MACD,KAAAgB,aAIH,KAAAN,KAAAK,SAAA,sDAOI,kBAAAf,MACD,KAAAgB,cAjEdC,EAAAA,EAsEJ,CAEQD,YAAAA,CAAAE,GACN,MAAAC,EAAAD,EAAAE,OAAAC,OACAC,EAAAA,EAAAA,GAAA,sBACED,MAAAE,OAAAC,OAAAD,OAAAC,OAAA,GACE,KAAA7B,OAAA,IACAM,SAAA,CAAW,OAAQ,YAAWwB,SAAAN,GAC9BjB,SAAA,CAAW,OAAQ,YAAWuB,SAAAN,MAGpC,CAEQL,aAAAA,CAAAI,GAAA,IAAAQ,EACN,IAAKhC,KAALiC,MAAA,KAAAhC,MACE,OAEFuB,EAAAU,kBACA,MAAAC,EAAAX,EAAAE,OAAAS,YACAR,GAAA,QAAAK,EAAAR,EAAAY,cAAA,IAAAJ,OAAA,EAAAA,EAAAL,QAAAH,EAAAE,OAAAC,MACA,GAAI3B,KAAK,IAATmC,OAAAR,EACE,OAEF,MAAAU,EAAAR,OAAAC,OAAA,GAAmB,KAAA7B,OACnB0B,EAGEU,EAAAF,GAAAR,SAFAU,EAAAF,IAIFP,EAAAA,EAAAA,GAAA,sBACED,MAAAU,GAEJ,CAEA,iBAAAC,GACE,MAAO,CACLC,EAAAA,IACAC,EAAAA,EAAAA,IAAAC,IAAAA,EAAAtB,CAAA;;;;;;;;;;;UAaJ,C,kBApKF,SAAAuB,GAAA,KAAAT,KAAA,C,8BAEcU,WAAA,K,uDAEAC,KAAAC,W"}