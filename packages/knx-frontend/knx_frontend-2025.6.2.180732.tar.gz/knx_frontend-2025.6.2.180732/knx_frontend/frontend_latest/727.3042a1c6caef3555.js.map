{"version":3,"file":"727.3042a1c6caef3555.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_boolean-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputBoolean } from \"../../../../data/input_boolean\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_boolean-form\")\nclass HaInputBooleanForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputBoolean;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  set item(item: InputBoolean) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_boolean-form\": HaInputBooleanForm;\n  }\n}\n"],"names":["HaInputBooleanForm","LitElement","item","this","_item","_name","name","_icon","icon","focus","updateComplete","then","shadowRoot","querySelector","render","hass","html","_valueChanged","localize","nothing","ev","new","stopPropagation","configValue","target","value","detail","newValue","fireEvent","styles","haStyle","css","args","attribute","type","Boolean"],"mappings":"yKAUA,MAAAA,UAAAC,EAAAA,GAYE,QAAAC,CAAAA,GACEC,KAAAC,MAAAF,EACAA,GACEC,KAAAE,MAAAH,EAAAI,MAAA,GACAH,KAAAI,MAAAL,EAAAM,MAAA,KAEAL,KAAAE,MAAA,GACAF,KAAAI,MAAA,GAEJ,CAEOE,KAAAA,GACLN,KAAAO,eAAAC,MAAA,IAAAR,KAAAS,YAAAC,cAAA,yBAAAJ,SAKF,CAEUK,MAAAA,GACR,OAAKX,KAALY,KAIAC,EAAAA,EAAA;;;mBAGa,KAAAX;yBACM;mBACN,KAAAY;mBACA,KAAAF,KAAAG,SAAA;;;+BAKY,KAAAH,KAAAG,SAAA;;;;kBAMb,KAAAH;mBACC,KAAAR;yBACM;2BACE,KAAAU;mBACR,KAAAF,KAAAG,SAAA;;;MAxBXC,EAAAA,EA8BJ,CAEQF,aAAAA,CAAAG,GACN,IAAKjB,KAALkB,MAAA,KAAAjB,MACE,OAEFgB,EAAAE,kBACA,MAAAC,EAAAH,EAAAI,OAAAD,YACAE,EAAAL,EAAAM,QAAAD,OAAAL,EAAAI,OAAAC,MACA,GAAItB,KAAK,IAAToB,OAAAE,EACE,OAEF,MAAAE,EAAA,IAAsBxB,KAAHC,OACnBqB,EAGEE,EAAAJ,GAAAE,SAFAE,EAAAJ,IAIFK,EAAAA,EAAAA,GAAA,sBACEH,MAAAE,GAEJ,CAEA,iBAAAE,GACE,MAAO,CACLC,EAAAA,GACAC,EAAAA,EAAA;;;;;;;;;;;QAaJ,C,kBAtGF,SAAAC,GAAA,KAAAX,KAAA,C,8BAEcY,WAAA,K,uDAEAC,KAAAC,W"}