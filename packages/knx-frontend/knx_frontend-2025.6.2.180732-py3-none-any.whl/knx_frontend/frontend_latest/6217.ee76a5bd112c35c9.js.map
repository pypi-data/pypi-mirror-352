{"version":3,"file":"6217.ee76a5bd112c35c9.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-input_datetime-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-formfield\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-radio\";\nimport type { HaRadio } from \"../../../../components/ha-radio\";\nimport \"../../../../components/ha-textfield\";\nimport type { InputDateTime } from \"../../../../data/input_datetime\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-input_datetime-form\")\nclass HaInputDateTimeForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: InputDateTime;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _mode!: \"date\" | \"time\" | \"datetime\";\n\n  set item(item: InputDateTime) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._mode =\n        item.has_time && item.has_date\n          ? \"datetime\"\n          : item.has_time\n            ? \"time\"\n            : \"date\";\n      this._item.has_date =\n        !item.has_date && !item.has_time ? true : item.has_date;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._mode = \"date\";\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <br />\n        ${this.hass.localize(\"ui.dialogs.helper_settings.input_datetime.mode\")}:\n        <br />\n\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.date\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"date\"\n            .checked=${this._mode === \"date\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.time\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"time\"\n            .checked=${this._mode === \"time\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n        <ha-formfield\n          .label=${this.hass.localize(\n            \"ui.dialogs.helper_settings.input_datetime.datetime\"\n          )}\n        >\n          <ha-radio\n            name=\"mode\"\n            value=\"datetime\"\n            .checked=${this._mode === \"datetime\"}\n            @change=${this._modeChanged}\n          ></ha-radio>\n        </ha-formfield>\n      </div>\n    `;\n  }\n\n  private _modeChanged(ev: CustomEvent) {\n    const mode = (ev.target as HaRadio).value;\n    fireEvent(this, \"value-changed\", {\n      value: {\n        ...this._item,\n        has_time: [\"time\", \"datetime\"].includes(mode),\n        has_date: [\"date\", \"datetime\"].includes(mode),\n      },\n    });\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const configValue = (ev.target as any).configValue;\n    const value = ev.detail?.value || (ev.target as any).value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (!value) {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          padding: 16px 0;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-input_datetime-form\": HaInputDateTimeForm;\n  }\n}\n"],"names":["HaInputDateTimeForm","LitElement","item","this","_item","_name","name","_icon","icon","_mode","has_time","has_date","focus","updateComplete","then","shadowRoot","querySelector","render","hass","html","_valueChanged","localize","_modeChanged","nothing","ev","mode","target","value","fireEvent","includes","new","stopPropagation","configValue","detail","newValue","styles","haStyle","css","args","attribute","type","Boolean"],"mappings":"4LAaA,MAAAA,UAAAC,EAAAA,GAcE,QAAAC,CAAAA,GACEC,KAAAC,MAAAF,EACAA,GACEC,KAAAE,MAAAH,EAAAI,MAAA,GACAH,KAAAI,MAAAL,EAAAM,MAAA,GACAL,KAAAM,MAAAP,EAAAQ,UAAAR,EAAAS,SAAA,WAAAT,EAAAQ,SAAA,cAMAP,KAAAC,MAAAO,UAAAT,EAAAS,WAAAT,EAAAQ,UAAAR,EAAAS,WAGAR,KAAAE,MAAA,GACAF,KAAAI,MAAA,GACAJ,KAAAM,MAAA,OAEJ,CAEOG,KAAAA,GACLT,KAAAU,eAAAC,MAAA,IAAAX,KAAAY,YAAAC,cAAA,yBAAAJ,SAKF,CAEUK,MAAAA,GACR,OAAKd,KAALe,KAIAC,EAAAA,EAAA;;;mBAGa,KAAAd;yBACM;mBACN,KAAAe;mBACA,KAAAF,KAAAG,SAAA;;;+BAKY,KAAAH,KAAAG,SAAA;;;;kBAMb,KAAAH;mBACC,KAAAX;yBACM;2BACE,KAAAa;mBACR,KAAAF,KAAAG,SAAA;;;UAKT,KAAAH,KAAAG,SAAA;;;;mBAIS,KAAAH,KAAAG,SAAA;;;;;uBAOI,cAAAZ;sBACD,KAAAa;;;;mBAIH,KAAAJ,KAAAG,SAAA;;;;;uBAOI,cAAAZ;sBACD,KAAAa;;;;mBAIH,KAAAJ,KAAAG,SAAA;;;;;uBAOI,kBAAAZ;sBACD,KAAAa;;;;MAjEdC,EAAAA,EAsEJ,CAEQD,YAAAA,CAAAE,GACN,MAAAC,EAAAD,EAAAE,OAAAC,OACAC,EAAAA,EAAAA,GAAA,sBACED,MAAA,IACKxB,KAAHC,MACAM,SAAA,CAAW,OAAQ,YAAWmB,SAAAJ,GAC9Bd,SAAA,CAAW,OAAQ,YAAWkB,SAAAJ,KAGpC,CAEQL,aAAAA,CAAAI,GACN,IAAKrB,KAAL2B,MAAA,KAAA1B,MACE,OAEFoB,EAAAO,kBACA,MAAAC,EAAAR,EAAAE,OAAAM,YACAL,EAAAH,EAAAS,QAAAN,OAAAH,EAAAE,OAAAC,MACA,GAAIxB,KAAK,IAAT6B,OAAAL,EACE,OAEF,MAAAO,EAAA,IAAsB/B,KAAHC,OACnBuB,EAGEO,EAAAF,GAAAL,SAFAO,EAAAF,IAIFJ,EAAAA,EAAAA,GAAA,sBACED,MAAAO,GAEJ,CAEA,iBAAAC,GACE,MAAO,CACLC,EAAAA,GACAC,EAAAA,EAAA;;;;;;;;;;;QAaJ,C,kBApKF,SAAAC,GAAA,KAAAR,KAAA,C,8BAEcS,WAAA,K,uDAEAC,KAAAC,W"}