{"version":3,"file":"2296.3f67f2b73a864f26.js","sources":["webpack://knx-frontend/./homeassistant-frontend/src/panels/config/helpers/forms/ha-counter-form.ts"],"sourcesContent":["import type { CSSResultGroup } from \"lit\";\nimport { css, html, LitElement, nothing } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport \"../../../../components/ha-expansion-panel\";\nimport \"../../../../components/ha-icon-picker\";\nimport \"../../../../components/ha-switch\";\nimport type { HaSwitch } from \"../../../../components/ha-switch\";\nimport \"../../../../components/ha-textfield\";\nimport type { Counter } from \"../../../../data/counter\";\nimport { haStyle } from \"../../../../resources/styles\";\nimport type { HomeAssistant } from \"../../../../types\";\n\n@customElement(\"ha-counter-form\")\nclass HaCounterForm extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ type: Boolean }) public new = false;\n\n  private _item?: Partial<Counter>;\n\n  @state() private _name!: string;\n\n  @state() private _icon!: string;\n\n  @state() private _maximum?: number;\n\n  @state() private _minimum?: number;\n\n  @state() private _restore?: boolean;\n\n  @state() private _initial?: number;\n\n  @state() private _step?: number;\n\n  set item(item: Counter) {\n    this._item = item;\n    if (item) {\n      this._name = item.name || \"\";\n      this._icon = item.icon || \"\";\n      this._maximum = item.maximum ?? undefined;\n      this._minimum = item.minimum ?? undefined;\n      this._restore = item.restore ?? true;\n      this._step = item.step ?? 1;\n      this._initial = item.initial ?? 0;\n    } else {\n      this._name = \"\";\n      this._icon = \"\";\n      this._maximum = undefined;\n      this._minimum = undefined;\n      this._restore = true;\n      this._step = 1;\n      this._initial = 0;\n    }\n  }\n\n  public focus() {\n    this.updateComplete.then(() =>\n      (\n        this.shadowRoot?.querySelector(\"[dialogInitialFocus]\") as HTMLElement\n      )?.focus()\n    );\n  }\n\n  protected render() {\n    if (!this.hass) {\n      return nothing;\n    }\n\n    return html`\n      <div class=\"form\">\n        <ha-textfield\n          .value=${this._name}\n          .configValue=${\"name\"}\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.name\"\n          )}\n          autoValidate\n          required\n          .validationMessage=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.required_error_msg\"\n          )}\n          dialogInitialFocus\n        ></ha-textfield>\n        <ha-icon-picker\n          .hass=${this.hass}\n          .value=${this._icon}\n          .configValue=${\"icon\"}\n          @value-changed=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.generic.icon\"\n          )}\n        ></ha-icon-picker>\n        <ha-textfield\n          .value=${this._minimum}\n          .configValue=${\"minimum\"}\n          type=\"number\"\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.counter.minimum\"\n          )}\n        ></ha-textfield>\n        <ha-textfield\n          .value=${this._maximum}\n          .configValue=${\"maximum\"}\n          type=\"number\"\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.counter.maximum\"\n          )}\n        ></ha-textfield>\n        <ha-textfield\n          .value=${this._initial}\n          .configValue=${\"initial\"}\n          type=\"number\"\n          @input=${this._valueChanged}\n          .label=${this.hass!.localize(\n            \"ui.dialogs.helper_settings.counter.initial\"\n          )}\n        ></ha-textfield>\n        <ha-expansion-panel\n          header=${this.hass.localize(\n            \"ui.dialogs.helper_settings.generic.advanced_settings\"\n          )}\n          outlined\n        >\n          <ha-textfield\n            .value=${this._step}\n            .configValue=${\"step\"}\n            type=\"number\"\n            @input=${this._valueChanged}\n            .label=${this.hass!.localize(\n              \"ui.dialogs.helper_settings.counter.step\"\n            )}\n          ></ha-textfield>\n          <div class=\"row\">\n            <ha-switch\n              .checked=${this._restore}\n              .configValue=${\"restore\"}\n              @change=${this._valueChanged}\n            >\n            </ha-switch>\n            <div>\n              ${this.hass.localize(\n                \"ui.dialogs.helper_settings.counter.restore\"\n              )}\n            </div>\n          </div>\n        </ha-expansion-panel>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    if (!this.new && !this._item) {\n      return;\n    }\n    ev.stopPropagation();\n    const target = ev.target as any;\n    const configValue = target.configValue;\n    const value =\n      target.type === \"number\"\n        ? target.value !== \"\"\n          ? Number(target.value)\n          : undefined\n        : target.localName === \"ha-switch\"\n          ? (ev.target as HaSwitch).checked\n          : ev.detail?.value || target.value;\n    if (this[`_${configValue}`] === value) {\n      return;\n    }\n    const newValue = { ...this._item };\n    if (value === undefined || value === \"\") {\n      delete newValue[configValue];\n    } else {\n      newValue[configValue] = value;\n    }\n    fireEvent(this, \"value-changed\", {\n      value: newValue,\n    });\n  }\n\n  static get styles(): CSSResultGroup {\n    return [\n      haStyle,\n      css`\n        .form {\n          color: var(--primary-text-color);\n        }\n        .row {\n          margin-top: 12px;\n          margin-bottom: 12px;\n          color: var(--primary-text-color);\n          display: flex;\n          align-items: center;\n        }\n        .row div {\n          margin-left: 16px;\n          margin-inline-start: 16px;\n          margin-inline-end: initial;\n        }\n        ha-textfield {\n          display: block;\n          margin: 8px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-counter-form\": HaCounterForm;\n  }\n}\n"],"names":["HaCounterForm","LitElement","item","this","_item","_name","name","_icon","icon","_maximum","maximum","undefined","_minimum","minimum","_restore","restore","_step","step","_initial","initial","focus","updateComplete","then","shadowRoot","querySelector","render","hass","html","_valueChanged","localize","nothing","ev","new","stopPropagation","target","configValue","value","type","Number","localName","checked","detail","newValue","fireEvent","styles","haStyle","css","args","attribute","Boolean"],"mappings":"0LAaA,MAAAA,UAAAC,EAAAA,GAsBE,QAAAC,CAAAA,GACEC,KAAAC,MAAAF,EACAA,GACEC,KAAAE,MAAAH,EAAAI,MAAA,GACAH,KAAAI,MAAAL,EAAAM,MAAA,GACAL,KAAAM,SAAAP,EAAAQ,cAAAC,EACAR,KAAAS,SAAAV,EAAAW,cAAAF,EACAR,KAAAW,SAAAZ,EAAAa,UAAA,EACAZ,KAAAa,MAAAd,EAAAe,MAAA,EACAd,KAAAe,SAAAhB,EAAAiB,SAAA,IAEAhB,KAAAE,MAAA,GACAF,KAAAI,MAAA,GACAJ,KAAAM,cAAAE,EACAR,KAAAS,cAAAD,EACAR,KAAAW,UAAA,EACAX,KAAAa,MAAA,EACAb,KAAAe,SAAA,EAEJ,CAEOE,KAAAA,GACLjB,KAAAkB,eAAAC,MAAA,IAAAnB,KAAAoB,YAAAC,cAAA,yBAAAJ,SAKF,CAEUK,MAAAA,GACR,OAAKtB,KAALuB,KAIAC,EAAAA,EAAA;;;mBAGa,KAAAtB;yBACM;mBACN,KAAAuB;mBACA,KAAAF,KAAAG,SAAA;;;+BAKY,KAAAH,KAAAG,SAAA;;;;kBAMb,KAAAH;mBACC,KAAAnB;yBACM;2BACE,KAAAqB;mBACR,KAAAF,KAAAG,SAAA;;;mBAKA,KAAAjB;yBACM;;mBAEN,KAAAgB;mBACA,KAAAF,KAAAG,SAAA;;;mBAKA,KAAApB;yBACM;;mBAEN,KAAAmB;mBACA,KAAAF,KAAAG,SAAA;;;mBAKA,KAAAX;yBACM;;mBAEN,KAAAU;mBACA,KAAAF,KAAAG,SAAA;;;mBAKA,KAAAH,KAAAG,SAAA;;;;qBAME,KAAAb;2BACM;;qBAEN,KAAAY;qBACA,KAAAF,KAAAG,SAAA;;;;yBAMI,KAAAf;6BACI;wBACL,KAAAc;;;;gBAIR,KAAAF,KAAAG,SAAA;;;;;MA9ERC,EAAAA,EAsFJ,CAEQF,aAAAA,CAAAG,GACN,IAAK5B,KAAL6B,MAAA,KAAA5B,MACE,OAEF2B,EAAAE,kBACA,MAAAC,EAAAH,EAAAG,OACAC,EAAAD,EAAAC,YACAC,EAAA,WAAAF,EAAAG,KAAA,KAAAH,EAAAE,MAAAE,OAAAJ,EAAAE,YAAAzB,EAAA,cAAAuB,EAAAK,UAAAR,EAAAG,OAAAM,QAAAT,EAAAU,QAAAL,OAAAF,EAAAE,MAQA,GAAIjC,KAAK,IAATgC,OAAAC,EACE,OAEF,MAAAM,EAAA,IAAsBvC,KAAHC,YACnBO,IAAAyB,GAAA,KAAAA,SACEM,EAAAP,GAEAO,EAAAP,GAAAC,GAEFO,EAAAA,EAAAA,GAAA,sBACEP,MAAAM,GAEJ,CAEA,iBAAAE,GACE,MAAO,CACLC,EAAAA,GACAC,EAAAA,EAAA;;;;;;;;;;;;;;;;;;;;QAsBJ,C,kBAnMF,SAAAC,GAAA,KAAAf,KAAA,C,8BAEcgB,WAAA,K,uDAEAX,KAAAY,W"}