# coding: utf-8

"""
    BMLT

    BMLT Admin API Documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bmlt_client.models.meeting_partial_update import MeetingPartialUpdate

class TestMeetingPartialUpdate(unittest.TestCase):
    """MeetingPartialUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeetingPartialUpdate:
        """Test MeetingPartialUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeetingPartialUpdate`
        """
        model = MeetingPartialUpdate()
        if include_optional:
            return MeetingPartialUpdate(
                service_body_id = 0,
                format_ids = [
                    56
                    ],
                venue_type = 1,
                temporarily_virtual = False,
                day = 0,
                start_time = 'string',
                duration = '01:00',
                time_zone = 'America/New_York',
                latitude = 35.698741,
                longitude = -81.26273,
                published = True,
                email = 'string',
                world_id = 'string',
                name = 'string',
                location_text = 'string',
                location_info = 'string',
                location_street = 'string',
                location_neighborhood = 'string',
                location_city_subsection = 'string',
                location_municipality = 'string',
                location_sub_province = 'string',
                location_province = 'string',
                location_postal_code_1 = 'string',
                location_nation = 'string',
                phone_meeting_number = 'string',
                virtual_meeting_link = 'string',
                virtual_meeting_additional_info = 'string',
                contact_name_1 = 'string',
                contact_name_2 = 'string',
                contact_phone_1 = 'string',
                contact_phone_2 = 'string',
                contact_email_1 = 'string',
                contact_email_2 = 'string',
                bus_lines = 'string',
                train_lines = 'string',
                comments = 'string',
                custom_fields = {key1=value1, key2=value2}
            )
        else:
            return MeetingPartialUpdate(
                service_body_id = 0,
                format_ids = [
                    56
                    ],
                venue_type = 1,
                day = 0,
                start_time = 'string',
                duration = '01:00',
                latitude = 35.698741,
                longitude = -81.26273,
                published = True,
                name = 'string',
        )
        """

    def testMeetingPartialUpdate(self):
        """Test MeetingPartialUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
