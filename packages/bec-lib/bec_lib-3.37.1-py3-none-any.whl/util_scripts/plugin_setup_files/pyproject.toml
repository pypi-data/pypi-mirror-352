[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{template_name}"
version = "0.0.0"
description = "Custom device implementations based on the ophyd hardware abstraction layer"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
]
dependencies = []

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "coverage",
    "pylint",
    "pytest",
    "pytest-random-order",
    "ophyd_devices",
    "bec_server",
]

[project.entry-points."bec"]
plugin_bec = "{template_name}"

[project.entry-points."bec.deployment.device_server"]
plugin_ds_startup = "{template_name}.deployments.device_server.startup:run"

[project.entry-points."bec.file_writer"]
plugin_file_writer = "{template_name}.file_writer"

[project.entry-points."bec.scans"]
plugin_scans = "{template_name}.scans"

[project.entry-points."bec.scans.metadata_schema"]
plugin_metadata_schema = "{template_name}.scans.metadata_schema"

[project.entry-points."bec.ipython_client_startup"]
plugin_ipython_client_pre = "{template_name}.bec_ipython_client.startup.pre_startup"
plugin_ipython_client_post = "{template_name}.bec_ipython_client.startup"

[project.entry-points."bec.widgets.auto_updates"]
plugin_widgets_update = "{template_name}.bec_widgets.auto_updates:PlotUpdate"

[project.entry-points."bec.widgets.user_widgets"]
plugin_widgets = "{template_name}.bec_widgets.widgets"

[tool.hatch.build.targets.wheel]
include = ["*"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.black]
line-length = 100
skip-magic-trailing-comma = true

[tool.pylint.basic]
# Good variable names regexes, separated by a comma. If names match any regex,
# they will always be accepted
good-names-rgxs = [
    ".*scanID.*",
    ".*RID.*",
    ".*pointID.*",
    ".*ID.*",
    ".*_2D.*",
    ".*_1D.*",
]
