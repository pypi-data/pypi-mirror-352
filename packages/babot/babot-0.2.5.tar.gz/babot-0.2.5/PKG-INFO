Metadata-Version: 2.4
Name: babot
Version: 0.2.5
Summary: Framework para crear agentes inteligentes personalizados
Home-page: https://github.com/Excel-ente/babot
Author: Kevin Turkienich
Author-email: kevin_turkienich@outlook.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: rich>=13.9.0
Requires-Dist: pyyaml>=6.0
Requires-Dist: python-dotenv>=1.0.0
Provides-Extra: agents
Requires-Dist: langchain-ollama>=0.2.2; extra == "agents"
Requires-Dist: pypdf>=5.1.0; extra == "agents"
Requires-Dist: pytesseract>=0.3.13; extra == "agents"
Requires-Dist: pdf2image>=1.17.0; extra == "agents"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license-file
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary


![Babot](assets/logo.png)



# BABOT

Babot es un framework para crear agentes inteligentes personalizados utilizando Langchaing, integrados con modelos de lenguaje como Llama 2, y diseñados para ejecutarse en infraestructura local o en la nube. 
Ofrece herramientas para inicializar proyectos, crear agentes desde cero, clonar agentes predefinidos desde un repositorio, y ejecutar tareas complejas como búsqueda en internet o análisis de imágenes.




## Caracteristicas

**Fácil Inicialización:** Crea rápidamente un proyecto base con la CLI.

**Agentes Personalizados:** Diseña agentes con prompts y capacidades específicas.

**Integración con Ollama:** Utiliza modelos como Llama 2 para ejecución local.

**Soporte Modular:** Añade agentes o funcionalidades según las necesidades del negocio.

**Escalabilidad:** Perfecto para proyectos pequeños o despliegues empresariales.
## Instalación

**Instala el framework:**

```bash
  pip install babot
  cd my-project
```
  
**Verifica que Babot esté instalado:**

```bash
  babot --version
```

**Inicializar un Proyecto Para comenzar un nuevo proyecto:**

babot init <nombre_proyecto>

```bash
  babot init mi_proyecto
```

Esto generará una estructura base en el directorio mi_proyecto.

**Ejecutar un Agente Existente Dirígete al directorio del proyecto:**

NOTA: es importante que ollama esté corriendo en algún puerto localmente.

```bash
  cd mi_proyecto
  babot run babot
```

Puedes modificar el prompt del babot o cualquier configuracion del agente dentro del directorio **config/babot.yaml**


## Cómo crear Agentes

Puedes crear un agente desde cero con: babot create <nombre_agente>

```bash
babot create agente_ventas
```

Esto generará:

Un archivo Python: **agentes/agente_ventas.py**.
Un archivo de configuración: **config/agente_ventas.yaml**.

Edítalos según tus necesidades y ejecuta el nuevo agente: 

```bash
babot run agente_ventas
```



## Cómo clonar un Agente desde nuestro repositorio

Si deseas usar un agente predefinido de nuestro repositorio, puedes clonarlo: babot clone <nombre_agente>

```bash
babot clone agente_marketing
```

Esto descargará el código del agente y su configuración en tu proyecto.


## Licencia

Este proyecto está bajo la Licencia MIT. Consulta el archivo LICENSE para más detalles.

