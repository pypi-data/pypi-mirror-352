[project]
name = "todo-txt-mcp"
version = "1.0.1"
description = "Model Context Protocol server for todo.txt file management with AI assistants like Claude"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Daniel Meint", email = "pilots-4-trilogy@icloud.com"}
]
maintainers = [
    {name = "Daniel Meint", email = "pilots-4-trilogy@icloud.com"}
]
keywords = [
    "todo", "todo.txt", "mcp", "model-context-protocol", 
    "ai", "claude", "task-management", "productivity", "cli"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
    "Operating System :: OS Independent",
]
dependencies = [
    "mcp[cli]>=1.9.2",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.0",
    "pytodotxt>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/danielmeint/todo-txt-mcp"
Documentation = "https://github.com/danielmeint/todo-txt-mcp#readme"
Repository = "https://github.com/danielmeint/todo-txt-mcp.git"
Issues = "https://github.com/danielmeint/todo-txt-mcp/issues"
Changelog = "https://github.com/danielmeint/todo-txt-mcp/blob/main/CHANGELOG.md"

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=5.0.0",
    "black>=24.0.0",
    "ruff>=0.8.0",
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    "safety>=3.2.9",
    "pip-audit>=2.9.0",
]

[project.scripts]
todo-txt-mcp = "todo_txt_mcp.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.hatch.build.targets.wheel]
packages = ["src/todo_txt_mcp"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = "pytodotxt.*"
ignore_missing_imports = true
