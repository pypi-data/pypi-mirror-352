"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import arg_services.mining.v1beta.graph_construction_pb2
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class GraphConstructionServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GraphConstruction: grpc.UnaryUnaryMultiCallable[
        arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionRequest,
        arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionResponse,
    ]

class GraphConstructionServiceAsyncStub:
    GraphConstruction: grpc.aio.UnaryUnaryMultiCallable[
        arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionRequest,
        arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionResponse,
    ]

class GraphConstructionServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GraphConstruction(
        self,
        request: arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionRequest,
        context: _ServicerContext,
    ) -> typing.Union[arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionResponse, collections.abc.Awaitable[arg_services.mining.v1beta.graph_construction_pb2.GraphConstructionResponse]]: ...

def add_GraphConstructionServiceServicer_to_server(servicer: GraphConstructionServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
