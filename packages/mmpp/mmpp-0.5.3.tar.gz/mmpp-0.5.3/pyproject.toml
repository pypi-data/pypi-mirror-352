[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mmpp"
version = "0.5.3"
authors = [
    {name = "Mateusz Zelent", email = "mateusz.zelent@amu.edu.pl"}
]
description = "A library for MMPP (Micro Magnetic Post Processing) simulation and analysis"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.5.0",
    "pyzfn",
    "zarr",
    "rich",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "ruff",
    "mypy",
    "build",
    "twine",
    "sphinx>=4.0",
    "sphinx-rtd-theme",
    "sphinx-autodoc-typehints",
    "myst-parser",
]
interactive = [
    "itables",
    "IPython",
    "jupyter",
]
plotting = [
    "cmocean",
]

[project.urls]
Homepage = "https://github.com/mateuszzelent/mmpp"
Repository = "https://github.com/mateuszzelent/mmpp"
Issues = "https://github.com/mateuszzelent/mmpp/issues"

[project.scripts]
mmpp = "mmpp.cli:main"

[tool.setuptools]
license-files = []

[tool.setuptools.packages.find]
where = ["."]
include = ["mmpp", "mmpp.*"]

[tool.setuptools.package-data]
mmpp = ["paper.mplstyle", "fonts/**/*"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["mmpp"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disable_error_code = "unused-ignore"
mypy_path = "mmpp"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
no_implicit_reexport = true
disallow_untyped_calls = false
strict = true
plugins = "numpy.typing.mypy_plugin"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "tests",
]
