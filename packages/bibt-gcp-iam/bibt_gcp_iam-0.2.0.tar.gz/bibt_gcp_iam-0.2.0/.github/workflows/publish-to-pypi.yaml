---
###################################################################
#                 !!! DO NOT CHANGE THIS FILE !!!                 #
#              This file is managed by Terraform in               #
#          the broadinstitute/bibt-terraform repository.          #
#  Any changes made outside that repository WILL be overwritten.  #
###################################################################

name: Publish to PyPI

on:
  push:
    tags:
      - "*"

permissions:
  contents: read

jobs:
  build:
    name: "Build dists"
    runs-on: ubuntu-latest
    environment:
      name: publish
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      - name: "Checkout repository"
        uses: "actions/checkout@v4.1.1"

      - name: "Setup Python"
        uses: "actions/setup-python@v5.0.0"
        with:
          python-version: "3.x"

      - name: "Install dependencies"
        run: python -m pip install build==1.2.2.post1

      - name: "Build dists"
        run: |
          SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
          python -m build

      - name: "Generate hashes"
        id: hash
        run: |
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: "Upload dists"
        uses: "actions/upload-artifact@v4.3.1"
        with:
          name: "dist"
          path: "dist/"
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    permissions:
      actions: read
      contents: write
      id-token: write # Needed to access the workflow's OIDC identity.
    uses: "slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0"
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true

  publish:
    name: "Publish"
    if: startsWith(github.ref, 'refs/tags/')
    needs: ["build", "provenance"]
    environment:
      name: publish
      url: https://pypi.org/p/${{ github.event.repository.name }}
    permissions:
      contents: write
      id-token: write # Needed for trusted publishing to PyPI.
    runs-on: "ubuntu-latest"

    steps:
      - name: "Download dists"
        uses: "actions/download-artifact@v4.1.7"
        with:
          name: "dist"
          path: "dist/"

      - name: "Upload dists to GitHub Release"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}" # this is managed by GitHub
        run: |
          gh release upload ${{ github.ref_name }} dist/* --repo ${{ github.repository }}

      - name: "Publish dists to PyPI"
        uses: "pypa/gh-action-pypi-publish@v1.12.3"
        with:
          verify-metadata: false
