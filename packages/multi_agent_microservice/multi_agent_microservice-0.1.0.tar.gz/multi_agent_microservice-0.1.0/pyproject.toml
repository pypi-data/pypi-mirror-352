[project]
name = "multi_agent_microservice"
version = "0.1.0"
description = "A microservice using FastAPI, PostgreSQL, OpenSearch, and LangChain."
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]


packages =[{include = "src/iwinner"}]

requires-python = "==3.11.*"

dependencies = [
    "fastapi==0.114.0",
    "grandalf",
    "uvicorn>=0.21.0",
    "sqlalchemy>=2.0.0",
    # Langchain & Langgraph
    "langchain-core~=0.3.0",
    "langchain-openai>=0.3.2",
    "langchain-experimental>=0.3.4",
    "langsmith==0.3.0",
    "langchain_anthropic==0.3.0",
    "langgraph~=0.2.53",
    "langchain-community~=0.3.2",
    "opensearch-py>=2.0.0",
    "pydantic>=2.0.0",
    # Autogen Agent SDK
    "autogen-agentchat",
    "autogen-ext[openai]",
    "autogen-core",
    # CrewAI Agent SDK
    "crewai==0.95.0",
    "crewai-tools==0.0.1",
    "playwright",
    "azure-identity",
    # LLAMA Index SDK
    "llama-index-readers-web",
    "llama-index-readers-wikipedia",
    "llama-index-tools-wikipedia",
    "llama-index-embeddings-azure-openai",
    "llama-index-llms-azure-openai",
    "llama-index-vector-stores-opensearch",
    "llama-index",
    # Google ADK Agent SDK
    "google-adk",

    # OpenAI Agent
    "openai-agents",

    "streamlit",
    "azure-identity",
    "pydantic-ai",
    "smolagents",
    "phidata",
    "duckduckgo-search",
    "yfinance",
    #"dynamiq==0.5.0",
    "boto3",
    "botocore",
    "setuptools==68.2.2",
    "langchain-aws==0.2.7",
    "ipywidgets",
    "typing-extensions",
    #    langchain-community==0.2.17
    #    langchain-core==0.2.40
    "langchain_huggingface",
    #langchain==0.2.16
    #langgraph==0.2.22
    "sec_api",
    # Vector Databases
    "chromadb",
    "faiss-cpu==1.10.0",
    "opensearch-py",
    "qdrant-client",
    "retrying",
    "singlestoredb",
    "langchain-nvidia-ai-endpoints",
    "langchain-deepseek-official",
    "litellm",
    "rich",
    "pymupdf",
    "fitz",
    # MCP SDK
    "httpx>=0.28.1",
    "mcp[cli]>=1.3.0",
    #AWS Agent sdk
#    "strands-agents-tools==0.1.0",
#    "strands-agents-builder==0.1.0",
    "strands-agents==0.0.1",
    "strands-agents-builder==0.0.1",
    "strands-agents-tools==0.0.1",
    # RAG Expirments
    "pymilvus",
    "langchain_milvus",
    "qdrant-client",
    "langchain-qdrant",
    "lancedb",
    "psycopg2",
    #"psycopg2-binary",
    "pgvector",
    "arxiv",
    "pymupdf",
    "frontend",
    "browser-use",
    "browser-use[memory]",
    "chromium",
    "datasets",
    "rank_bm25",
    "opik",
    "google-genai",
    "litellm",
    "llama-index-callbacks-opik",
    "haystack-ai",
    "ragas",
    "nltk",
    "groq",
    "langchain_groq",
    # Model Evaluation & Monitoring
    "arize-phoenix",
    "openinference-instrumentation-langchain",
    "arize-phoenix-otel",
    "jupyterlab",
    "agentops",

]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0"
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.hatch.build.targets.wheel]
packages = ["src/iwinner"]
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"