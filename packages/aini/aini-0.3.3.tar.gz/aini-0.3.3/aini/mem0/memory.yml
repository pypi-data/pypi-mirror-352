# Mem0 Memory Cloud Configuration
mem0c:
  class: mem0.MemoryClient
  params:
    api_key: ${MEM0_API_KEY}
    host: ${host}
    org_id: ${org_id}
    project_id: ${project_id}

# Mem0 Memory Local Configuration
# from mem0 import Memory
# m = Memory.from_config(config_dict)
mem0:
  class: mem0.Memory
  init: from_config
  params:
    config_dict:
      history_db_path: ${history_db_path|'db/histories.db'}
      # Graph Store
      graph_store:
        provider: neo4j
        config:
          url: bolt://localhost:7687
          username: ${neo4j_user|NEO4J_USER|'neo4j'}
          password: ${neo4j_pass|NEO4J_PASS}
      # Vector Store
      vector_store:
        provider: ${vecdb_provider|'chroma'}
        config:
          path: ${vecdb_path|'db/memories.chroma'}
          collection_name: ${vecdb_collection|'memories'}
      # LLM Configurations - use one of the following
      llm:
        provider: deepseek
        config:
          model: deepseek-chat
          deepseek_base_url: https://api.deepseek.com
          api_key: ${DEEPSEEK_API_KEY}
      llm_qwen:
        provider: openai
        config:
          model: Qwen/Qwen3-32B
          openai_base_url: https://api.siliconflow.cn/v1
          api_key: ${SF_API_KEY}
      # Embedder Configurations - use one of the following
      embedder:
        provider: openai
        config:
          model: Pro/BAAI/bge-m3
          openai_base_url: https://api.siliconflow.cn/v1
          embedding_dims: 1024
          api_key: ${SF_API_KEY}
      embedder_yd:
        provider: openai
        config:
          model: netease-youdao/bce-embedding-base_v1
          openai_base_url: https://api.siliconflow.cn/v1
          embedding_dims: 768
          api_key: ${SF_API_KEY}
      embedder_hf:
        provider: huggingface
        config:
          model: sentence-transformers/all-MiniLM-L6-v2
          embedding_dims: 384
