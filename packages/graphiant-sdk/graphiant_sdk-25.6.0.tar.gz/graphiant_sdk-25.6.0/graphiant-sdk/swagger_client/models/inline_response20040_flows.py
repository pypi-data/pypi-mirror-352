# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20040Flows(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'app_name': 'str',
        'client_ip': 'str',
        'client_site': 'InlineResponse20035ClientEndpointSite',
        'first_seen_ts': 'V1devicesbringuptokenValidTillTs',
        'lan_segment': 'str',
        'last_seen_ts': 'V1devicesbringuptokenValidTillTs',
        'server_ip': 'str',
        'server_port': 'str',
        'server_site': 'InlineResponse20035ClientEndpointSite'
    }

    attribute_map = {
        'app_name': 'appName',
        'client_ip': 'clientIp',
        'client_site': 'clientSite',
        'first_seen_ts': 'firstSeenTs',
        'lan_segment': 'lanSegment',
        'last_seen_ts': 'lastSeenTs',
        'server_ip': 'serverIp',
        'server_port': 'serverPort',
        'server_site': 'serverSite'
    }

    def __init__(self, app_name=None, client_ip=None, client_site=None, first_seen_ts=None, lan_segment=None, last_seen_ts=None, server_ip=None, server_port=None, server_site=None):  # noqa: E501
        """InlineResponse20040Flows - a model defined in Swagger"""  # noqa: E501
        self._app_name = None
        self._client_ip = None
        self._client_site = None
        self._first_seen_ts = None
        self._lan_segment = None
        self._last_seen_ts = None
        self._server_ip = None
        self._server_port = None
        self._server_site = None
        self.discriminator = None
        if app_name is not None:
            self.app_name = app_name
        if client_ip is not None:
            self.client_ip = client_ip
        if client_site is not None:
            self.client_site = client_site
        if first_seen_ts is not None:
            self.first_seen_ts = first_seen_ts
        if lan_segment is not None:
            self.lan_segment = lan_segment
        if last_seen_ts is not None:
            self.last_seen_ts = last_seen_ts
        if server_ip is not None:
            self.server_ip = server_ip
        if server_port is not None:
            self.server_port = server_port
        if server_site is not None:
            self.server_site = server_site

    @property
    def app_name(self):
        """Gets the app_name of this InlineResponse20040Flows.  # noqa: E501


        :return: The app_name of this InlineResponse20040Flows.  # noqa: E501
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this InlineResponse20040Flows.


        :param app_name: The app_name of this InlineResponse20040Flows.  # noqa: E501
        :type: str
        """

        self._app_name = app_name

    @property
    def client_ip(self):
        """Gets the client_ip of this InlineResponse20040Flows.  # noqa: E501


        :return: The client_ip of this InlineResponse20040Flows.  # noqa: E501
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this InlineResponse20040Flows.


        :param client_ip: The client_ip of this InlineResponse20040Flows.  # noqa: E501
        :type: str
        """

        self._client_ip = client_ip

    @property
    def client_site(self):
        """Gets the client_site of this InlineResponse20040Flows.  # noqa: E501


        :return: The client_site of this InlineResponse20040Flows.  # noqa: E501
        :rtype: InlineResponse20035ClientEndpointSite
        """
        return self._client_site

    @client_site.setter
    def client_site(self, client_site):
        """Sets the client_site of this InlineResponse20040Flows.


        :param client_site: The client_site of this InlineResponse20040Flows.  # noqa: E501
        :type: InlineResponse20035ClientEndpointSite
        """

        self._client_site = client_site

    @property
    def first_seen_ts(self):
        """Gets the first_seen_ts of this InlineResponse20040Flows.  # noqa: E501


        :return: The first_seen_ts of this InlineResponse20040Flows.  # noqa: E501
        :rtype: V1devicesbringuptokenValidTillTs
        """
        return self._first_seen_ts

    @first_seen_ts.setter
    def first_seen_ts(self, first_seen_ts):
        """Sets the first_seen_ts of this InlineResponse20040Flows.


        :param first_seen_ts: The first_seen_ts of this InlineResponse20040Flows.  # noqa: E501
        :type: V1devicesbringuptokenValidTillTs
        """

        self._first_seen_ts = first_seen_ts

    @property
    def lan_segment(self):
        """Gets the lan_segment of this InlineResponse20040Flows.  # noqa: E501


        :return: The lan_segment of this InlineResponse20040Flows.  # noqa: E501
        :rtype: str
        """
        return self._lan_segment

    @lan_segment.setter
    def lan_segment(self, lan_segment):
        """Sets the lan_segment of this InlineResponse20040Flows.


        :param lan_segment: The lan_segment of this InlineResponse20040Flows.  # noqa: E501
        :type: str
        """

        self._lan_segment = lan_segment

    @property
    def last_seen_ts(self):
        """Gets the last_seen_ts of this InlineResponse20040Flows.  # noqa: E501


        :return: The last_seen_ts of this InlineResponse20040Flows.  # noqa: E501
        :rtype: V1devicesbringuptokenValidTillTs
        """
        return self._last_seen_ts

    @last_seen_ts.setter
    def last_seen_ts(self, last_seen_ts):
        """Sets the last_seen_ts of this InlineResponse20040Flows.


        :param last_seen_ts: The last_seen_ts of this InlineResponse20040Flows.  # noqa: E501
        :type: V1devicesbringuptokenValidTillTs
        """

        self._last_seen_ts = last_seen_ts

    @property
    def server_ip(self):
        """Gets the server_ip of this InlineResponse20040Flows.  # noqa: E501


        :return: The server_ip of this InlineResponse20040Flows.  # noqa: E501
        :rtype: str
        """
        return self._server_ip

    @server_ip.setter
    def server_ip(self, server_ip):
        """Sets the server_ip of this InlineResponse20040Flows.


        :param server_ip: The server_ip of this InlineResponse20040Flows.  # noqa: E501
        :type: str
        """

        self._server_ip = server_ip

    @property
    def server_port(self):
        """Gets the server_port of this InlineResponse20040Flows.  # noqa: E501


        :return: The server_port of this InlineResponse20040Flows.  # noqa: E501
        :rtype: str
        """
        return self._server_port

    @server_port.setter
    def server_port(self, server_port):
        """Sets the server_port of this InlineResponse20040Flows.


        :param server_port: The server_port of this InlineResponse20040Flows.  # noqa: E501
        :type: str
        """

        self._server_port = server_port

    @property
    def server_site(self):
        """Gets the server_site of this InlineResponse20040Flows.  # noqa: E501


        :return: The server_site of this InlineResponse20040Flows.  # noqa: E501
        :rtype: InlineResponse20035ClientEndpointSite
        """
        return self._server_site

    @server_site.setter
    def server_site(self, server_site):
        """Sets the server_site of this InlineResponse20040Flows.


        :param server_site: The server_site of this InlineResponse20040Flows.  # noqa: E501
        :type: InlineResponse20035ClientEndpointSite
        """

        self._server_site = server_site

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20040Flows, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20040Flows):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
