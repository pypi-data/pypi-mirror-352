# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20082NatEntries(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'destination_ip_address': 'str',
        'destination_port': 'str',
        'inside_global_ip_address': 'str',
        'inside_global_port': 'str',
        'inside_local_ip_address': 'str',
        'inside_local_port': 'str',
        'nat_type': 'str',
        'outside_global_ip_address': 'str',
        'outside_global_port': 'str',
        'pre_destination_ip_address': 'str',
        'pre_destination_port': 'str',
        'vrf_id': 'str'
    }

    attribute_map = {
        'destination_ip_address': 'destinationIpAddress',
        'destination_port': 'destinationPort',
        'inside_global_ip_address': 'insideGlobalIpAddress',
        'inside_global_port': 'insideGlobalPort',
        'inside_local_ip_address': 'insideLocalIpAddress',
        'inside_local_port': 'insideLocalPort',
        'nat_type': 'natType',
        'outside_global_ip_address': 'outsideGlobalIpAddress',
        'outside_global_port': 'outsideGlobalPort',
        'pre_destination_ip_address': 'preDestinationIpAddress',
        'pre_destination_port': 'preDestinationPort',
        'vrf_id': 'vrfId'
    }

    def __init__(self, destination_ip_address=None, destination_port=None, inside_global_ip_address=None, inside_global_port=None, inside_local_ip_address=None, inside_local_port=None, nat_type=None, outside_global_ip_address=None, outside_global_port=None, pre_destination_ip_address=None, pre_destination_port=None, vrf_id=None):  # noqa: E501
        """InlineResponse20082NatEntries - a model defined in Swagger"""  # noqa: E501
        self._destination_ip_address = None
        self._destination_port = None
        self._inside_global_ip_address = None
        self._inside_global_port = None
        self._inside_local_ip_address = None
        self._inside_local_port = None
        self._nat_type = None
        self._outside_global_ip_address = None
        self._outside_global_port = None
        self._pre_destination_ip_address = None
        self._pre_destination_port = None
        self._vrf_id = None
        self.discriminator = None
        if destination_ip_address is not None:
            self.destination_ip_address = destination_ip_address
        if destination_port is not None:
            self.destination_port = destination_port
        if inside_global_ip_address is not None:
            self.inside_global_ip_address = inside_global_ip_address
        if inside_global_port is not None:
            self.inside_global_port = inside_global_port
        if inside_local_ip_address is not None:
            self.inside_local_ip_address = inside_local_ip_address
        if inside_local_port is not None:
            self.inside_local_port = inside_local_port
        if nat_type is not None:
            self.nat_type = nat_type
        if outside_global_ip_address is not None:
            self.outside_global_ip_address = outside_global_ip_address
        if outside_global_port is not None:
            self.outside_global_port = outside_global_port
        if pre_destination_ip_address is not None:
            self.pre_destination_ip_address = pre_destination_ip_address
        if pre_destination_port is not None:
            self.pre_destination_port = pre_destination_port
        if vrf_id is not None:
            self.vrf_id = vrf_id

    @property
    def destination_ip_address(self):
        """Gets the destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._destination_ip_address

    @destination_ip_address.setter
    def destination_ip_address(self, destination_ip_address):
        """Sets the destination_ip_address of this InlineResponse20082NatEntries.


        :param destination_ip_address: The destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._destination_ip_address = destination_ip_address

    @property
    def destination_port(self):
        """Gets the destination_port of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The destination_port of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this InlineResponse20082NatEntries.


        :param destination_port: The destination_port of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._destination_port = destination_port

    @property
    def inside_global_ip_address(self):
        """Gets the inside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The inside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._inside_global_ip_address

    @inside_global_ip_address.setter
    def inside_global_ip_address(self, inside_global_ip_address):
        """Sets the inside_global_ip_address of this InlineResponse20082NatEntries.


        :param inside_global_ip_address: The inside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._inside_global_ip_address = inside_global_ip_address

    @property
    def inside_global_port(self):
        """Gets the inside_global_port of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The inside_global_port of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._inside_global_port

    @inside_global_port.setter
    def inside_global_port(self, inside_global_port):
        """Sets the inside_global_port of this InlineResponse20082NatEntries.


        :param inside_global_port: The inside_global_port of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._inside_global_port = inside_global_port

    @property
    def inside_local_ip_address(self):
        """Gets the inside_local_ip_address of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The inside_local_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._inside_local_ip_address

    @inside_local_ip_address.setter
    def inside_local_ip_address(self, inside_local_ip_address):
        """Sets the inside_local_ip_address of this InlineResponse20082NatEntries.


        :param inside_local_ip_address: The inside_local_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._inside_local_ip_address = inside_local_ip_address

    @property
    def inside_local_port(self):
        """Gets the inside_local_port of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The inside_local_port of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._inside_local_port

    @inside_local_port.setter
    def inside_local_port(self, inside_local_port):
        """Sets the inside_local_port of this InlineResponse20082NatEntries.


        :param inside_local_port: The inside_local_port of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._inside_local_port = inside_local_port

    @property
    def nat_type(self):
        """Gets the nat_type of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The nat_type of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._nat_type

    @nat_type.setter
    def nat_type(self, nat_type):
        """Sets the nat_type of this InlineResponse20082NatEntries.


        :param nat_type: The nat_type of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._nat_type = nat_type

    @property
    def outside_global_ip_address(self):
        """Gets the outside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The outside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._outside_global_ip_address

    @outside_global_ip_address.setter
    def outside_global_ip_address(self, outside_global_ip_address):
        """Sets the outside_global_ip_address of this InlineResponse20082NatEntries.


        :param outside_global_ip_address: The outside_global_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._outside_global_ip_address = outside_global_ip_address

    @property
    def outside_global_port(self):
        """Gets the outside_global_port of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The outside_global_port of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._outside_global_port

    @outside_global_port.setter
    def outside_global_port(self, outside_global_port):
        """Sets the outside_global_port of this InlineResponse20082NatEntries.


        :param outside_global_port: The outside_global_port of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._outside_global_port = outside_global_port

    @property
    def pre_destination_ip_address(self):
        """Gets the pre_destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The pre_destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._pre_destination_ip_address

    @pre_destination_ip_address.setter
    def pre_destination_ip_address(self, pre_destination_ip_address):
        """Sets the pre_destination_ip_address of this InlineResponse20082NatEntries.


        :param pre_destination_ip_address: The pre_destination_ip_address of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._pre_destination_ip_address = pre_destination_ip_address

    @property
    def pre_destination_port(self):
        """Gets the pre_destination_port of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The pre_destination_port of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._pre_destination_port

    @pre_destination_port.setter
    def pre_destination_port(self, pre_destination_port):
        """Sets the pre_destination_port of this InlineResponse20082NatEntries.


        :param pre_destination_port: The pre_destination_port of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._pre_destination_port = pre_destination_port

    @property
    def vrf_id(self):
        """Gets the vrf_id of this InlineResponse20082NatEntries.  # noqa: E501


        :return: The vrf_id of this InlineResponse20082NatEntries.  # noqa: E501
        :rtype: str
        """
        return self._vrf_id

    @vrf_id.setter
    def vrf_id(self, vrf_id):
        """Sets the vrf_id of this InlineResponse20082NatEntries.


        :param vrf_id: The vrf_id of this InlineResponse20082NatEntries.  # noqa: E501
        :type: str
        """

        self._vrf_id = vrf_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20082NatEntries, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20082NatEntries):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
