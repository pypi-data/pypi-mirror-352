# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse200109DraftManaDeviceInterfaces(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'alias': 'str',
        'circuit': 'str',
        'circuit_name': 'str',
        'config_updated_at': 'object',
        'configured_max_transmission_unit': 'str',
        'description': 'str',
        'duplex': 'str',
        'enabled': 'str',
        'id': 'str',
        'ip_sec': 'object',
        'ipv4': 'object',
        'ipv6': 'object',
        'ipv6_addresses': 'list[object]',
        'lan': 'str',
        'lldp_enabled': 'str',
        'max_transmission_unit': 'str',
        'name': 'str',
        'oper_updated_at': 'object',
        'phy_address': 'str',
        'security_zone': 'str',
        'sfp_optical_strength': 'list[object]',
        'speed_mbps': 'str',
        'subinterfaces': 'list[object]',
        'tcp_mss': 'str',
        'tcp_mss_v4': 'str',
        'tcp_mss_v6': 'str',
        'type': 'str',
        'up': 'str',
        'vrf_function_id': 'str',
        'vrf_name': 'str'
    }

    attribute_map = {
        'alias': 'alias',
        'circuit': 'circuit',
        'circuit_name': 'circuitName',
        'config_updated_at': 'configUpdatedAt',
        'configured_max_transmission_unit': 'configuredMaxTransmissionUnit',
        'description': 'description',
        'duplex': 'duplex',
        'enabled': 'enabled',
        'id': 'id',
        'ip_sec': 'ipSec',
        'ipv4': 'ipv4',
        'ipv6': 'ipv6',
        'ipv6_addresses': 'ipv6Addresses',
        'lan': 'lan',
        'lldp_enabled': 'lldpEnabled',
        'max_transmission_unit': 'maxTransmissionUnit',
        'name': 'name',
        'oper_updated_at': 'operUpdatedAt',
        'phy_address': 'phyAddress',
        'security_zone': 'securityZone',
        'sfp_optical_strength': 'sfpOpticalStrength',
        'speed_mbps': 'speedMbps',
        'subinterfaces': 'subinterfaces',
        'tcp_mss': 'tcpMss',
        'tcp_mss_v4': 'tcpMssV4',
        'tcp_mss_v6': 'tcpMssV6',
        'type': 'type',
        'up': 'up',
        'vrf_function_id': 'vrfFunctionId',
        'vrf_name': 'vrfName'
    }

    def __init__(self, alias=None, circuit=None, circuit_name=None, config_updated_at=None, configured_max_transmission_unit=None, description=None, duplex=None, enabled=None, id=None, ip_sec=None, ipv4=None, ipv6=None, ipv6_addresses=None, lan=None, lldp_enabled=None, max_transmission_unit=None, name=None, oper_updated_at=None, phy_address=None, security_zone=None, sfp_optical_strength=None, speed_mbps=None, subinterfaces=None, tcp_mss=None, tcp_mss_v4=None, tcp_mss_v6=None, type=None, up=None, vrf_function_id=None, vrf_name=None):  # noqa: E501
        """InlineResponse200109DraftManaDeviceInterfaces - a model defined in Swagger"""  # noqa: E501
        self._alias = None
        self._circuit = None
        self._circuit_name = None
        self._config_updated_at = None
        self._configured_max_transmission_unit = None
        self._description = None
        self._duplex = None
        self._enabled = None
        self._id = None
        self._ip_sec = None
        self._ipv4 = None
        self._ipv6 = None
        self._ipv6_addresses = None
        self._lan = None
        self._lldp_enabled = None
        self._max_transmission_unit = None
        self._name = None
        self._oper_updated_at = None
        self._phy_address = None
        self._security_zone = None
        self._sfp_optical_strength = None
        self._speed_mbps = None
        self._subinterfaces = None
        self._tcp_mss = None
        self._tcp_mss_v4 = None
        self._tcp_mss_v6 = None
        self._type = None
        self._up = None
        self._vrf_function_id = None
        self._vrf_name = None
        self.discriminator = None
        if alias is not None:
            self.alias = alias
        if circuit is not None:
            self.circuit = circuit
        if circuit_name is not None:
            self.circuit_name = circuit_name
        if config_updated_at is not None:
            self.config_updated_at = config_updated_at
        if configured_max_transmission_unit is not None:
            self.configured_max_transmission_unit = configured_max_transmission_unit
        if description is not None:
            self.description = description
        if duplex is not None:
            self.duplex = duplex
        if enabled is not None:
            self.enabled = enabled
        if id is not None:
            self.id = id
        if ip_sec is not None:
            self.ip_sec = ip_sec
        if ipv4 is not None:
            self.ipv4 = ipv4
        if ipv6 is not None:
            self.ipv6 = ipv6
        if ipv6_addresses is not None:
            self.ipv6_addresses = ipv6_addresses
        if lan is not None:
            self.lan = lan
        if lldp_enabled is not None:
            self.lldp_enabled = lldp_enabled
        if max_transmission_unit is not None:
            self.max_transmission_unit = max_transmission_unit
        if name is not None:
            self.name = name
        if oper_updated_at is not None:
            self.oper_updated_at = oper_updated_at
        if phy_address is not None:
            self.phy_address = phy_address
        if security_zone is not None:
            self.security_zone = security_zone
        if sfp_optical_strength is not None:
            self.sfp_optical_strength = sfp_optical_strength
        if speed_mbps is not None:
            self.speed_mbps = speed_mbps
        if subinterfaces is not None:
            self.subinterfaces = subinterfaces
        if tcp_mss is not None:
            self.tcp_mss = tcp_mss
        if tcp_mss_v4 is not None:
            self.tcp_mss_v4 = tcp_mss_v4
        if tcp_mss_v6 is not None:
            self.tcp_mss_v6 = tcp_mss_v6
        if type is not None:
            self.type = type
        if up is not None:
            self.up = up
        if vrf_function_id is not None:
            self.vrf_function_id = vrf_function_id
        if vrf_name is not None:
            self.vrf_name = vrf_name

    @property
    def alias(self):
        """Gets the alias of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The alias of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this InlineResponse200109DraftManaDeviceInterfaces.


        :param alias: The alias of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._alias = alias

    @property
    def circuit(self):
        """Gets the circuit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The circuit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._circuit

    @circuit.setter
    def circuit(self, circuit):
        """Sets the circuit of this InlineResponse200109DraftManaDeviceInterfaces.


        :param circuit: The circuit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._circuit = circuit

    @property
    def circuit_name(self):
        """Gets the circuit_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The circuit_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._circuit_name

    @circuit_name.setter
    def circuit_name(self, circuit_name):
        """Sets the circuit_name of this InlineResponse200109DraftManaDeviceInterfaces.


        :param circuit_name: The circuit_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._circuit_name = circuit_name

    @property
    def config_updated_at(self):
        """Gets the config_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The config_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: object
        """
        return self._config_updated_at

    @config_updated_at.setter
    def config_updated_at(self, config_updated_at):
        """Sets the config_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.


        :param config_updated_at: The config_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: object
        """

        self._config_updated_at = config_updated_at

    @property
    def configured_max_transmission_unit(self):
        """Gets the configured_max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The configured_max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._configured_max_transmission_unit

    @configured_max_transmission_unit.setter
    def configured_max_transmission_unit(self, configured_max_transmission_unit):
        """Sets the configured_max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.


        :param configured_max_transmission_unit: The configured_max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._configured_max_transmission_unit = configured_max_transmission_unit

    @property
    def description(self):
        """Gets the description of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The description of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InlineResponse200109DraftManaDeviceInterfaces.


        :param description: The description of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def duplex(self):
        """Gets the duplex of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The duplex of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._duplex

    @duplex.setter
    def duplex(self, duplex):
        """Sets the duplex of this InlineResponse200109DraftManaDeviceInterfaces.


        :param duplex: The duplex of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._duplex = duplex

    @property
    def enabled(self):
        """Gets the enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this InlineResponse200109DraftManaDeviceInterfaces.


        :param enabled: The enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._enabled = enabled

    @property
    def id(self):
        """Gets the id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse200109DraftManaDeviceInterfaces.


        :param id: The id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def ip_sec(self):
        """Gets the ip_sec of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The ip_sec of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: object
        """
        return self._ip_sec

    @ip_sec.setter
    def ip_sec(self, ip_sec):
        """Sets the ip_sec of this InlineResponse200109DraftManaDeviceInterfaces.


        :param ip_sec: The ip_sec of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: object
        """

        self._ip_sec = ip_sec

    @property
    def ipv4(self):
        """Gets the ipv4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The ipv4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: object
        """
        return self._ipv4

    @ipv4.setter
    def ipv4(self, ipv4):
        """Sets the ipv4 of this InlineResponse200109DraftManaDeviceInterfaces.


        :param ipv4: The ipv4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: object
        """

        self._ipv4 = ipv4

    @property
    def ipv6(self):
        """Gets the ipv6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The ipv6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: object
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6):
        """Sets the ipv6 of this InlineResponse200109DraftManaDeviceInterfaces.


        :param ipv6: The ipv6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: object
        """

        self._ipv6 = ipv6

    @property
    def ipv6_addresses(self):
        """Gets the ipv6_addresses of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The ipv6_addresses of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: list[object]
        """
        return self._ipv6_addresses

    @ipv6_addresses.setter
    def ipv6_addresses(self, ipv6_addresses):
        """Sets the ipv6_addresses of this InlineResponse200109DraftManaDeviceInterfaces.


        :param ipv6_addresses: The ipv6_addresses of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: list[object]
        """

        self._ipv6_addresses = ipv6_addresses

    @property
    def lan(self):
        """Gets the lan of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The lan of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._lan

    @lan.setter
    def lan(self, lan):
        """Sets the lan of this InlineResponse200109DraftManaDeviceInterfaces.


        :param lan: The lan of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._lan = lan

    @property
    def lldp_enabled(self):
        """Gets the lldp_enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The lldp_enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._lldp_enabled

    @lldp_enabled.setter
    def lldp_enabled(self, lldp_enabled):
        """Sets the lldp_enabled of this InlineResponse200109DraftManaDeviceInterfaces.


        :param lldp_enabled: The lldp_enabled of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._lldp_enabled = lldp_enabled

    @property
    def max_transmission_unit(self):
        """Gets the max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._max_transmission_unit

    @max_transmission_unit.setter
    def max_transmission_unit(self, max_transmission_unit):
        """Sets the max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.


        :param max_transmission_unit: The max_transmission_unit of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._max_transmission_unit = max_transmission_unit

    @property
    def name(self):
        """Gets the name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse200109DraftManaDeviceInterfaces.


        :param name: The name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def oper_updated_at(self):
        """Gets the oper_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The oper_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: object
        """
        return self._oper_updated_at

    @oper_updated_at.setter
    def oper_updated_at(self, oper_updated_at):
        """Sets the oper_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.


        :param oper_updated_at: The oper_updated_at of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: object
        """

        self._oper_updated_at = oper_updated_at

    @property
    def phy_address(self):
        """Gets the phy_address of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The phy_address of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._phy_address

    @phy_address.setter
    def phy_address(self, phy_address):
        """Sets the phy_address of this InlineResponse200109DraftManaDeviceInterfaces.


        :param phy_address: The phy_address of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._phy_address = phy_address

    @property
    def security_zone(self):
        """Gets the security_zone of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The security_zone of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._security_zone

    @security_zone.setter
    def security_zone(self, security_zone):
        """Sets the security_zone of this InlineResponse200109DraftManaDeviceInterfaces.


        :param security_zone: The security_zone of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._security_zone = security_zone

    @property
    def sfp_optical_strength(self):
        """Gets the sfp_optical_strength of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The sfp_optical_strength of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: list[object]
        """
        return self._sfp_optical_strength

    @sfp_optical_strength.setter
    def sfp_optical_strength(self, sfp_optical_strength):
        """Sets the sfp_optical_strength of this InlineResponse200109DraftManaDeviceInterfaces.


        :param sfp_optical_strength: The sfp_optical_strength of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: list[object]
        """

        self._sfp_optical_strength = sfp_optical_strength

    @property
    def speed_mbps(self):
        """Gets the speed_mbps of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The speed_mbps of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._speed_mbps

    @speed_mbps.setter
    def speed_mbps(self, speed_mbps):
        """Sets the speed_mbps of this InlineResponse200109DraftManaDeviceInterfaces.


        :param speed_mbps: The speed_mbps of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._speed_mbps = speed_mbps

    @property
    def subinterfaces(self):
        """Gets the subinterfaces of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The subinterfaces of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: list[object]
        """
        return self._subinterfaces

    @subinterfaces.setter
    def subinterfaces(self, subinterfaces):
        """Sets the subinterfaces of this InlineResponse200109DraftManaDeviceInterfaces.


        :param subinterfaces: The subinterfaces of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: list[object]
        """

        self._subinterfaces = subinterfaces

    @property
    def tcp_mss(self):
        """Gets the tcp_mss of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The tcp_mss of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._tcp_mss

    @tcp_mss.setter
    def tcp_mss(self, tcp_mss):
        """Sets the tcp_mss of this InlineResponse200109DraftManaDeviceInterfaces.


        :param tcp_mss: The tcp_mss of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._tcp_mss = tcp_mss

    @property
    def tcp_mss_v4(self):
        """Gets the tcp_mss_v4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The tcp_mss_v4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._tcp_mss_v4

    @tcp_mss_v4.setter
    def tcp_mss_v4(self, tcp_mss_v4):
        """Sets the tcp_mss_v4 of this InlineResponse200109DraftManaDeviceInterfaces.


        :param tcp_mss_v4: The tcp_mss_v4 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._tcp_mss_v4 = tcp_mss_v4

    @property
    def tcp_mss_v6(self):
        """Gets the tcp_mss_v6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The tcp_mss_v6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._tcp_mss_v6

    @tcp_mss_v6.setter
    def tcp_mss_v6(self, tcp_mss_v6):
        """Sets the tcp_mss_v6 of this InlineResponse200109DraftManaDeviceInterfaces.


        :param tcp_mss_v6: The tcp_mss_v6 of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._tcp_mss_v6 = tcp_mss_v6

    @property
    def type(self):
        """Gets the type of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The type of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineResponse200109DraftManaDeviceInterfaces.


        :param type: The type of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def up(self):
        """Gets the up of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The up of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._up

    @up.setter
    def up(self, up):
        """Sets the up of this InlineResponse200109DraftManaDeviceInterfaces.


        :param up: The up of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._up = up

    @property
    def vrf_function_id(self):
        """Gets the vrf_function_id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The vrf_function_id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._vrf_function_id

    @vrf_function_id.setter
    def vrf_function_id(self, vrf_function_id):
        """Sets the vrf_function_id of this InlineResponse200109DraftManaDeviceInterfaces.


        :param vrf_function_id: The vrf_function_id of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._vrf_function_id = vrf_function_id

    @property
    def vrf_name(self):
        """Gets the vrf_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501


        :return: The vrf_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :rtype: str
        """
        return self._vrf_name

    @vrf_name.setter
    def vrf_name(self, vrf_name):
        """Sets the vrf_name of this InlineResponse200109DraftManaDeviceInterfaces.


        :param vrf_name: The vrf_name of this InlineResponse200109DraftManaDeviceInterfaces.  # noqa: E501
        :type: str
        """

        self._vrf_name = vrf_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200109DraftManaDeviceInterfaces, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200109DraftManaDeviceInterfaces):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
