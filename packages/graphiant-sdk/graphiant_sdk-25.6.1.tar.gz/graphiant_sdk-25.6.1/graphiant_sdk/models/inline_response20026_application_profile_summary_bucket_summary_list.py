# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20026ApplicationProfileSummaryBucketSummaryList(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'assurance_bucket': 'str',
        'bucket_color': 'str',
        'bucket_name_to_display': 'str',
        'bucket_stats': 'InlineResponse20026ApplicationProfileSummaryBucketStats',
        'child_bucket_list': 'list[str]',
        'child_bucket_stats_list': 'list[InlineResponse20026ApplicationProfileSummaryChildBucketStatsList]',
        'is_root': 'str',
        'is_terminal': 'str',
        'parent_bucket_list': 'list[str]'
    }

    attribute_map = {
        'assurance_bucket': 'assuranceBucket',
        'bucket_color': 'bucketColor',
        'bucket_name_to_display': 'bucketNameToDisplay',
        'bucket_stats': 'bucketStats',
        'child_bucket_list': 'childBucketList',
        'child_bucket_stats_list': 'childBucketStatsList',
        'is_root': 'isRoot',
        'is_terminal': 'isTerminal',
        'parent_bucket_list': 'parentBucketList'
    }

    def __init__(self, assurance_bucket=None, bucket_color=None, bucket_name_to_display=None, bucket_stats=None, child_bucket_list=None, child_bucket_stats_list=None, is_root=None, is_terminal=None, parent_bucket_list=None):  # noqa: E501
        """InlineResponse20026ApplicationProfileSummaryBucketSummaryList - a model defined in Swagger"""  # noqa: E501
        self._assurance_bucket = None
        self._bucket_color = None
        self._bucket_name_to_display = None
        self._bucket_stats = None
        self._child_bucket_list = None
        self._child_bucket_stats_list = None
        self._is_root = None
        self._is_terminal = None
        self._parent_bucket_list = None
        self.discriminator = None
        if assurance_bucket is not None:
            self.assurance_bucket = assurance_bucket
        if bucket_color is not None:
            self.bucket_color = bucket_color
        if bucket_name_to_display is not None:
            self.bucket_name_to_display = bucket_name_to_display
        if bucket_stats is not None:
            self.bucket_stats = bucket_stats
        if child_bucket_list is not None:
            self.child_bucket_list = child_bucket_list
        if child_bucket_stats_list is not None:
            self.child_bucket_stats_list = child_bucket_stats_list
        if is_root is not None:
            self.is_root = is_root
        if is_terminal is not None:
            self.is_terminal = is_terminal
        if parent_bucket_list is not None:
            self.parent_bucket_list = parent_bucket_list

    @property
    def assurance_bucket(self):
        """Gets the assurance_bucket of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The assurance_bucket of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._assurance_bucket

    @assurance_bucket.setter
    def assurance_bucket(self, assurance_bucket):
        """Sets the assurance_bucket of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param assurance_bucket: The assurance_bucket of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: str
        """

        self._assurance_bucket = assurance_bucket

    @property
    def bucket_color(self):
        """Gets the bucket_color of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The bucket_color of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._bucket_color

    @bucket_color.setter
    def bucket_color(self, bucket_color):
        """Sets the bucket_color of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param bucket_color: The bucket_color of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: str
        """

        self._bucket_color = bucket_color

    @property
    def bucket_name_to_display(self):
        """Gets the bucket_name_to_display of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The bucket_name_to_display of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._bucket_name_to_display

    @bucket_name_to_display.setter
    def bucket_name_to_display(self, bucket_name_to_display):
        """Sets the bucket_name_to_display of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param bucket_name_to_display: The bucket_name_to_display of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: str
        """

        self._bucket_name_to_display = bucket_name_to_display

    @property
    def bucket_stats(self):
        """Gets the bucket_stats of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The bucket_stats of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: InlineResponse20026ApplicationProfileSummaryBucketStats
        """
        return self._bucket_stats

    @bucket_stats.setter
    def bucket_stats(self, bucket_stats):
        """Sets the bucket_stats of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param bucket_stats: The bucket_stats of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: InlineResponse20026ApplicationProfileSummaryBucketStats
        """

        self._bucket_stats = bucket_stats

    @property
    def child_bucket_list(self):
        """Gets the child_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The child_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: list[str]
        """
        return self._child_bucket_list

    @child_bucket_list.setter
    def child_bucket_list(self, child_bucket_list):
        """Sets the child_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param child_bucket_list: The child_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: list[str]
        """

        self._child_bucket_list = child_bucket_list

    @property
    def child_bucket_stats_list(self):
        """Gets the child_bucket_stats_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The child_bucket_stats_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: list[InlineResponse20026ApplicationProfileSummaryChildBucketStatsList]
        """
        return self._child_bucket_stats_list

    @child_bucket_stats_list.setter
    def child_bucket_stats_list(self, child_bucket_stats_list):
        """Sets the child_bucket_stats_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param child_bucket_stats_list: The child_bucket_stats_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: list[InlineResponse20026ApplicationProfileSummaryChildBucketStatsList]
        """

        self._child_bucket_stats_list = child_bucket_stats_list

    @property
    def is_root(self):
        """Gets the is_root of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The is_root of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._is_root

    @is_root.setter
    def is_root(self, is_root):
        """Sets the is_root of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param is_root: The is_root of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: str
        """

        self._is_root = is_root

    @property
    def is_terminal(self):
        """Gets the is_terminal of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The is_terminal of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: str
        """
        return self._is_terminal

    @is_terminal.setter
    def is_terminal(self, is_terminal):
        """Sets the is_terminal of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param is_terminal: The is_terminal of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: str
        """

        self._is_terminal = is_terminal

    @property
    def parent_bucket_list(self):
        """Gets the parent_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501


        :return: The parent_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :rtype: list[str]
        """
        return self._parent_bucket_list

    @parent_bucket_list.setter
    def parent_bucket_list(self, parent_bucket_list):
        """Sets the parent_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.


        :param parent_bucket_list: The parent_bucket_list of this InlineResponse20026ApplicationProfileSummaryBucketSummaryList.  # noqa: E501
        :type: list[str]
        """

        self._parent_bucket_list = parent_bucket_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20026ApplicationProfileSummaryBucketSummaryList, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20026ApplicationProfileSummaryBucketSummaryList):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
