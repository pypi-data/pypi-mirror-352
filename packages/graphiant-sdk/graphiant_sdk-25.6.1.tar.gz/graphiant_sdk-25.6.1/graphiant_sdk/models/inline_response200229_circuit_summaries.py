# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse200229CircuitSummaries(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'average_delay': 'str',
        'average_jitter': 'str',
        'average_link_down_speed_kbps': 'str',
        'average_link_up_speed_kbps': 'str',
        'average_loss': 'str',
        'avg_mos': 'str',
        'circuit_name': 'str',
        'config_link_down_speed_mbps': 'str',
        'config_link_up_speed_mbps': 'str',
        'connection_status': 'str',
        'current_link_down_speed_kbps': 'str',
        'current_link_up_speed_kbps': 'str',
        'delay': 'str',
        'jitter': 'str',
        'last_resort': 'str',
        'loss': 'str',
        'max_delay': 'str',
        'max_jitter': 'str',
        'max_loss': 'str',
        'max_mos': 'str',
        'min_delay': 'str',
        'min_jitter': 'str',
        'min_loss': 'str',
        'min_mos': 'str',
        'mos': 'str'
    }

    attribute_map = {
        'average_delay': 'averageDelay',
        'average_jitter': 'averageJitter',
        'average_link_down_speed_kbps': 'averageLinkDownSpeedKbps',
        'average_link_up_speed_kbps': 'averageLinkUpSpeedKbps',
        'average_loss': 'averageLoss',
        'avg_mos': 'avgMos',
        'circuit_name': 'circuitName',
        'config_link_down_speed_mbps': 'configLinkDownSpeedMbps',
        'config_link_up_speed_mbps': 'configLinkUpSpeedMbps',
        'connection_status': 'connectionStatus',
        'current_link_down_speed_kbps': 'currentLinkDownSpeedKbps',
        'current_link_up_speed_kbps': 'currentLinkUpSpeedKbps',
        'delay': 'delay',
        'jitter': 'jitter',
        'last_resort': 'lastResort',
        'loss': 'loss',
        'max_delay': 'maxDelay',
        'max_jitter': 'maxJitter',
        'max_loss': 'maxLoss',
        'max_mos': 'maxMos',
        'min_delay': 'minDelay',
        'min_jitter': 'minJitter',
        'min_loss': 'minLoss',
        'min_mos': 'minMos',
        'mos': 'mos'
    }

    def __init__(self, average_delay=None, average_jitter=None, average_link_down_speed_kbps=None, average_link_up_speed_kbps=None, average_loss=None, avg_mos=None, circuit_name=None, config_link_down_speed_mbps=None, config_link_up_speed_mbps=None, connection_status=None, current_link_down_speed_kbps=None, current_link_up_speed_kbps=None, delay=None, jitter=None, last_resort=None, loss=None, max_delay=None, max_jitter=None, max_loss=None, max_mos=None, min_delay=None, min_jitter=None, min_loss=None, min_mos=None, mos=None):  # noqa: E501
        """InlineResponse200229CircuitSummaries - a model defined in Swagger"""  # noqa: E501
        self._average_delay = None
        self._average_jitter = None
        self._average_link_down_speed_kbps = None
        self._average_link_up_speed_kbps = None
        self._average_loss = None
        self._avg_mos = None
        self._circuit_name = None
        self._config_link_down_speed_mbps = None
        self._config_link_up_speed_mbps = None
        self._connection_status = None
        self._current_link_down_speed_kbps = None
        self._current_link_up_speed_kbps = None
        self._delay = None
        self._jitter = None
        self._last_resort = None
        self._loss = None
        self._max_delay = None
        self._max_jitter = None
        self._max_loss = None
        self._max_mos = None
        self._min_delay = None
        self._min_jitter = None
        self._min_loss = None
        self._min_mos = None
        self._mos = None
        self.discriminator = None
        if average_delay is not None:
            self.average_delay = average_delay
        if average_jitter is not None:
            self.average_jitter = average_jitter
        if average_link_down_speed_kbps is not None:
            self.average_link_down_speed_kbps = average_link_down_speed_kbps
        if average_link_up_speed_kbps is not None:
            self.average_link_up_speed_kbps = average_link_up_speed_kbps
        if average_loss is not None:
            self.average_loss = average_loss
        if avg_mos is not None:
            self.avg_mos = avg_mos
        if circuit_name is not None:
            self.circuit_name = circuit_name
        if config_link_down_speed_mbps is not None:
            self.config_link_down_speed_mbps = config_link_down_speed_mbps
        if config_link_up_speed_mbps is not None:
            self.config_link_up_speed_mbps = config_link_up_speed_mbps
        if connection_status is not None:
            self.connection_status = connection_status
        if current_link_down_speed_kbps is not None:
            self.current_link_down_speed_kbps = current_link_down_speed_kbps
        if current_link_up_speed_kbps is not None:
            self.current_link_up_speed_kbps = current_link_up_speed_kbps
        if delay is not None:
            self.delay = delay
        if jitter is not None:
            self.jitter = jitter
        if last_resort is not None:
            self.last_resort = last_resort
        if loss is not None:
            self.loss = loss
        if max_delay is not None:
            self.max_delay = max_delay
        if max_jitter is not None:
            self.max_jitter = max_jitter
        if max_loss is not None:
            self.max_loss = max_loss
        if max_mos is not None:
            self.max_mos = max_mos
        if min_delay is not None:
            self.min_delay = min_delay
        if min_jitter is not None:
            self.min_jitter = min_jitter
        if min_loss is not None:
            self.min_loss = min_loss
        if min_mos is not None:
            self.min_mos = min_mos
        if mos is not None:
            self.mos = mos

    @property
    def average_delay(self):
        """Gets the average_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The average_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._average_delay

    @average_delay.setter
    def average_delay(self, average_delay):
        """Sets the average_delay of this InlineResponse200229CircuitSummaries.


        :param average_delay: The average_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._average_delay = average_delay

    @property
    def average_jitter(self):
        """Gets the average_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The average_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._average_jitter

    @average_jitter.setter
    def average_jitter(self, average_jitter):
        """Sets the average_jitter of this InlineResponse200229CircuitSummaries.


        :param average_jitter: The average_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._average_jitter = average_jitter

    @property
    def average_link_down_speed_kbps(self):
        """Gets the average_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The average_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._average_link_down_speed_kbps

    @average_link_down_speed_kbps.setter
    def average_link_down_speed_kbps(self, average_link_down_speed_kbps):
        """Sets the average_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.


        :param average_link_down_speed_kbps: The average_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._average_link_down_speed_kbps = average_link_down_speed_kbps

    @property
    def average_link_up_speed_kbps(self):
        """Gets the average_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The average_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._average_link_up_speed_kbps

    @average_link_up_speed_kbps.setter
    def average_link_up_speed_kbps(self, average_link_up_speed_kbps):
        """Sets the average_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.


        :param average_link_up_speed_kbps: The average_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._average_link_up_speed_kbps = average_link_up_speed_kbps

    @property
    def average_loss(self):
        """Gets the average_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The average_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._average_loss

    @average_loss.setter
    def average_loss(self, average_loss):
        """Sets the average_loss of this InlineResponse200229CircuitSummaries.


        :param average_loss: The average_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._average_loss = average_loss

    @property
    def avg_mos(self):
        """Gets the avg_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The avg_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._avg_mos

    @avg_mos.setter
    def avg_mos(self, avg_mos):
        """Sets the avg_mos of this InlineResponse200229CircuitSummaries.


        :param avg_mos: The avg_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._avg_mos = avg_mos

    @property
    def circuit_name(self):
        """Gets the circuit_name of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The circuit_name of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._circuit_name

    @circuit_name.setter
    def circuit_name(self, circuit_name):
        """Sets the circuit_name of this InlineResponse200229CircuitSummaries.


        :param circuit_name: The circuit_name of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._circuit_name = circuit_name

    @property
    def config_link_down_speed_mbps(self):
        """Gets the config_link_down_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The config_link_down_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._config_link_down_speed_mbps

    @config_link_down_speed_mbps.setter
    def config_link_down_speed_mbps(self, config_link_down_speed_mbps):
        """Sets the config_link_down_speed_mbps of this InlineResponse200229CircuitSummaries.


        :param config_link_down_speed_mbps: The config_link_down_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._config_link_down_speed_mbps = config_link_down_speed_mbps

    @property
    def config_link_up_speed_mbps(self):
        """Gets the config_link_up_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The config_link_up_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._config_link_up_speed_mbps

    @config_link_up_speed_mbps.setter
    def config_link_up_speed_mbps(self, config_link_up_speed_mbps):
        """Sets the config_link_up_speed_mbps of this InlineResponse200229CircuitSummaries.


        :param config_link_up_speed_mbps: The config_link_up_speed_mbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._config_link_up_speed_mbps = config_link_up_speed_mbps

    @property
    def connection_status(self):
        """Gets the connection_status of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The connection_status of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._connection_status

    @connection_status.setter
    def connection_status(self, connection_status):
        """Sets the connection_status of this InlineResponse200229CircuitSummaries.


        :param connection_status: The connection_status of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._connection_status = connection_status

    @property
    def current_link_down_speed_kbps(self):
        """Gets the current_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The current_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._current_link_down_speed_kbps

    @current_link_down_speed_kbps.setter
    def current_link_down_speed_kbps(self, current_link_down_speed_kbps):
        """Sets the current_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.


        :param current_link_down_speed_kbps: The current_link_down_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._current_link_down_speed_kbps = current_link_down_speed_kbps

    @property
    def current_link_up_speed_kbps(self):
        """Gets the current_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The current_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._current_link_up_speed_kbps

    @current_link_up_speed_kbps.setter
    def current_link_up_speed_kbps(self, current_link_up_speed_kbps):
        """Sets the current_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.


        :param current_link_up_speed_kbps: The current_link_up_speed_kbps of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._current_link_up_speed_kbps = current_link_up_speed_kbps

    @property
    def delay(self):
        """Gets the delay of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._delay

    @delay.setter
    def delay(self, delay):
        """Sets the delay of this InlineResponse200229CircuitSummaries.


        :param delay: The delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._delay = delay

    @property
    def jitter(self):
        """Gets the jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._jitter

    @jitter.setter
    def jitter(self, jitter):
        """Sets the jitter of this InlineResponse200229CircuitSummaries.


        :param jitter: The jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._jitter = jitter

    @property
    def last_resort(self):
        """Gets the last_resort of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The last_resort of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._last_resort

    @last_resort.setter
    def last_resort(self, last_resort):
        """Sets the last_resort of this InlineResponse200229CircuitSummaries.


        :param last_resort: The last_resort of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._last_resort = last_resort

    @property
    def loss(self):
        """Gets the loss of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._loss

    @loss.setter
    def loss(self, loss):
        """Sets the loss of this InlineResponse200229CircuitSummaries.


        :param loss: The loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._loss = loss

    @property
    def max_delay(self):
        """Gets the max_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The max_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._max_delay

    @max_delay.setter
    def max_delay(self, max_delay):
        """Sets the max_delay of this InlineResponse200229CircuitSummaries.


        :param max_delay: The max_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._max_delay = max_delay

    @property
    def max_jitter(self):
        """Gets the max_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The max_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._max_jitter

    @max_jitter.setter
    def max_jitter(self, max_jitter):
        """Sets the max_jitter of this InlineResponse200229CircuitSummaries.


        :param max_jitter: The max_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._max_jitter = max_jitter

    @property
    def max_loss(self):
        """Gets the max_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The max_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._max_loss

    @max_loss.setter
    def max_loss(self, max_loss):
        """Sets the max_loss of this InlineResponse200229CircuitSummaries.


        :param max_loss: The max_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._max_loss = max_loss

    @property
    def max_mos(self):
        """Gets the max_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The max_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._max_mos

    @max_mos.setter
    def max_mos(self, max_mos):
        """Sets the max_mos of this InlineResponse200229CircuitSummaries.


        :param max_mos: The max_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._max_mos = max_mos

    @property
    def min_delay(self):
        """Gets the min_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The min_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._min_delay

    @min_delay.setter
    def min_delay(self, min_delay):
        """Sets the min_delay of this InlineResponse200229CircuitSummaries.


        :param min_delay: The min_delay of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._min_delay = min_delay

    @property
    def min_jitter(self):
        """Gets the min_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The min_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._min_jitter

    @min_jitter.setter
    def min_jitter(self, min_jitter):
        """Sets the min_jitter of this InlineResponse200229CircuitSummaries.


        :param min_jitter: The min_jitter of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._min_jitter = min_jitter

    @property
    def min_loss(self):
        """Gets the min_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The min_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._min_loss

    @min_loss.setter
    def min_loss(self, min_loss):
        """Sets the min_loss of this InlineResponse200229CircuitSummaries.


        :param min_loss: The min_loss of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._min_loss = min_loss

    @property
    def min_mos(self):
        """Gets the min_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The min_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._min_mos

    @min_mos.setter
    def min_mos(self, min_mos):
        """Sets the min_mos of this InlineResponse200229CircuitSummaries.


        :param min_mos: The min_mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._min_mos = min_mos

    @property
    def mos(self):
        """Gets the mos of this InlineResponse200229CircuitSummaries.  # noqa: E501


        :return: The mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :rtype: str
        """
        return self._mos

    @mos.setter
    def mos(self, mos):
        """Sets the mos of this InlineResponse200229CircuitSummaries.


        :param mos: The mos of this InlineResponse200229CircuitSummaries.  # noqa: E501
        :type: str
        """

        self._mos = mos

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200229CircuitSummaries, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200229CircuitSummaries):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
