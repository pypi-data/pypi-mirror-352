# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse20037Session(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'app_name': 'str',
        'bucket': 'str',
        'client_endpoint': 'InlineResponse20037SessionClientEndpoint',
        'client_flex_algo': 'str',
        'client_ip': 'str',
        'client_links': 'list[InlineResponse20037SessionClientLinks]',
        'first_seen_ts': 'V1devicesbringuptokenValidTillTs',
        'lan_segment': 'list[str]',
        'last_seen_ts': 'V1devicesbringuptokenValidTillTs',
        'local_dia_links': 'list[InlineResponse20037SessionLocalDiaLinks]',
        'pop_links': 'list[InlineResponse20037SessionPopLinks]',
        'remote_dia_links': 'list[InlineResponse20037SessionLocalDiaLinks]',
        'risk_status': 'str',
        'server_endpoint': 'InlineResponse20037SessionClientEndpoint',
        'server_flex_algos': 'list[str]',
        'server_ip': 'str',
        'server_links': 'list[InlineResponse20037SessionClientLinks]',
        'server_port': 'str',
        'session_id': 'str',
        'sla': 'str',
        'sla_class': 'str'
    }

    attribute_map = {
        'app_name': 'appName',
        'bucket': 'bucket',
        'client_endpoint': 'clientEndpoint',
        'client_flex_algo': 'clientFlexAlgo',
        'client_ip': 'clientIp',
        'client_links': 'clientLinks',
        'first_seen_ts': 'firstSeenTs',
        'lan_segment': 'lanSegment',
        'last_seen_ts': 'lastSeenTs',
        'local_dia_links': 'localDiaLinks',
        'pop_links': 'popLinks',
        'remote_dia_links': 'remoteDiaLinks',
        'risk_status': 'riskStatus',
        'server_endpoint': 'serverEndpoint',
        'server_flex_algos': 'serverFlexAlgos',
        'server_ip': 'serverIp',
        'server_links': 'serverLinks',
        'server_port': 'serverPort',
        'session_id': 'sessionId',
        'sla': 'sla',
        'sla_class': 'slaClass'
    }

    def __init__(self, app_name=None, bucket=None, client_endpoint=None, client_flex_algo=None, client_ip=None, client_links=None, first_seen_ts=None, lan_segment=None, last_seen_ts=None, local_dia_links=None, pop_links=None, remote_dia_links=None, risk_status=None, server_endpoint=None, server_flex_algos=None, server_ip=None, server_links=None, server_port=None, session_id=None, sla=None, sla_class=None):  # noqa: E501
        """InlineResponse20037Session - a model defined in Swagger"""  # noqa: E501
        self._app_name = None
        self._bucket = None
        self._client_endpoint = None
        self._client_flex_algo = None
        self._client_ip = None
        self._client_links = None
        self._first_seen_ts = None
        self._lan_segment = None
        self._last_seen_ts = None
        self._local_dia_links = None
        self._pop_links = None
        self._remote_dia_links = None
        self._risk_status = None
        self._server_endpoint = None
        self._server_flex_algos = None
        self._server_ip = None
        self._server_links = None
        self._server_port = None
        self._session_id = None
        self._sla = None
        self._sla_class = None
        self.discriminator = None
        if app_name is not None:
            self.app_name = app_name
        if bucket is not None:
            self.bucket = bucket
        if client_endpoint is not None:
            self.client_endpoint = client_endpoint
        if client_flex_algo is not None:
            self.client_flex_algo = client_flex_algo
        if client_ip is not None:
            self.client_ip = client_ip
        if client_links is not None:
            self.client_links = client_links
        if first_seen_ts is not None:
            self.first_seen_ts = first_seen_ts
        if lan_segment is not None:
            self.lan_segment = lan_segment
        if last_seen_ts is not None:
            self.last_seen_ts = last_seen_ts
        if local_dia_links is not None:
            self.local_dia_links = local_dia_links
        if pop_links is not None:
            self.pop_links = pop_links
        if remote_dia_links is not None:
            self.remote_dia_links = remote_dia_links
        if risk_status is not None:
            self.risk_status = risk_status
        if server_endpoint is not None:
            self.server_endpoint = server_endpoint
        if server_flex_algos is not None:
            self.server_flex_algos = server_flex_algos
        if server_ip is not None:
            self.server_ip = server_ip
        if server_links is not None:
            self.server_links = server_links
        if server_port is not None:
            self.server_port = server_port
        if session_id is not None:
            self.session_id = session_id
        if sla is not None:
            self.sla = sla
        if sla_class is not None:
            self.sla_class = sla_class

    @property
    def app_name(self):
        """Gets the app_name of this InlineResponse20037Session.  # noqa: E501


        :return: The app_name of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._app_name

    @app_name.setter
    def app_name(self, app_name):
        """Sets the app_name of this InlineResponse20037Session.


        :param app_name: The app_name of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._app_name = app_name

    @property
    def bucket(self):
        """Gets the bucket of this InlineResponse20037Session.  # noqa: E501


        :return: The bucket of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._bucket

    @bucket.setter
    def bucket(self, bucket):
        """Sets the bucket of this InlineResponse20037Session.


        :param bucket: The bucket of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._bucket = bucket

    @property
    def client_endpoint(self):
        """Gets the client_endpoint of this InlineResponse20037Session.  # noqa: E501


        :return: The client_endpoint of this InlineResponse20037Session.  # noqa: E501
        :rtype: InlineResponse20037SessionClientEndpoint
        """
        return self._client_endpoint

    @client_endpoint.setter
    def client_endpoint(self, client_endpoint):
        """Sets the client_endpoint of this InlineResponse20037Session.


        :param client_endpoint: The client_endpoint of this InlineResponse20037Session.  # noqa: E501
        :type: InlineResponse20037SessionClientEndpoint
        """

        self._client_endpoint = client_endpoint

    @property
    def client_flex_algo(self):
        """Gets the client_flex_algo of this InlineResponse20037Session.  # noqa: E501


        :return: The client_flex_algo of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._client_flex_algo

    @client_flex_algo.setter
    def client_flex_algo(self, client_flex_algo):
        """Sets the client_flex_algo of this InlineResponse20037Session.


        :param client_flex_algo: The client_flex_algo of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._client_flex_algo = client_flex_algo

    @property
    def client_ip(self):
        """Gets the client_ip of this InlineResponse20037Session.  # noqa: E501


        :return: The client_ip of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._client_ip

    @client_ip.setter
    def client_ip(self, client_ip):
        """Sets the client_ip of this InlineResponse20037Session.


        :param client_ip: The client_ip of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._client_ip = client_ip

    @property
    def client_links(self):
        """Gets the client_links of this InlineResponse20037Session.  # noqa: E501


        :return: The client_links of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[InlineResponse20037SessionClientLinks]
        """
        return self._client_links

    @client_links.setter
    def client_links(self, client_links):
        """Sets the client_links of this InlineResponse20037Session.


        :param client_links: The client_links of this InlineResponse20037Session.  # noqa: E501
        :type: list[InlineResponse20037SessionClientLinks]
        """

        self._client_links = client_links

    @property
    def first_seen_ts(self):
        """Gets the first_seen_ts of this InlineResponse20037Session.  # noqa: E501


        :return: The first_seen_ts of this InlineResponse20037Session.  # noqa: E501
        :rtype: V1devicesbringuptokenValidTillTs
        """
        return self._first_seen_ts

    @first_seen_ts.setter
    def first_seen_ts(self, first_seen_ts):
        """Sets the first_seen_ts of this InlineResponse20037Session.


        :param first_seen_ts: The first_seen_ts of this InlineResponse20037Session.  # noqa: E501
        :type: V1devicesbringuptokenValidTillTs
        """

        self._first_seen_ts = first_seen_ts

    @property
    def lan_segment(self):
        """Gets the lan_segment of this InlineResponse20037Session.  # noqa: E501


        :return: The lan_segment of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[str]
        """
        return self._lan_segment

    @lan_segment.setter
    def lan_segment(self, lan_segment):
        """Sets the lan_segment of this InlineResponse20037Session.


        :param lan_segment: The lan_segment of this InlineResponse20037Session.  # noqa: E501
        :type: list[str]
        """

        self._lan_segment = lan_segment

    @property
    def last_seen_ts(self):
        """Gets the last_seen_ts of this InlineResponse20037Session.  # noqa: E501


        :return: The last_seen_ts of this InlineResponse20037Session.  # noqa: E501
        :rtype: V1devicesbringuptokenValidTillTs
        """
        return self._last_seen_ts

    @last_seen_ts.setter
    def last_seen_ts(self, last_seen_ts):
        """Sets the last_seen_ts of this InlineResponse20037Session.


        :param last_seen_ts: The last_seen_ts of this InlineResponse20037Session.  # noqa: E501
        :type: V1devicesbringuptokenValidTillTs
        """

        self._last_seen_ts = last_seen_ts

    @property
    def local_dia_links(self):
        """Gets the local_dia_links of this InlineResponse20037Session.  # noqa: E501


        :return: The local_dia_links of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[InlineResponse20037SessionLocalDiaLinks]
        """
        return self._local_dia_links

    @local_dia_links.setter
    def local_dia_links(self, local_dia_links):
        """Sets the local_dia_links of this InlineResponse20037Session.


        :param local_dia_links: The local_dia_links of this InlineResponse20037Session.  # noqa: E501
        :type: list[InlineResponse20037SessionLocalDiaLinks]
        """

        self._local_dia_links = local_dia_links

    @property
    def pop_links(self):
        """Gets the pop_links of this InlineResponse20037Session.  # noqa: E501


        :return: The pop_links of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[InlineResponse20037SessionPopLinks]
        """
        return self._pop_links

    @pop_links.setter
    def pop_links(self, pop_links):
        """Sets the pop_links of this InlineResponse20037Session.


        :param pop_links: The pop_links of this InlineResponse20037Session.  # noqa: E501
        :type: list[InlineResponse20037SessionPopLinks]
        """

        self._pop_links = pop_links

    @property
    def remote_dia_links(self):
        """Gets the remote_dia_links of this InlineResponse20037Session.  # noqa: E501


        :return: The remote_dia_links of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[InlineResponse20037SessionLocalDiaLinks]
        """
        return self._remote_dia_links

    @remote_dia_links.setter
    def remote_dia_links(self, remote_dia_links):
        """Sets the remote_dia_links of this InlineResponse20037Session.


        :param remote_dia_links: The remote_dia_links of this InlineResponse20037Session.  # noqa: E501
        :type: list[InlineResponse20037SessionLocalDiaLinks]
        """

        self._remote_dia_links = remote_dia_links

    @property
    def risk_status(self):
        """Gets the risk_status of this InlineResponse20037Session.  # noqa: E501


        :return: The risk_status of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._risk_status

    @risk_status.setter
    def risk_status(self, risk_status):
        """Sets the risk_status of this InlineResponse20037Session.


        :param risk_status: The risk_status of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._risk_status = risk_status

    @property
    def server_endpoint(self):
        """Gets the server_endpoint of this InlineResponse20037Session.  # noqa: E501


        :return: The server_endpoint of this InlineResponse20037Session.  # noqa: E501
        :rtype: InlineResponse20037SessionClientEndpoint
        """
        return self._server_endpoint

    @server_endpoint.setter
    def server_endpoint(self, server_endpoint):
        """Sets the server_endpoint of this InlineResponse20037Session.


        :param server_endpoint: The server_endpoint of this InlineResponse20037Session.  # noqa: E501
        :type: InlineResponse20037SessionClientEndpoint
        """

        self._server_endpoint = server_endpoint

    @property
    def server_flex_algos(self):
        """Gets the server_flex_algos of this InlineResponse20037Session.  # noqa: E501


        :return: The server_flex_algos of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[str]
        """
        return self._server_flex_algos

    @server_flex_algos.setter
    def server_flex_algos(self, server_flex_algos):
        """Sets the server_flex_algos of this InlineResponse20037Session.


        :param server_flex_algos: The server_flex_algos of this InlineResponse20037Session.  # noqa: E501
        :type: list[str]
        """

        self._server_flex_algos = server_flex_algos

    @property
    def server_ip(self):
        """Gets the server_ip of this InlineResponse20037Session.  # noqa: E501


        :return: The server_ip of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._server_ip

    @server_ip.setter
    def server_ip(self, server_ip):
        """Sets the server_ip of this InlineResponse20037Session.


        :param server_ip: The server_ip of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._server_ip = server_ip

    @property
    def server_links(self):
        """Gets the server_links of this InlineResponse20037Session.  # noqa: E501


        :return: The server_links of this InlineResponse20037Session.  # noqa: E501
        :rtype: list[InlineResponse20037SessionClientLinks]
        """
        return self._server_links

    @server_links.setter
    def server_links(self, server_links):
        """Sets the server_links of this InlineResponse20037Session.


        :param server_links: The server_links of this InlineResponse20037Session.  # noqa: E501
        :type: list[InlineResponse20037SessionClientLinks]
        """

        self._server_links = server_links

    @property
    def server_port(self):
        """Gets the server_port of this InlineResponse20037Session.  # noqa: E501


        :return: The server_port of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._server_port

    @server_port.setter
    def server_port(self, server_port):
        """Sets the server_port of this InlineResponse20037Session.


        :param server_port: The server_port of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._server_port = server_port

    @property
    def session_id(self):
        """Gets the session_id of this InlineResponse20037Session.  # noqa: E501


        :return: The session_id of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this InlineResponse20037Session.


        :param session_id: The session_id of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._session_id = session_id

    @property
    def sla(self):
        """Gets the sla of this InlineResponse20037Session.  # noqa: E501


        :return: The sla of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._sla

    @sla.setter
    def sla(self, sla):
        """Sets the sla of this InlineResponse20037Session.


        :param sla: The sla of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._sla = sla

    @property
    def sla_class(self):
        """Gets the sla_class of this InlineResponse20037Session.  # noqa: E501


        :return: The sla_class of this InlineResponse20037Session.  # noqa: E501
        :rtype: str
        """
        return self._sla_class

    @sla_class.setter
    def sla_class(self, sla_class):
        """Sets the sla_class of this InlineResponse20037Session.


        :param sla_class: The sla_class of this InlineResponse20037Session.  # noqa: E501
        :type: str
        """

        self._sla_class = sla_class

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20037Session, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20037Session):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
