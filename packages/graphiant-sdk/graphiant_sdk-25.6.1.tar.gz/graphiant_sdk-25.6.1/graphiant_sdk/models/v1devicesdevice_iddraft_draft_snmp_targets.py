# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1devicesdeviceIddraftDraftSnmpTargets(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'community': 'str',
        'id': 'str',
        'name': 'str',
        'notify_filter_profile': 'str',
        'notify_type': 'str',
        'source_ip': 'str',
        'target_ip': 'str',
        'target_type': 'str',
        'usm_security_level': 'str',
        'usm_user_name': 'str',
        'vrf_name': 'str'
    }

    attribute_map = {
        'community': 'community',
        'id': 'id',
        'name': 'name',
        'notify_filter_profile': 'notifyFilterProfile',
        'notify_type': 'notifyType',
        'source_ip': 'sourceIp',
        'target_ip': 'targetIp',
        'target_type': 'targetType',
        'usm_security_level': 'usmSecurityLevel',
        'usm_user_name': 'usmUserName',
        'vrf_name': 'vrfName'
    }

    def __init__(self, community=None, id=None, name=None, notify_filter_profile=None, notify_type=None, source_ip=None, target_ip=None, target_type=None, usm_security_level=None, usm_user_name=None, vrf_name=None):  # noqa: E501
        """V1devicesdeviceIddraftDraftSnmpTargets - a model defined in Swagger"""  # noqa: E501
        self._community = None
        self._id = None
        self._name = None
        self._notify_filter_profile = None
        self._notify_type = None
        self._source_ip = None
        self._target_ip = None
        self._target_type = None
        self._usm_security_level = None
        self._usm_user_name = None
        self._vrf_name = None
        self.discriminator = None
        if community is not None:
            self.community = community
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if notify_filter_profile is not None:
            self.notify_filter_profile = notify_filter_profile
        if notify_type is not None:
            self.notify_type = notify_type
        if source_ip is not None:
            self.source_ip = source_ip
        if target_ip is not None:
            self.target_ip = target_ip
        if target_type is not None:
            self.target_type = target_type
        if usm_security_level is not None:
            self.usm_security_level = usm_security_level
        if usm_user_name is not None:
            self.usm_user_name = usm_user_name
        if vrf_name is not None:
            self.vrf_name = vrf_name

    @property
    def community(self):
        """Gets the community of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The community of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._community

    @community.setter
    def community(self, community):
        """Sets the community of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param community: The community of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._community = community

    @property
    def id(self):
        """Gets the id of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The id of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param id: The id of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param name: The name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def notify_filter_profile(self):
        """Gets the notify_filter_profile of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The notify_filter_profile of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._notify_filter_profile

    @notify_filter_profile.setter
    def notify_filter_profile(self, notify_filter_profile):
        """Sets the notify_filter_profile of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param notify_filter_profile: The notify_filter_profile of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._notify_filter_profile = notify_filter_profile

    @property
    def notify_type(self):
        """Gets the notify_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The notify_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._notify_type

    @notify_type.setter
    def notify_type(self, notify_type):
        """Sets the notify_type of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param notify_type: The notify_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._notify_type = notify_type

    @property
    def source_ip(self):
        """Gets the source_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The source_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._source_ip

    @source_ip.setter
    def source_ip(self, source_ip):
        """Sets the source_ip of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param source_ip: The source_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._source_ip = source_ip

    @property
    def target_ip(self):
        """Gets the target_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The target_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._target_ip

    @target_ip.setter
    def target_ip(self, target_ip):
        """Sets the target_ip of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param target_ip: The target_ip of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._target_ip = target_ip

    @property
    def target_type(self):
        """Gets the target_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The target_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._target_type

    @target_type.setter
    def target_type(self, target_type):
        """Sets the target_type of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param target_type: The target_type of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._target_type = target_type

    @property
    def usm_security_level(self):
        """Gets the usm_security_level of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The usm_security_level of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._usm_security_level

    @usm_security_level.setter
    def usm_security_level(self, usm_security_level):
        """Sets the usm_security_level of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param usm_security_level: The usm_security_level of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._usm_security_level = usm_security_level

    @property
    def usm_user_name(self):
        """Gets the usm_user_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The usm_user_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._usm_user_name

    @usm_user_name.setter
    def usm_user_name(self, usm_user_name):
        """Sets the usm_user_name of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param usm_user_name: The usm_user_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._usm_user_name = usm_user_name

    @property
    def vrf_name(self):
        """Gets the vrf_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501


        :return: The vrf_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :rtype: str
        """
        return self._vrf_name

    @vrf_name.setter
    def vrf_name(self, vrf_name):
        """Sets the vrf_name of this V1devicesdeviceIddraftDraftSnmpTargets.


        :param vrf_name: The vrf_name of this V1devicesdeviceIddraftDraftSnmpTargets.  # noqa: E501
        :type: str
        """

        self._vrf_name = vrf_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1devicesdeviceIddraftDraftSnmpTargets, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1devicesdeviceIddraftDraftSnmpTargets):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
