# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'description': 'str',
        'destination_network': 'str',
        'destination_network_list': 'str',
        'destination_port': 'str',
        'destination_port_list': 'str',
        'id': 'str',
        'ip_protocol': 'str',
        'name': 'str',
        'source_network': 'str',
        'source_network_list': 'str',
        'source_port': 'str',
        'source_port_list': 'str'
    }

    attribute_map = {
        'description': 'description',
        'destination_network': 'destinationNetwork',
        'destination_network_list': 'destinationNetworkList',
        'destination_port': 'destinationPort',
        'destination_port_list': 'destinationPortList',
        'id': 'id',
        'ip_protocol': 'ipProtocol',
        'name': 'name',
        'source_network': 'sourceNetwork',
        'source_network_list': 'sourceNetworkList',
        'source_port': 'sourcePort',
        'source_port_list': 'sourcePortList'
    }

    def __init__(self, description=None, destination_network=None, destination_network_list=None, destination_port=None, destination_port_list=None, id=None, ip_protocol=None, name=None, source_network=None, source_network_list=None, source_port=None, source_port_list=None):  # noqa: E501
        """V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications - a model defined in Swagger"""  # noqa: E501
        self._description = None
        self._destination_network = None
        self._destination_network_list = None
        self._destination_port = None
        self._destination_port_list = None
        self._id = None
        self._ip_protocol = None
        self._name = None
        self._source_network = None
        self._source_network_list = None
        self._source_port = None
        self._source_port_list = None
        self.discriminator = None
        if description is not None:
            self.description = description
        if destination_network is not None:
            self.destination_network = destination_network
        if destination_network_list is not None:
            self.destination_network_list = destination_network_list
        if destination_port is not None:
            self.destination_port = destination_port
        if destination_port_list is not None:
            self.destination_port_list = destination_port_list
        if id is not None:
            self.id = id
        if ip_protocol is not None:
            self.ip_protocol = ip_protocol
        if name is not None:
            self.name = name
        if source_network is not None:
            self.source_network = source_network
        if source_network_list is not None:
            self.source_network_list = source_network_list
        if source_port is not None:
            self.source_port = source_port
        if source_port_list is not None:
            self.source_port_list = source_port_list

    @property
    def description(self):
        """Gets the description of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The description of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param description: The description of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def destination_network(self):
        """Gets the destination_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The destination_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._destination_network

    @destination_network.setter
    def destination_network(self, destination_network):
        """Sets the destination_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param destination_network: The destination_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._destination_network = destination_network

    @property
    def destination_network_list(self):
        """Gets the destination_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The destination_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._destination_network_list

    @destination_network_list.setter
    def destination_network_list(self, destination_network_list):
        """Sets the destination_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param destination_network_list: The destination_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._destination_network_list = destination_network_list

    @property
    def destination_port(self):
        """Gets the destination_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The destination_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._destination_port

    @destination_port.setter
    def destination_port(self, destination_port):
        """Sets the destination_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param destination_port: The destination_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._destination_port = destination_port

    @property
    def destination_port_list(self):
        """Gets the destination_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The destination_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._destination_port_list

    @destination_port_list.setter
    def destination_port_list(self, destination_port_list):
        """Sets the destination_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param destination_port_list: The destination_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._destination_port_list = destination_port_list

    @property
    def id(self):
        """Gets the id of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The id of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param id: The id of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def ip_protocol(self):
        """Gets the ip_protocol of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The ip_protocol of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._ip_protocol

    @ip_protocol.setter
    def ip_protocol(self, ip_protocol):
        """Sets the ip_protocol of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param ip_protocol: The ip_protocol of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._ip_protocol = ip_protocol

    @property
    def name(self):
        """Gets the name of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The name of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param name: The name of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def source_network(self):
        """Gets the source_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The source_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._source_network

    @source_network.setter
    def source_network(self, source_network):
        """Sets the source_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param source_network: The source_network of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._source_network = source_network

    @property
    def source_network_list(self):
        """Gets the source_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The source_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._source_network_list

    @source_network_list.setter
    def source_network_list(self, source_network_list):
        """Sets the source_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param source_network_list: The source_network_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._source_network_list = source_network_list

    @property
    def source_port(self):
        """Gets the source_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The source_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._source_port

    @source_port.setter
    def source_port(self, source_port):
        """Sets the source_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param source_port: The source_port of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._source_port = source_port

    @property
    def source_port_list(self):
        """Gets the source_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501


        :return: The source_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :rtype: str
        """
        return self._source_port_list

    @source_port_list.setter
    def source_port_list(self, source_port_list):
        """Sets the source_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.


        :param source_port_list: The source_port_list of this V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications.  # noqa: E501
        :type: str
        """

        self._source_port_list = source_port_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1devicesdeviceIddraftDraftTrafficPolicyDpiApplications):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
