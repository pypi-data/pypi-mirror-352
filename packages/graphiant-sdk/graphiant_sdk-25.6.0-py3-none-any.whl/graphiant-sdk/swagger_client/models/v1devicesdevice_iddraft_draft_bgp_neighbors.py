# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class V1devicesdeviceIddraftDraftBgpNeighbors(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'address_families': 'list[object]',
        'allow_as_in': 'str',
        'as_override': 'str',
        'bfd': 'object',
        'bfd_neighbor': 'object',
        'bgp_type': 'str',
        'default_originate': 'str',
        'enabled': 'str',
        'hold_timer': 'str',
        'id': 'str',
        'keepalive_timer': 'str',
        'local_address': 'str',
        'local_interface': 'str',
        'max_prefix': 'str',
        'md5_password': 'str',
        'multi_hop': 'str',
        'peer_asn': 'str',
        'remote_address': 'str',
        'remove_private_as': 'str',
        'send_community': 'str',
        'state': 'str',
        'time_since_last_oper_change': 'object',
        'up': 'str'
    }

    attribute_map = {
        'address_families': 'addressFamilies',
        'allow_as_in': 'allowAsIn',
        'as_override': 'asOverride',
        'bfd': 'bfd',
        'bfd_neighbor': 'bfdNeighbor',
        'bgp_type': 'bgpType',
        'default_originate': 'defaultOriginate',
        'enabled': 'enabled',
        'hold_timer': 'holdTimer',
        'id': 'id',
        'keepalive_timer': 'keepaliveTimer',
        'local_address': 'localAddress',
        'local_interface': 'localInterface',
        'max_prefix': 'maxPrefix',
        'md5_password': 'md5Password',
        'multi_hop': 'multiHop',
        'peer_asn': 'peerAsn',
        'remote_address': 'remoteAddress',
        'remove_private_as': 'removePrivateAs',
        'send_community': 'sendCommunity',
        'state': 'state',
        'time_since_last_oper_change': 'timeSinceLastOperChange',
        'up': 'up'
    }

    def __init__(self, address_families=None, allow_as_in=None, as_override=None, bfd=None, bfd_neighbor=None, bgp_type=None, default_originate=None, enabled=None, hold_timer=None, id=None, keepalive_timer=None, local_address=None, local_interface=None, max_prefix=None, md5_password=None, multi_hop=None, peer_asn=None, remote_address=None, remove_private_as=None, send_community=None, state=None, time_since_last_oper_change=None, up=None):  # noqa: E501
        """V1devicesdeviceIddraftDraftBgpNeighbors - a model defined in Swagger"""  # noqa: E501
        self._address_families = None
        self._allow_as_in = None
        self._as_override = None
        self._bfd = None
        self._bfd_neighbor = None
        self._bgp_type = None
        self._default_originate = None
        self._enabled = None
        self._hold_timer = None
        self._id = None
        self._keepalive_timer = None
        self._local_address = None
        self._local_interface = None
        self._max_prefix = None
        self._md5_password = None
        self._multi_hop = None
        self._peer_asn = None
        self._remote_address = None
        self._remove_private_as = None
        self._send_community = None
        self._state = None
        self._time_since_last_oper_change = None
        self._up = None
        self.discriminator = None
        if address_families is not None:
            self.address_families = address_families
        if allow_as_in is not None:
            self.allow_as_in = allow_as_in
        if as_override is not None:
            self.as_override = as_override
        if bfd is not None:
            self.bfd = bfd
        if bfd_neighbor is not None:
            self.bfd_neighbor = bfd_neighbor
        if bgp_type is not None:
            self.bgp_type = bgp_type
        if default_originate is not None:
            self.default_originate = default_originate
        if enabled is not None:
            self.enabled = enabled
        if hold_timer is not None:
            self.hold_timer = hold_timer
        if id is not None:
            self.id = id
        if keepalive_timer is not None:
            self.keepalive_timer = keepalive_timer
        if local_address is not None:
            self.local_address = local_address
        if local_interface is not None:
            self.local_interface = local_interface
        if max_prefix is not None:
            self.max_prefix = max_prefix
        if md5_password is not None:
            self.md5_password = md5_password
        if multi_hop is not None:
            self.multi_hop = multi_hop
        if peer_asn is not None:
            self.peer_asn = peer_asn
        if remote_address is not None:
            self.remote_address = remote_address
        if remove_private_as is not None:
            self.remove_private_as = remove_private_as
        if send_community is not None:
            self.send_community = send_community
        if state is not None:
            self.state = state
        if time_since_last_oper_change is not None:
            self.time_since_last_oper_change = time_since_last_oper_change
        if up is not None:
            self.up = up

    @property
    def address_families(self):
        """Gets the address_families of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The address_families of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: list[object]
        """
        return self._address_families

    @address_families.setter
    def address_families(self, address_families):
        """Sets the address_families of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param address_families: The address_families of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: list[object]
        """

        self._address_families = address_families

    @property
    def allow_as_in(self):
        """Gets the allow_as_in of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The allow_as_in of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._allow_as_in

    @allow_as_in.setter
    def allow_as_in(self, allow_as_in):
        """Sets the allow_as_in of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param allow_as_in: The allow_as_in of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._allow_as_in = allow_as_in

    @property
    def as_override(self):
        """Gets the as_override of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The as_override of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._as_override

    @as_override.setter
    def as_override(self, as_override):
        """Sets the as_override of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param as_override: The as_override of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._as_override = as_override

    @property
    def bfd(self):
        """Gets the bfd of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The bfd of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: object
        """
        return self._bfd

    @bfd.setter
    def bfd(self, bfd):
        """Sets the bfd of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param bfd: The bfd of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: object
        """

        self._bfd = bfd

    @property
    def bfd_neighbor(self):
        """Gets the bfd_neighbor of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The bfd_neighbor of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: object
        """
        return self._bfd_neighbor

    @bfd_neighbor.setter
    def bfd_neighbor(self, bfd_neighbor):
        """Sets the bfd_neighbor of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param bfd_neighbor: The bfd_neighbor of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: object
        """

        self._bfd_neighbor = bfd_neighbor

    @property
    def bgp_type(self):
        """Gets the bgp_type of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The bgp_type of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._bgp_type

    @bgp_type.setter
    def bgp_type(self, bgp_type):
        """Sets the bgp_type of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param bgp_type: The bgp_type of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._bgp_type = bgp_type

    @property
    def default_originate(self):
        """Gets the default_originate of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The default_originate of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._default_originate

    @default_originate.setter
    def default_originate(self, default_originate):
        """Sets the default_originate of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param default_originate: The default_originate of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._default_originate = default_originate

    @property
    def enabled(self):
        """Gets the enabled of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The enabled of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param enabled: The enabled of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._enabled = enabled

    @property
    def hold_timer(self):
        """Gets the hold_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The hold_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._hold_timer

    @hold_timer.setter
    def hold_timer(self, hold_timer):
        """Sets the hold_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param hold_timer: The hold_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._hold_timer = hold_timer

    @property
    def id(self):
        """Gets the id of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The id of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param id: The id of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def keepalive_timer(self):
        """Gets the keepalive_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The keepalive_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._keepalive_timer

    @keepalive_timer.setter
    def keepalive_timer(self, keepalive_timer):
        """Sets the keepalive_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param keepalive_timer: The keepalive_timer of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._keepalive_timer = keepalive_timer

    @property
    def local_address(self):
        """Gets the local_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The local_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._local_address

    @local_address.setter
    def local_address(self, local_address):
        """Sets the local_address of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param local_address: The local_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._local_address = local_address

    @property
    def local_interface(self):
        """Gets the local_interface of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The local_interface of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._local_interface

    @local_interface.setter
    def local_interface(self, local_interface):
        """Sets the local_interface of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param local_interface: The local_interface of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._local_interface = local_interface

    @property
    def max_prefix(self):
        """Gets the max_prefix of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The max_prefix of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._max_prefix

    @max_prefix.setter
    def max_prefix(self, max_prefix):
        """Sets the max_prefix of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param max_prefix: The max_prefix of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._max_prefix = max_prefix

    @property
    def md5_password(self):
        """Gets the md5_password of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The md5_password of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._md5_password

    @md5_password.setter
    def md5_password(self, md5_password):
        """Sets the md5_password of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param md5_password: The md5_password of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._md5_password = md5_password

    @property
    def multi_hop(self):
        """Gets the multi_hop of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The multi_hop of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._multi_hop

    @multi_hop.setter
    def multi_hop(self, multi_hop):
        """Sets the multi_hop of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param multi_hop: The multi_hop of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._multi_hop = multi_hop

    @property
    def peer_asn(self):
        """Gets the peer_asn of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The peer_asn of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._peer_asn

    @peer_asn.setter
    def peer_asn(self, peer_asn):
        """Sets the peer_asn of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param peer_asn: The peer_asn of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._peer_asn = peer_asn

    @property
    def remote_address(self):
        """Gets the remote_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The remote_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._remote_address

    @remote_address.setter
    def remote_address(self, remote_address):
        """Sets the remote_address of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param remote_address: The remote_address of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._remote_address = remote_address

    @property
    def remove_private_as(self):
        """Gets the remove_private_as of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The remove_private_as of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._remove_private_as

    @remove_private_as.setter
    def remove_private_as(self, remove_private_as):
        """Sets the remove_private_as of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param remove_private_as: The remove_private_as of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._remove_private_as = remove_private_as

    @property
    def send_community(self):
        """Gets the send_community of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The send_community of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._send_community

    @send_community.setter
    def send_community(self, send_community):
        """Sets the send_community of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param send_community: The send_community of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._send_community = send_community

    @property
    def state(self):
        """Gets the state of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The state of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param state: The state of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def time_since_last_oper_change(self):
        """Gets the time_since_last_oper_change of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The time_since_last_oper_change of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: object
        """
        return self._time_since_last_oper_change

    @time_since_last_oper_change.setter
    def time_since_last_oper_change(self, time_since_last_oper_change):
        """Sets the time_since_last_oper_change of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param time_since_last_oper_change: The time_since_last_oper_change of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: object
        """

        self._time_since_last_oper_change = time_since_last_oper_change

    @property
    def up(self):
        """Gets the up of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501


        :return: The up of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :rtype: str
        """
        return self._up

    @up.setter
    def up(self, up):
        """Sets the up of this V1devicesdeviceIddraftDraftBgpNeighbors.


        :param up: The up of this V1devicesdeviceIddraftDraftBgpNeighbors.  # noqa: E501
        :type: str
        """

        self._up = up

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(V1devicesdeviceIddraftDraftBgpNeighbors, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, V1devicesdeviceIddraftDraftBgpNeighbors):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
