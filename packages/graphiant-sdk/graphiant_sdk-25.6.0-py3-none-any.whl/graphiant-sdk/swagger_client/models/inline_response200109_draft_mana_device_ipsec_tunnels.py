# coding: utf-8

"""
    Graphiant APIs

    **To use the APIs:**   1) Login using /api/v1/auth/login   2) Copy the value of \"token\" in the response   3) Click the \"Authorize\" button   4) In the \"Value\" text field enter: \"Bearer &lt;paste token from login api response&gt;\"   5) Click \"Authorize\"   6) If a valid token was entered, all requests are now authorized    **The token is valid for 2 hours, if it's expired (403 response from apis):**  1) Login again using the login api  2) Click \"Authorize\"  3) Click \"Logout\" and enter the new token just as before  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class InlineResponse200109DraftManaDeviceIpsecTunnels(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bgp': 'object',
        'destination_address': 'str',
        'ike_initiator': 'str',
        'ipsec_label': 'str',
        'lan': 'str',
        'local_address_v4': 'str',
        'local_address_v6': 'str',
        'local_circuit': 'str',
        'local_ike_peer_identity': 'str',
        'mtu': 'str',
        'name': 'str',
        'preshared_key': 'str',
        'remote_address_v4': 'str',
        'remote_address_v6': 'str',
        'remote_ike_peer_identity': 'str',
        'static': 'object',
        'tcp_mss': 'str',
        'vpn_profile': 'str'
    }

    attribute_map = {
        'bgp': 'bgp',
        'destination_address': 'destinationAddress',
        'ike_initiator': 'ikeInitiator',
        'ipsec_label': 'ipsecLabel',
        'lan': 'lan',
        'local_address_v4': 'localAddressV4',
        'local_address_v6': 'localAddressV6',
        'local_circuit': 'localCircuit',
        'local_ike_peer_identity': 'localIkePeerIdentity',
        'mtu': 'mtu',
        'name': 'name',
        'preshared_key': 'presharedKey',
        'remote_address_v4': 'remoteAddressV4',
        'remote_address_v6': 'remoteAddressV6',
        'remote_ike_peer_identity': 'remoteIkePeerIdentity',
        'static': 'static',
        'tcp_mss': 'tcpMss',
        'vpn_profile': 'vpnProfile'
    }

    def __init__(self, bgp=None, destination_address=None, ike_initiator=None, ipsec_label=None, lan=None, local_address_v4=None, local_address_v6=None, local_circuit=None, local_ike_peer_identity=None, mtu=None, name=None, preshared_key=None, remote_address_v4=None, remote_address_v6=None, remote_ike_peer_identity=None, static=None, tcp_mss=None, vpn_profile=None):  # noqa: E501
        """InlineResponse200109DraftManaDeviceIpsecTunnels - a model defined in Swagger"""  # noqa: E501
        self._bgp = None
        self._destination_address = None
        self._ike_initiator = None
        self._ipsec_label = None
        self._lan = None
        self._local_address_v4 = None
        self._local_address_v6 = None
        self._local_circuit = None
        self._local_ike_peer_identity = None
        self._mtu = None
        self._name = None
        self._preshared_key = None
        self._remote_address_v4 = None
        self._remote_address_v6 = None
        self._remote_ike_peer_identity = None
        self._static = None
        self._tcp_mss = None
        self._vpn_profile = None
        self.discriminator = None
        if bgp is not None:
            self.bgp = bgp
        if destination_address is not None:
            self.destination_address = destination_address
        if ike_initiator is not None:
            self.ike_initiator = ike_initiator
        if ipsec_label is not None:
            self.ipsec_label = ipsec_label
        if lan is not None:
            self.lan = lan
        if local_address_v4 is not None:
            self.local_address_v4 = local_address_v4
        if local_address_v6 is not None:
            self.local_address_v6 = local_address_v6
        if local_circuit is not None:
            self.local_circuit = local_circuit
        if local_ike_peer_identity is not None:
            self.local_ike_peer_identity = local_ike_peer_identity
        if mtu is not None:
            self.mtu = mtu
        if name is not None:
            self.name = name
        if preshared_key is not None:
            self.preshared_key = preshared_key
        if remote_address_v4 is not None:
            self.remote_address_v4 = remote_address_v4
        if remote_address_v6 is not None:
            self.remote_address_v6 = remote_address_v6
        if remote_ike_peer_identity is not None:
            self.remote_ike_peer_identity = remote_ike_peer_identity
        if static is not None:
            self.static = static
        if tcp_mss is not None:
            self.tcp_mss = tcp_mss
        if vpn_profile is not None:
            self.vpn_profile = vpn_profile

    @property
    def bgp(self):
        """Gets the bgp of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The bgp of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: object
        """
        return self._bgp

    @bgp.setter
    def bgp(self, bgp):
        """Sets the bgp of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param bgp: The bgp of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: object
        """

        self._bgp = bgp

    @property
    def destination_address(self):
        """Gets the destination_address of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The destination_address of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._destination_address

    @destination_address.setter
    def destination_address(self, destination_address):
        """Sets the destination_address of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param destination_address: The destination_address of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._destination_address = destination_address

    @property
    def ike_initiator(self):
        """Gets the ike_initiator of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The ike_initiator of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._ike_initiator

    @ike_initiator.setter
    def ike_initiator(self, ike_initiator):
        """Sets the ike_initiator of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param ike_initiator: The ike_initiator of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._ike_initiator = ike_initiator

    @property
    def ipsec_label(self):
        """Gets the ipsec_label of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The ipsec_label of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._ipsec_label

    @ipsec_label.setter
    def ipsec_label(self, ipsec_label):
        """Sets the ipsec_label of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param ipsec_label: The ipsec_label of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._ipsec_label = ipsec_label

    @property
    def lan(self):
        """Gets the lan of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The lan of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._lan

    @lan.setter
    def lan(self, lan):
        """Sets the lan of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param lan: The lan of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._lan = lan

    @property
    def local_address_v4(self):
        """Gets the local_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The local_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._local_address_v4

    @local_address_v4.setter
    def local_address_v4(self, local_address_v4):
        """Sets the local_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param local_address_v4: The local_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._local_address_v4 = local_address_v4

    @property
    def local_address_v6(self):
        """Gets the local_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The local_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._local_address_v6

    @local_address_v6.setter
    def local_address_v6(self, local_address_v6):
        """Sets the local_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param local_address_v6: The local_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._local_address_v6 = local_address_v6

    @property
    def local_circuit(self):
        """Gets the local_circuit of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The local_circuit of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._local_circuit

    @local_circuit.setter
    def local_circuit(self, local_circuit):
        """Sets the local_circuit of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param local_circuit: The local_circuit of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._local_circuit = local_circuit

    @property
    def local_ike_peer_identity(self):
        """Gets the local_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The local_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._local_ike_peer_identity

    @local_ike_peer_identity.setter
    def local_ike_peer_identity(self, local_ike_peer_identity):
        """Sets the local_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param local_ike_peer_identity: The local_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._local_ike_peer_identity = local_ike_peer_identity

    @property
    def mtu(self):
        """Gets the mtu of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The mtu of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._mtu

    @mtu.setter
    def mtu(self, mtu):
        """Sets the mtu of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param mtu: The mtu of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._mtu = mtu

    @property
    def name(self):
        """Gets the name of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The name of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param name: The name of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def preshared_key(self):
        """Gets the preshared_key of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The preshared_key of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._preshared_key

    @preshared_key.setter
    def preshared_key(self, preshared_key):
        """Sets the preshared_key of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param preshared_key: The preshared_key of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._preshared_key = preshared_key

    @property
    def remote_address_v4(self):
        """Gets the remote_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The remote_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._remote_address_v4

    @remote_address_v4.setter
    def remote_address_v4(self, remote_address_v4):
        """Sets the remote_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param remote_address_v4: The remote_address_v4 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._remote_address_v4 = remote_address_v4

    @property
    def remote_address_v6(self):
        """Gets the remote_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The remote_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._remote_address_v6

    @remote_address_v6.setter
    def remote_address_v6(self, remote_address_v6):
        """Sets the remote_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param remote_address_v6: The remote_address_v6 of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._remote_address_v6 = remote_address_v6

    @property
    def remote_ike_peer_identity(self):
        """Gets the remote_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The remote_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._remote_ike_peer_identity

    @remote_ike_peer_identity.setter
    def remote_ike_peer_identity(self, remote_ike_peer_identity):
        """Sets the remote_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param remote_ike_peer_identity: The remote_ike_peer_identity of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._remote_ike_peer_identity = remote_ike_peer_identity

    @property
    def static(self):
        """Gets the static of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The static of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: object
        """
        return self._static

    @static.setter
    def static(self, static):
        """Sets the static of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param static: The static of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: object
        """

        self._static = static

    @property
    def tcp_mss(self):
        """Gets the tcp_mss of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The tcp_mss of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._tcp_mss

    @tcp_mss.setter
    def tcp_mss(self, tcp_mss):
        """Sets the tcp_mss of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param tcp_mss: The tcp_mss of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._tcp_mss = tcp_mss

    @property
    def vpn_profile(self):
        """Gets the vpn_profile of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501


        :return: The vpn_profile of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :rtype: str
        """
        return self._vpn_profile

    @vpn_profile.setter
    def vpn_profile(self, vpn_profile):
        """Sets the vpn_profile of this InlineResponse200109DraftManaDeviceIpsecTunnels.


        :param vpn_profile: The vpn_profile of this InlineResponse200109DraftManaDeviceIpsecTunnels.  # noqa: E501
        :type: str
        """

        self._vpn_profile = vpn_profile

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse200109DraftManaDeviceIpsecTunnels, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200109DraftManaDeviceIpsecTunnels):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
