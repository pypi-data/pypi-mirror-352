# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: app/commander/config.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Config",
    "ReflectionConfig",
)

from dataclasses import dataclass

import betterproto2

from ....message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False)
class Config(betterproto2.Message):
    """
    Config is the settings for Commander.
    """

    tag: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)
    """
    Tag of the outbound handler that handles grpc connections.
    """

    listen: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)
    """
    Network address of commander grpc service.
    """

    service: "list[__common__serial__.TypedMessage]" = betterproto2.field(
        2, betterproto2.TYPE_MESSAGE, repeated=True
    )
    """
    Services that supported by this server. All services must implement Service
    interface.
    """


default_message_pool.register_message("xray.app.commander", "Config", Config)


@dataclass(eq=False, repr=False)
class ReflectionConfig(betterproto2.Message):
    """
    ReflectionConfig is the placeholder config for ReflectionService.
    """

    pass


default_message_pool.register_message(
    "xray.app.commander", "ReflectionConfig", ReflectionConfig
)


from ...common import serial as __common__serial__
