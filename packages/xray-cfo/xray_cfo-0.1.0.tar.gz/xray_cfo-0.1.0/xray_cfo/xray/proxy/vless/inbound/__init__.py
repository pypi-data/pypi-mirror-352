# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: proxy/vless/inbound/config.proto
# plugin: python-betterproto2
# This file has been @generated

__all__ = (
    "Config",
    "Fallback",
)

from dataclasses import dataclass

import betterproto2

from .....message_pool import default_message_pool

betterproto2.check_compiler_version("0.5.1")


@dataclass(eq=False, repr=False)
class Config(betterproto2.Message):
    clients: "list[___common__protocol__.User]" = betterproto2.field(
        1, betterproto2.TYPE_MESSAGE, repeated=True
    )

    decryption: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)
    """
    Decryption settings. Only applies to server side, and only accepts "none"
    for now.
    """

    fallbacks: "list[Fallback]" = betterproto2.field(
        3, betterproto2.TYPE_MESSAGE, repeated=True
    )


default_message_pool.register_message("xray.proxy.vless.inbound", "Config", Config)


@dataclass(eq=False, repr=False)
class Fallback(betterproto2.Message):
    name: "str" = betterproto2.field(1, betterproto2.TYPE_STRING)

    alpn: "str" = betterproto2.field(2, betterproto2.TYPE_STRING)

    path: "str" = betterproto2.field(3, betterproto2.TYPE_STRING)

    type: "str" = betterproto2.field(4, betterproto2.TYPE_STRING)

    dest: "str" = betterproto2.field(5, betterproto2.TYPE_STRING)

    xver: "int" = betterproto2.field(6, betterproto2.TYPE_UINT64)


default_message_pool.register_message("xray.proxy.vless.inbound", "Fallback", Fallback)


from ....common import protocol as ___common__protocol__
