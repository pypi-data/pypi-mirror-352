[tool.poetry]
name = "student-bluebook"
version = "1.1.2"
description = "Blue Book generates multiple-choice questions for IT certifications, e.g. CompTIA A+ and Security+"
authors = ["Ilya Smut <ilya.smut.off.g@gmail.com>"]
readme = "README.md"
packages = [{include = "bluebook"}]
homepage = "https://student-bluebook.notion.site/"
repository = "https://github.com/ilya-smut/blue-book"
documentation = "https://github.com/ilya-smut/blue-book/wiki"

[tool.poetry.dependencies]
python = ">=3.10"
google-genai = ">=1.2.0,<2.0.0"
flask = "3.1.1"
click = ">=8.1.8,<9.0.0"
pydantic = "^2.10.6"
sqlmodel = "^0.0.24"
bleach = "^6.2.0"
jinja2 = "3.1.6"
mypy = "^1.16.0"
types-bleach = "^6.2.0.20250514"
ruff = "^0.11.12"

[tool.poetry.scripts]
bluebook = "bluebook.fl:bluebook"

[tool.mypy]
plugins = ["pydantic.mypy"]
python_version = "3.13"
exclude = 'vendor/*'
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = true

[[tool.mypy.overrides]]
module = [
  "vendor.*",
]
follow_imports = "skip"

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
# if rule doesn't make sense, add it to ignore:
exclude = []
lint.per-file-ignores."*_test.py" = [
    # at least this three should be fine in tests:
    "S101",    # asserts allowed in tests...
    "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
    "PLR2004", # Magic value used in comparison, ...
    "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
    "S105",    # Possible hardcoded password
    "S106",    # Possible hardcoded password
]
lint.per-file-ignores."*templates/*.py" = [
    "E501", # line too long
]
lint.flake8-bugbear.extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
]
lint.ignore = [
    "D211",   # ignore in favor of D203
    "D21",    # ignore in favor of D213
    "ANN101", # don't use type annotations for self
    "ANN102", # don't use type annotations for cls
    "ANN003", # don't use type annotations for **kwargs
    "ANN401", # allow Any
    "RET504", # allow unnecessary assigments before return
]
line-length = 100
lint.select = [
    "F",     # avoid common mistakes
    "B",     # common bug patterns
    "E",     # format code consistently
    "N",     # use naming conventions
    "ANN",   # use type annotations
    "W",     # pycodestyle warnings
    "I",     # sort packages
    "ICN",   # use import convention aliases
    "ASYNC", # use async correctly
    "S",     # avoid common security issues
    "UP",    # use latest python syntax
    "C90",   # reduce complexity of the file
    "A",     # don't redefine build-in functions
    "INP",   # add init.py to directories
    "T20",   # don't use print (in production)
    "T100",  # don't use debbugers (in production)
    "PT",    # write test correctly
    "RET",   # return correctly
    "SIM",   # simplify your code
    "ARG",   # avoid unused arguments
    "PTH",   # use pathlib correctly
    "TD",    # todo should have ticket and owner
    "ERA",   # no commented out code
    "PERF",  # common performance issues
    "RUF",   # ruff best practices

    # Nice to have:
    "C4",  # use correct comprehensions
    "COM", # format commas
    "DTZ", # best practices for datetime
    "EXE", # shebang rules
    "ISC", # string concatnation
    "G",   # logging best practices
    "PIE", # misc lints
    "PD",  # pandas best practices
    "NPY", # numpy best practices
]

[tool.black]
line-length = 100  # Matches the line-length setting in ruff
target-version = ['py311']  # Target the same Python version as specified in the dependencies

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
