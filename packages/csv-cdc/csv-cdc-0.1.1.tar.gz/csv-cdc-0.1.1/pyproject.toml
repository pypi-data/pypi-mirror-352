[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
version = "0.1.1"
name = "csv-cdc"
authors = [
    {name = "Mauro Bartolomeu dos Reis", email = "maurohktga@gmail.com"},
]
description = "A high-performance CSV Change Data Capture tool"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Topic :: Text Processing",
]
keywords = ["csv", "diff", "cdc", "change-data-capture", "data-comparison"]
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "polars>=0.15.0",
    "xxhash>=3.0.0",
    "colorama>=0.4.4",
    "tqdm>=4.62.0",
]

[project.urls]
Homepage = "https://github.com/maurohkcba/csv-cdc"
"Bug Reports" = "https://github.com/maurohkcba/csv-cdc/issues"
"Source" = "https://github.com/maurohkcba/csv-cdc"
"Documentation" = "https://github.com/maurohkcba/csv-cdc/wiki"

[project.scripts]
csvcdc = "csvcdc:main"
csv-cdc = "csvcdc:main"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.950",
    "pre-commit>=2.0",
]
test = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
]

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["csvcdc"]
omit = [
    "tests/*",
    "examples/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]