[build-system]
requires = ["setuptools >= 77.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ginx"
version = "0.1.5"
description = "A command-line script runner powered by YAML configuration"
readme = "README.md"
authors = [{ name = "Eric Kweyunga", email = "maverickweyunga@gmail.com" }]
maintainers = [{ name = "Eric Kweyunga", email = "maverickweyunga@gmail.com" }]
keywords = ["cli", "automation", "scripts", "yaml", "runner", "task"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = ["typer>=0.9.0", "PyYAML>=6.0", "rich>=13.0.0", "packaging>=25.0.0"]
license = "MIT"
license-files = [
    "LICENSE",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "packaging>=25.0.0",
    "dotenv>=0.9.9",
]
test = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "pytest-mock>=3.10.0"]

[project.urls]
Homepage = "https://github.com/erickweyunga/ginx"
Documentation = "https://github.com/erickweyunga/ginx#readme"
Repository = "https://github.com/erickweyunga/ginx.git"
"Bug Reports" = "https://github.com/erickweyunga/ginx/issues"
Changelog = "https://github.com/erickweyunga/ginx/blob/main/CHANGELOG.md"

[project.scripts]
ginx = "ginx.runner:app"

[tool.setuptools.packages.find]
where = ["src"]
include = ["ginx"]

[tool.setuptools.package-data]
ginx = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ginx"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["yaml.*"]
ignore_missing_imports = true

[tool.coverage.run]
source = ["ginx"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
